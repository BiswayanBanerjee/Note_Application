{"ast":null,"code":"var _jsxFileName = \"D:\\\\Study\\\\Code\\\\Self-Projects\\\\NoteApp\\\\note-taking-frontend\\\\src\\\\components\\\\Auth\\\\Signup.tsx\",\n  _s = $RefreshSig$();\n// import React from \"react\";\n// import { Formik, Form, Field } from \"formik\";\n// import * as Yup from \"yup\";\n// import { Button, TextField, Box, Typography } from \"@mui/material\";\n// import api from \"../../services/api\";\n\n// const Signup: React.FC = () => {\n//   const initialValues = { email: \"\", password: \"\" };\n\n//   const validationSchema = Yup.object({\n//     email: Yup.string().email(\"Invalid email\").required(\"Required\"),\n//     password: Yup.string().min(6, \"Password must be at least 6 characters\").required(\"Required\"),\n//   });\n\n//   const handleSubmit = async (values: typeof initialValues) => {\n//     try {\n//       await api.post(\"/auth/signup\", values);\n//       alert(\"Signup successful! Please login.\");\n//       window.location.href = \"/login\";\n//     } catch (error) {\n//       console.error(\"Signup failed:\", error);\n//     }\n//   };\n\n//   return (\n//     <Box maxWidth={400} mx=\"auto\" mt={5}>\n//       <Typography variant=\"h4\" gutterBottom>Signup</Typography>\n//       <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={handleSubmit}>\n//         {({ errors, touched }) => (\n//           <Form>\n//             <Field name=\"email\" as={TextField} label=\"Email\" fullWidth margin=\"normal\" error={touched.email && !!errors.email} helperText={touched.email && errors.email} />\n//             <Field name=\"password\" as={TextField} label=\"Password\" type=\"password\" fullWidth margin=\"normal\" error={touched.password && !!errors.password} helperText={touched.password && errors.password} />\n//             <Button type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth>Signup</Button>\n//           </Form>\n//         )}\n//       </Formik>\n//     </Box>\n//   );\n// };\n\n// export default Signup;\n\n// import React, { useState } from \"react\";\n// import {\n//   Box,\n//   Button,\n//   Container,\n//   Grid,\n//   IconButton,\n//   InputAdornment,\n//   TextField,\n//   Typography,\n// } from \"@mui/material\";\n// import { Visibility, VisibilityOff, CalendarToday } from \"@mui/icons-material\";\n\n// const Signup: React.FC = () => {\n//   const [showOtp, setShowOtp] = useState(false);\n\n//   const handleOtpVisibility = () => setShowOtp(!showOtp);\n\n//   return (\n//     <Container maxWidth=\"lg\" sx={{ height: \"100vh\", display: \"flex\", alignItems: \"center\" }}>\n//       <Grid container spacing={2} sx={{ boxShadow: 3, borderRadius: 3, overflow: \"hidden\" }}>\n//         {/* Left Side - Signup Form */}\n//         <Grid item xs={12} md={6} sx={{ padding: 4 }}>\n//           <Typography variant=\"h4\" fontWeight=\"bold\" gutterBottom>\n//             Sign up\n//           </Typography>\n//           <Typography variant=\"body1\" color=\"text.secondary\" mb={4}>\n//             Sign up to enjoy the feature of HD\n//           </Typography>\n//           <Box component=\"form\" noValidate autoComplete=\"off\">\n//             <TextField\n//               label=\"Your Name\"\n//               fullWidth\n//               margin=\"normal\"\n//               variant=\"outlined\"\n//             />\n//             <TextField\n//               label=\"Date of Birth\"\n//               fullWidth\n//               margin=\"normal\"\n//               variant=\"outlined\"\n//               InputProps={{\n//                 endAdornment: (\n//                   <InputAdornment position=\"end\">\n//                     <CalendarToday />\n//                   </InputAdornment>\n//                 ),\n//               }}\n//             />\n//             <TextField\n//               label=\"Email\"\n//               fullWidth\n//               margin=\"normal\"\n//               variant=\"outlined\"\n//               type=\"email\"\n//             />\n//             <TextField\n//               label=\"OTP\"\n//               fullWidth\n//               margin=\"normal\"\n//               variant=\"outlined\"\n//               type={showOtp ? \"text\" : \"password\"}\n//               InputProps={{\n//                 endAdornment: (\n//                   <InputAdornment position=\"end\">\n//                     <IconButton onClick={handleOtpVisibility}>\n//                       {showOtp ? <VisibilityOff /> : <Visibility />}\n//                     </IconButton>\n//                   </InputAdornment>\n//                 ),\n//               }}\n//             />\n//             <Button\n//               variant=\"contained\"\n//               fullWidth\n//               sx={{ marginY: 2, paddingY: 1.5 }}\n//             >\n//               Sign up\n//             </Button>\n//           </Box>\n//           <Typography align=\"center\" variant=\"body2\">\n//             Already have an account?{\" \"}\n//             <Typography\n//               component=\"span\"\n//               color=\"primary\"\n//               sx={{ cursor: \"pointer\" }}\n//             >\n//               Sign in\n//             </Typography>\n//           </Typography>\n//         </Grid>\n\n//         {/* Right Side - Image */}\n//         <Grid\n//           item\n//           xs={12}\n//           md={6}\n//           sx={{\n//             backgroundImage: \"url('/assets/images/signup-bg.png')\",\n//             backgroundSize: \"cover\",\n//             backgroundPosition: \"center\",\n//           }}\n//         ></Grid>\n//       </Grid>\n//     </Container>\n//   );\n// };\n\n// export default Signup;\n\nimport React, { useState } from \"react\";\nimport { Button, TextField, Typography, Grid, IconButton, InputAdornment, CircularProgress } from \"@mui/material\";\nimport { Visibility, VisibilityOff, CalendarToday } from \"@mui/icons-material\";\nimport { useNavigate } from \"react-router-dom\";\nimport api from \"../../services/api\"; // Importing API service\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Signup = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    name: \"\",\n    date_of_birth: \"\",\n    email: \"\",\n    otp: \"\",\n    password: \"\"\n  });\n  const [showOtpField, setShowOtpField] = useState(false);\n  const [otpSent, setOtpSent] = useState(false);\n  const [showPassword, setShowPassword] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate();\n\n  // Handle form field changes\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  // Handle OTP visibility toggle\n  const handleOtpVisibility = () => setShowPassword(!showPassword);\n\n  // Send signup request\n  const handleSignup = async () => {\n    try {\n      setLoading(true);\n      const {\n        name,\n        email,\n        date_of_birth,\n        password\n      } = formData;\n\n      // API Call for signup\n      const response = await api.post(\"/auth/signup\", {\n        name,\n        email,\n        date_of_birth,\n        password\n      });\n      setOtpSent(true);\n      setLoading(false);\n      alert(response.data.message); // \"OTP sent to email. Please verify to complete signup.\"\n    } catch (error) {\n      var _error$response, _error$response$data;\n      setLoading(false);\n      alert(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || \"Something went wrong\");\n    }\n  };\n\n  // Handle OTP verification\n  const handleVerifyOtp = async () => {\n    try {\n      setLoading(true);\n      const {\n        email,\n        otp\n      } = formData;\n\n      // API Call for verifying OTP\n      const response = await api.post(\"/auth/verify-signup-otp\", {\n        email,\n        otp\n      });\n      setLoading(false);\n      alert(response.data.message); // \"User registered successfully\"\n      navigate(\"/login\"); // Redirect to login page\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      setLoading(false);\n      alert(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || \"Invalid OTP\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    sx: {\n      height: \"100vh\",\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      background: \"url('/assets/images/signup-bg.png') no-repeat center center\",\n      backgroundSize: \"cover\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 11,\n      sm: 8,\n      md: 6,\n      lg: 4,\n      sx: {\n        background: \"rgba(255, 255, 255, 0.9)\",\n        borderRadius: \"12px\",\n        boxShadow: 3,\n        padding: \"32px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        fontWeight: \"bold\",\n        gutterBottom: true,\n        children: \"Sign up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        color: \"text.secondary\",\n        mb: 4,\n        children: \"Sign up to enjoy the feature of HD\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Your Name\",\n        name: \"name\",\n        fullWidth: true,\n        margin: \"normal\",\n        variant: \"outlined\",\n        value: formData.name,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Date of Birth\",\n        name: \"date_of_birth\",\n        fullWidth: true,\n        margin: \"normal\",\n        variant: \"outlined\",\n        value: formData.date_of_birth,\n        onChange: handleChange,\n        InputProps: {\n          endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n            position: \"end\",\n            children: /*#__PURE__*/_jsxDEV(CalendarToday, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 15\n          }, this)\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Email\",\n        name: \"email\",\n        fullWidth: true,\n        margin: \"normal\",\n        variant: \"outlined\",\n        value: formData.email,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 9\n      }, this), otpSent ? /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"OTP\",\n        name: \"otp\",\n        fullWidth: true,\n        margin: \"normal\",\n        variant: \"outlined\",\n        value: formData.otp,\n        onChange: handleChange,\n        type: showPassword ? \"text\" : \"password\",\n        InputProps: {\n          endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n            position: \"end\",\n            children: /*#__PURE__*/_jsxDEV(IconButton, {\n              onClick: handleOtpVisibility,\n              children: showPassword ? /*#__PURE__*/_jsxDEV(VisibilityOff, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 314,\n                columnNumber: 37\n              }, this) : /*#__PURE__*/_jsxDEV(Visibility, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 314,\n                columnNumber: 57\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 17\n          }, this)\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Password\",\n        name: \"password\",\n        fullWidth: true,\n        margin: \"normal\",\n        variant: \"outlined\",\n        type: \"password\",\n        value: formData.password,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        fullWidth: true,\n        sx: {\n          marginY: 2,\n          paddingY: 1.5\n        },\n        onClick: otpSent ? handleVerifyOtp : handleSignup,\n        disabled: loading,\n        children: loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n          size: 24\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 22\n        }, this) : otpSent ? \"Verify OTP\" : \"Sign up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        align: \"center\",\n        variant: \"body2\",\n        children: [\"Already have an account?\", \" \", /*#__PURE__*/_jsxDEV(Typography, {\n          component: \"span\",\n          color: \"primary\",\n          sx: {\n            cursor: \"pointer\"\n          },\n          onClick: () => navigate(\"/login\"),\n          children: \"Sign in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 234,\n    columnNumber: 5\n  }, this);\n};\n_s(Signup, \"J4WoT60S4Ovl/A9Z/Xwsx95zMdg=\", false, function () {\n  return [useNavigate];\n});\n_c = Signup;\nexport default Signup;\nvar _c;\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"names":["React","useState","Button","TextField","Typography","Grid","IconButton","InputAdornment","CircularProgress","Visibility","VisibilityOff","CalendarToday","useNavigate","api","jsxDEV","_jsxDEV","Signup","_s","formData","setFormData","name","date_of_birth","email","otp","password","showOtpField","setShowOtpField","otpSent","setOtpSent","showPassword","setShowPassword","loading","setLoading","navigate","handleChange","e","value","target","prev","handleOtpVisibility","handleSignup","response","post","alert","data","message","error","_error$response","_error$response$data","handleVerifyOtp","_error$response2","_error$response2$data","container","sx","height","display","alignItems","justifyContent","background","backgroundSize","children","item","xs","sm","md","lg","borderRadius","boxShadow","padding","variant","fontWeight","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","color","mb","label","fullWidth","margin","onChange","InputProps","endAdornment","position","type","onClick","marginY","paddingY","disabled","size","align","component","cursor","_c","$RefreshReg$"],"sources":["D:/Study/Code/Self-Projects/NoteApp/note-taking-frontend/src/components/Auth/Signup.tsx"],"sourcesContent":["// import React from \"react\";\r\n// import { Formik, Form, Field } from \"formik\";\r\n// import * as Yup from \"yup\";\r\n// import { Button, TextField, Box, Typography } from \"@mui/material\";\r\n// import api from \"../../services/api\";\r\n\r\n// const Signup: React.FC = () => {\r\n//   const initialValues = { email: \"\", password: \"\" };\r\n\r\n//   const validationSchema = Yup.object({\r\n//     email: Yup.string().email(\"Invalid email\").required(\"Required\"),\r\n//     password: Yup.string().min(6, \"Password must be at least 6 characters\").required(\"Required\"),\r\n//   });\r\n\r\n//   const handleSubmit = async (values: typeof initialValues) => {\r\n//     try {\r\n//       await api.post(\"/auth/signup\", values);\r\n//       alert(\"Signup successful! Please login.\");\r\n//       window.location.href = \"/login\";\r\n//     } catch (error) {\r\n//       console.error(\"Signup failed:\", error);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <Box maxWidth={400} mx=\"auto\" mt={5}>\r\n//       <Typography variant=\"h4\" gutterBottom>Signup</Typography>\r\n//       <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={handleSubmit}>\r\n//         {({ errors, touched }) => (\r\n//           <Form>\r\n//             <Field name=\"email\" as={TextField} label=\"Email\" fullWidth margin=\"normal\" error={touched.email && !!errors.email} helperText={touched.email && errors.email} />\r\n//             <Field name=\"password\" as={TextField} label=\"Password\" type=\"password\" fullWidth margin=\"normal\" error={touched.password && !!errors.password} helperText={touched.password && errors.password} />\r\n//             <Button type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth>Signup</Button>\r\n//           </Form>\r\n//         )}\r\n//       </Formik>\r\n//     </Box>\r\n//   );\r\n// };\r\n\r\n// export default Signup;\r\n\r\n\r\n// import React, { useState } from \"react\";\r\n// import {\r\n//   Box,\r\n//   Button,\r\n//   Container,\r\n//   Grid,\r\n//   IconButton,\r\n//   InputAdornment,\r\n//   TextField,\r\n//   Typography,\r\n// } from \"@mui/material\";\r\n// import { Visibility, VisibilityOff, CalendarToday } from \"@mui/icons-material\";\r\n\r\n// const Signup: React.FC = () => {\r\n//   const [showOtp, setShowOtp] = useState(false);\r\n\r\n//   const handleOtpVisibility = () => setShowOtp(!showOtp);\r\n\r\n//   return (\r\n//     <Container maxWidth=\"lg\" sx={{ height: \"100vh\", display: \"flex\", alignItems: \"center\" }}>\r\n//       <Grid container spacing={2} sx={{ boxShadow: 3, borderRadius: 3, overflow: \"hidden\" }}>\r\n//         {/* Left Side - Signup Form */}\r\n//         <Grid item xs={12} md={6} sx={{ padding: 4 }}>\r\n//           <Typography variant=\"h4\" fontWeight=\"bold\" gutterBottom>\r\n//             Sign up\r\n//           </Typography>\r\n//           <Typography variant=\"body1\" color=\"text.secondary\" mb={4}>\r\n//             Sign up to enjoy the feature of HD\r\n//           </Typography>\r\n//           <Box component=\"form\" noValidate autoComplete=\"off\">\r\n//             <TextField\r\n//               label=\"Your Name\"\r\n//               fullWidth\r\n//               margin=\"normal\"\r\n//               variant=\"outlined\"\r\n//             />\r\n//             <TextField\r\n//               label=\"Date of Birth\"\r\n//               fullWidth\r\n//               margin=\"normal\"\r\n//               variant=\"outlined\"\r\n//               InputProps={{\r\n//                 endAdornment: (\r\n//                   <InputAdornment position=\"end\">\r\n//                     <CalendarToday />\r\n//                   </InputAdornment>\r\n//                 ),\r\n//               }}\r\n//             />\r\n//             <TextField\r\n//               label=\"Email\"\r\n//               fullWidth\r\n//               margin=\"normal\"\r\n//               variant=\"outlined\"\r\n//               type=\"email\"\r\n//             />\r\n//             <TextField\r\n//               label=\"OTP\"\r\n//               fullWidth\r\n//               margin=\"normal\"\r\n//               variant=\"outlined\"\r\n//               type={showOtp ? \"text\" : \"password\"}\r\n//               InputProps={{\r\n//                 endAdornment: (\r\n//                   <InputAdornment position=\"end\">\r\n//                     <IconButton onClick={handleOtpVisibility}>\r\n//                       {showOtp ? <VisibilityOff /> : <Visibility />}\r\n//                     </IconButton>\r\n//                   </InputAdornment>\r\n//                 ),\r\n//               }}\r\n//             />\r\n//             <Button\r\n//               variant=\"contained\"\r\n//               fullWidth\r\n//               sx={{ marginY: 2, paddingY: 1.5 }}\r\n//             >\r\n//               Sign up\r\n//             </Button>\r\n//           </Box>\r\n//           <Typography align=\"center\" variant=\"body2\">\r\n//             Already have an account?{\" \"}\r\n//             <Typography\r\n//               component=\"span\"\r\n//               color=\"primary\"\r\n//               sx={{ cursor: \"pointer\" }}\r\n//             >\r\n//               Sign in\r\n//             </Typography>\r\n//           </Typography>\r\n//         </Grid>\r\n\r\n//         {/* Right Side - Image */}\r\n//         <Grid\r\n//           item\r\n//           xs={12}\r\n//           md={6}\r\n//           sx={{\r\n//             backgroundImage: \"url('/assets/images/signup-bg.png')\",\r\n//             backgroundSize: \"cover\",\r\n//             backgroundPosition: \"center\",\r\n//           }}\r\n//         ></Grid>\r\n//       </Grid>\r\n//     </Container>\r\n//   );\r\n// };\r\n\r\n// export default Signup;\r\n\r\nimport React, { useState } from \"react\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  TextField,\r\n  Typography,\r\n  Grid,\r\n  IconButton,\r\n  InputAdornment,\r\n  CircularProgress,\r\n} from \"@mui/material\";\r\nimport { Visibility, VisibilityOff, CalendarToday } from \"@mui/icons-material\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport api from \"../../services/api\"; // Importing API service\r\n\r\nconst Signup: React.FC = () => {\r\n  const [formData, setFormData] = useState({\r\n    name: \"\",\r\n    date_of_birth: \"\",\r\n    email: \"\",\r\n    otp: \"\",\r\n    password: \"\",\r\n  });\r\n  const [showOtpField, setShowOtpField] = useState(false);\r\n  const [otpSent, setOtpSent] = useState(false);\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  // Handle form field changes\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  // Handle OTP visibility toggle\r\n  const handleOtpVisibility = () => setShowPassword(!showPassword);\r\n\r\n  // Send signup request\r\n  const handleSignup = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const { name, email, date_of_birth, password } = formData;\r\n\r\n      // API Call for signup\r\n      const response = await api.post(\"/auth/signup\", {\r\n        name,\r\n        email,\r\n        date_of_birth,\r\n        password,\r\n      });\r\n\r\n      setOtpSent(true);\r\n      setLoading(false);\r\n      alert(response.data.message); // \"OTP sent to email. Please verify to complete signup.\"\r\n    } catch (error: any) {\r\n      setLoading(false);\r\n      alert(error.response?.data?.message || \"Something went wrong\");\r\n    }\r\n  };\r\n\r\n  // Handle OTP verification\r\n  const handleVerifyOtp = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const { email, otp } = formData;\r\n\r\n      // API Call for verifying OTP\r\n      const response = await api.post(\"/auth/verify-signup-otp\", { email, otp });\r\n\r\n      setLoading(false);\r\n      alert(response.data.message); // \"User registered successfully\"\r\n      navigate(\"/login\"); // Redirect to login page\r\n    } catch (error: any) {\r\n      setLoading(false);\r\n      alert(error.response?.data?.message || \"Invalid OTP\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      sx={{\r\n        height: \"100vh\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n        background: \"url('/assets/images/signup-bg.png') no-repeat center center\",\r\n        backgroundSize: \"cover\",\r\n      }}\r\n    >\r\n      <Grid\r\n        item\r\n        xs={11}\r\n        sm={8}\r\n        md={6}\r\n        lg={4}\r\n        sx={{\r\n          background: \"rgba(255, 255, 255, 0.9)\",\r\n          borderRadius: \"12px\",\r\n          boxShadow: 3,\r\n          padding: \"32px\",\r\n        }}\r\n      >\r\n        <Typography variant=\"h4\" fontWeight=\"bold\" gutterBottom>\r\n          Sign up\r\n        </Typography>\r\n        <Typography variant=\"body1\" color=\"text.secondary\" mb={4}>\r\n          Sign up to enjoy the feature of HD\r\n        </Typography>\r\n\r\n        {/* Form Fields */}\r\n        <TextField\r\n          label=\"Your Name\"\r\n          name=\"name\"\r\n          fullWidth\r\n          margin=\"normal\"\r\n          variant=\"outlined\"\r\n          value={formData.name}\r\n          onChange={handleChange}\r\n        />\r\n        <TextField\r\n          label=\"Date of Birth\"\r\n          name=\"date_of_birth\"\r\n          fullWidth\r\n          margin=\"normal\"\r\n          variant=\"outlined\"\r\n          value={formData.date_of_birth}\r\n          onChange={handleChange}\r\n          InputProps={{\r\n            endAdornment: (\r\n              <InputAdornment position=\"end\">\r\n                <CalendarToday />\r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n        />\r\n        <TextField\r\n          label=\"Email\"\r\n          name=\"email\"\r\n          fullWidth\r\n          margin=\"normal\"\r\n          variant=\"outlined\"\r\n          value={formData.email}\r\n          onChange={handleChange}\r\n        />\r\n        {otpSent ? (\r\n          <TextField\r\n            label=\"OTP\"\r\n            name=\"otp\"\r\n            fullWidth\r\n            margin=\"normal\"\r\n            variant=\"outlined\"\r\n            value={formData.otp}\r\n            onChange={handleChange}\r\n            type={showPassword ? \"text\" : \"password\"}\r\n            InputProps={{\r\n              endAdornment: (\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton onClick={handleOtpVisibility}>\r\n                    {showPassword ? <VisibilityOff /> : <Visibility />}\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              ),\r\n            }}\r\n          />\r\n        ) : (\r\n          <TextField\r\n            label=\"Password\"\r\n            name=\"password\"\r\n            fullWidth\r\n            margin=\"normal\"\r\n            variant=\"outlined\"\r\n            type=\"password\"\r\n            value={formData.password}\r\n            onChange={handleChange}\r\n          />\r\n        )}\r\n\r\n        {/* Action Button */}\r\n        <Button\r\n          variant=\"contained\"\r\n          fullWidth\r\n          sx={{ marginY: 2, paddingY: 1.5 }}\r\n          onClick={otpSent ? handleVerifyOtp : handleSignup}\r\n          disabled={loading}\r\n        >\r\n          {loading ? <CircularProgress size={24} /> : otpSent ? \"Verify OTP\" : \"Sign up\"}\r\n        </Button>\r\n\r\n        {/* Navigate to Login */}\r\n        <Typography align=\"center\" variant=\"body2\">\r\n          Already have an account?{\" \"}\r\n          <Typography\r\n            component=\"span\"\r\n            color=\"primary\"\r\n            sx={{ cursor: \"pointer\" }}\r\n            onClick={() => navigate(\"/login\")}\r\n          >\r\n            Sign in\r\n          </Typography>\r\n        </Typography>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n\r\n\r\n\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAEEC,MAAM,EACNC,SAAS,EACTC,UAAU,EACVC,IAAI,EACJC,UAAU,EACVC,cAAc,EACdC,gBAAgB,QACX,eAAe;AACtB,SAASC,UAAU,EAAEC,aAAa,EAAEC,aAAa,QAAQ,qBAAqB;AAC9E,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,GAAG,MAAM,oBAAoB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,MAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGlB,QAAQ,CAAC;IACvCmB,IAAI,EAAE,EAAE;IACRC,aAAa,EAAE,EAAE;IACjBC,KAAK,EAAE,EAAE;IACTC,GAAG,EAAE,EAAE;IACPC,QAAQ,EAAE;EACZ,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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}