{"ast":null,"code":"var _jsxFileName = \"D:\\\\Study\\\\Code\\\\Self-Projects\\\\NoteApp\\\\note-taking-frontend\\\\src\\\\components\\\\Auth\\\\Signup.tsx\",\n  _s = $RefreshSig$();\n// import React from \"react\";\n// import { Formik, Form, Field } from \"formik\";\n// import * as Yup from \"yup\";\n// import { Button, TextField, Box, Typography } from \"@mui/material\";\n// import api from \"../../services/api\";\n\n// const Signup: React.FC = () => {\n//   const initialValues = { email: \"\", password: \"\" };\n\n//   const validationSchema = Yup.object({\n//     email: Yup.string().email(\"Invalid email\").required(\"Required\"),\n//     password: Yup.string().min(6, \"Password must be at least 6 characters\").required(\"Required\"),\n//   });\n\n//   const handleSubmit = async (values: typeof initialValues) => {\n//     try {\n//       await api.post(\"/auth/signup\", values);\n//       alert(\"Signup successful! Please login.\");\n//       window.location.href = \"/login\";\n//     } catch (error) {\n//       console.error(\"Signup failed:\", error);\n//     }\n//   };\n\n//   return (\n//     <Box maxWidth={400} mx=\"auto\" mt={5}>\n//       <Typography variant=\"h4\" gutterBottom>Signup</Typography>\n//       <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={handleSubmit}>\n//         {({ errors, touched }) => (\n//           <Form>\n//             <Field name=\"email\" as={TextField} label=\"Email\" fullWidth margin=\"normal\" error={touched.email && !!errors.email} helperText={touched.email && errors.email} />\n//             <Field name=\"password\" as={TextField} label=\"Password\" type=\"password\" fullWidth margin=\"normal\" error={touched.password && !!errors.password} helperText={touched.password && errors.password} />\n//             <Button type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth>Signup</Button>\n//           </Form>\n//         )}\n//       </Formik>\n//     </Box>\n//   );\n// };\n\n// export default Signup;\n\n// import React, { useState } from \"react\";\n// import {\n//   Box,\n//   Button,\n//   Container,\n//   Grid,\n//   IconButton,\n//   InputAdornment,\n//   TextField,\n//   Typography,\n// } from \"@mui/material\";\n// import { Visibility, VisibilityOff, CalendarToday } from \"@mui/icons-material\";\n\n// const Signup: React.FC = () => {\n//   const [showOtp, setShowOtp] = useState(false);\n\n//   const handleOtpVisibility = () => setShowOtp(!showOtp);\n\n//   return (\n//     <Container maxWidth=\"lg\" sx={{ height: \"100vh\", display: \"flex\", alignItems: \"center\" }}>\n//       <Grid container spacing={2} sx={{ boxShadow: 3, borderRadius: 3, overflow: \"hidden\" }}>\n//         {/* Left Side - Signup Form */}\n//         <Grid item xs={12} md={6} sx={{ padding: 4 }}>\n//           <Typography variant=\"h4\" fontWeight=\"bold\" gutterBottom>\n//             Sign up\n//           </Typography>\n//           <Typography variant=\"body1\" color=\"text.secondary\" mb={4}>\n//             Sign up to enjoy the feature of HD\n//           </Typography>\n//           <Box component=\"form\" noValidate autoComplete=\"off\">\n//             <TextField\n//               label=\"Your Name\"\n//               fullWidth\n//               margin=\"normal\"\n//               variant=\"outlined\"\n//             />\n//             <TextField\n//               label=\"Date of Birth\"\n//               fullWidth\n//               margin=\"normal\"\n//               variant=\"outlined\"\n//               InputProps={{\n//                 endAdornment: (\n//                   <InputAdornment position=\"end\">\n//                     <CalendarToday />\n//                   </InputAdornment>\n//                 ),\n//               }}\n//             />\n//             <TextField\n//               label=\"Email\"\n//               fullWidth\n//               margin=\"normal\"\n//               variant=\"outlined\"\n//               type=\"email\"\n//             />\n//             <TextField\n//               label=\"OTP\"\n//               fullWidth\n//               margin=\"normal\"\n//               variant=\"outlined\"\n//               type={showOtp ? \"text\" : \"password\"}\n//               InputProps={{\n//                 endAdornment: (\n//                   <InputAdornment position=\"end\">\n//                     <IconButton onClick={handleOtpVisibility}>\n//                       {showOtp ? <VisibilityOff /> : <Visibility />}\n//                     </IconButton>\n//                   </InputAdornment>\n//                 ),\n//               }}\n//             />\n//             <Button\n//               variant=\"contained\"\n//               fullWidth\n//               sx={{ marginY: 2, paddingY: 1.5 }}\n//             >\n//               Sign up\n//             </Button>\n//           </Box>\n//           <Typography align=\"center\" variant=\"body2\">\n//             Already have an account?{\" \"}\n//             <Typography\n//               component=\"span\"\n//               color=\"primary\"\n//               sx={{ cursor: \"pointer\" }}\n//             >\n//               Sign in\n//             </Typography>\n//           </Typography>\n//         </Grid>\n\n//         {/* Right Side - Image */}\n//         <Grid\n//           item\n//           xs={12}\n//           md={6}\n//           sx={{\n//             backgroundImage: \"url('/assets/images/signup-bg.png')\",\n//             backgroundSize: \"cover\",\n//             backgroundPosition: \"center\",\n//           }}\n//         ></Grid>\n//       </Grid>\n//     </Container>\n//   );\n// };\n\n// export default Signup;\n\n// import React, { useState } from \"react\";\n// import {\n//   Box,\n//   Button,\n//   TextField,\n//   Typography,\n//   Grid,\n//   IconButton,\n//   InputAdornment,\n//   CircularProgress,\n// } from \"@mui/material\";\n// import { Visibility, VisibilityOff, CalendarToday } from \"@mui/icons-material\";\n// import { useNavigate } from \"react-router-dom\";\n// import api from \"../../services/api\"; // Importing API service\n\n// const Signup: React.FC = () => {\n//   const [formData, setFormData] = useState({\n//     name: \"\",\n//     date_of_birth: \"\",\n//     email: \"\",\n//     otp: \"\",\n//     password: \"\",\n//   });\n//   const [showOtpField, setShowOtpField] = useState(false);\n//   const [otpSent, setOtpSent] = useState(false);\n//   const [showPassword, setShowPassword] = useState(false);\n//   const [loading, setLoading] = useState(false);\n//   const navigate = useNavigate();\n\n//   // Handle form field changes\n//   const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n//     const { name, value } = e.target;\n//     setFormData((prev) => ({ ...prev, [name]: value }));\n//   };\n\n//   // Handle OTP visibility toggle\n//   const handleOtpVisibility = () => setShowPassword(!showPassword);\n\n//   // Send signup request\n//   const handleSignup = async () => {\n//     try {\n//       setLoading(true);\n//       const { name, email, date_of_birth, password } = formData;\n\n//       // API Call for signup\n//       const response = await api.post(\"/auth/signup\", {\n//         name,\n//         email,\n//         date_of_birth,\n//         password,\n//       });\n\n//       setOtpSent(true);\n//       setLoading(false);\n//       alert(response.data.message); // \"OTP sent to email. Please verify to complete signup.\"\n//     } catch (error: any) {\n//       setLoading(false);\n//       alert(error.response?.data?.message || \"Something went wrong\");\n//     }\n//   };\n\n//   // Handle OTP verification\n//   const handleVerifyOtp = async () => {\n//     try {\n//       setLoading(true);\n//       const { email, otp } = formData;\n\n//       // API Call for verifying OTP\n//       const response = await api.post(\"/auth/verify-signup-otp\", { email, otp });\n\n//       setLoading(false);\n//       alert(response.data.message); // \"User registered successfully\"\n//       navigate(\"/login\"); // Redirect to login page\n//     } catch (error: any) {\n//       setLoading(false);\n//       alert(error.response?.data?.message || \"Invalid OTP\");\n//     }\n//   };\n\n//   return (\n//     <Grid\n//       container\n//       sx={{\n//         height: \"100vh\",\n//         display: \"flex\",\n//         alignItems: \"center\",\n//         justifyContent: \"center\",\n//         background: \"url('/assets/images/signup-bg.png') no-repeat center center\",\n//         backgroundSize: \"cover\",\n//       }}\n//     >\n//       <Grid\n//         item\n//         xs={11}\n//         sm={8}\n//         md={6}\n//         lg={4}\n//         sx={{\n//           background: \"rgba(255, 255, 255, 0.9)\",\n//           borderRadius: \"12px\",\n//           boxShadow: 3,\n//           padding: \"32px\",\n//         }}\n//       >\n//         <Typography variant=\"h4\" fontWeight=\"bold\" gutterBottom>\n//           Sign up\n//         </Typography>\n//         <Typography variant=\"body1\" color=\"text.secondary\" mb={4}>\n//           Sign up to enjoy the feature of HD\n//         </Typography>\n\n//         {/* Form Fields */}\n//         <TextField\n//           label=\"Your Name\"\n//           name=\"name\"\n//           fullWidth\n//           margin=\"normal\"\n//           variant=\"outlined\"\n//           value={formData.name}\n//           onChange={handleChange}\n//         />\n//         <TextField\n//           label=\"Date of Birth\"\n//           name=\"date_of_birth\"\n//           fullWidth\n//           margin=\"normal\"\n//           variant=\"outlined\"\n//           value={formData.date_of_birth}\n//           onChange={handleChange}\n//           InputProps={{\n//             endAdornment: (\n//               <InputAdornment position=\"end\">\n//                 <CalendarToday />\n//               </InputAdornment>\n//             ),\n//           }}\n//         />\n//         <TextField\n//           label=\"Email\"\n//           name=\"email\"\n//           fullWidth\n//           margin=\"normal\"\n//           variant=\"outlined\"\n//           value={formData.email}\n//           onChange={handleChange}\n//         />\n//         {otpSent ? (\n//           <TextField\n//             label=\"OTP\"\n//             name=\"otp\"\n//             fullWidth\n//             margin=\"normal\"\n//             variant=\"outlined\"\n//             value={formData.otp}\n//             onChange={handleChange}\n//             type={showPassword ? \"text\" : \"password\"}\n//             InputProps={{\n//               endAdornment: (\n//                 <InputAdornment position=\"end\">\n//                   <IconButton onClick={handleOtpVisibility}>\n//                     {showPassword ? <VisibilityOff /> : <Visibility />}\n//                   </IconButton>\n//                 </InputAdornment>\n//               ),\n//             }}\n//           />\n//         ) : (\n//           <TextField\n//             label=\"Password\"\n//             name=\"password\"\n//             fullWidth\n//             margin=\"normal\"\n//             variant=\"outlined\"\n//             type=\"password\"\n//             value={formData.password}\n//             onChange={handleChange}\n//           />\n//         )}\n\n//         {/* Action Button */}\n//         <Button\n//           variant=\"contained\"\n//           fullWidth\n//           sx={{ marginY: 2, paddingY: 1.5 }}\n//           onClick={otpSent ? handleVerifyOtp : handleSignup}\n//           disabled={loading}\n//         >\n//           {loading ? <CircularProgress size={24} /> : otpSent ? \"Verify OTP\" : \"Sign up\"}\n//         </Button>\n\n//         {/* Navigate to Login */}\n//         <Typography align=\"center\" variant=\"body2\">\n//           Already have an account?{\" \"}\n//           <Typography\n//             component=\"span\"\n//             color=\"primary\"\n//             sx={{ cursor: \"pointer\" }}\n//             onClick={() => navigate(\"/login\")}\n//           >\n//             Sign in\n//           </Typography>\n//         </Typography>\n//       </Grid>\n//     </Grid>\n//   );\n// };\n\n// export default Signup;\n\nimport React, { useState } from \"react\";\nimport { Container, Grid, Typography, Box, TextField, InputAdornment, IconButton, Button } from \"@mui/material\";\nimport CalendarTodayIcon from \"@mui/icons-material/CalendarToday\";\nimport { Visibility, VisibilityOff } from \"@mui/icons-material\";\nimport { useNavigate } from \"react-router-dom\";\nimport api from \"../../services/api\"; // Importing the API service\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Signup = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    name: \"\",\n    date_of_birth: \"\",\n    email: \"\",\n    otp: \"\",\n    password: \"\"\n  });\n  const [showOtp, setShowOtp] = useState(false);\n  const [otpSent, setOtpSent] = useState(false);\n  const navigate = useNavigate();\n\n  // Handle form input changes\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  // Toggle OTP visibility\n  const handleOtpVisibility = () => {\n    setShowOtp(!showOtp);\n  };\n\n  // Send signup request\n  const handleSignup = async () => {\n    try {\n      const {\n        name,\n        date_of_birth,\n        email,\n        password\n      } = formData;\n\n      // API call to send signup data\n      const response = await api.post(\"/auth/signup\", {\n        name,\n        date_of_birth,\n        email,\n        password\n      });\n      alert(response.data.message); // \"OTP sent to email. Please verify to complete signup.\"\n      setOtpSent(true);\n    } catch (error) {\n      var _error$response, _error$response$data;\n      alert(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || \"Something went wrong\");\n    }\n  };\n\n  // Verify OTP\n  const handleVerifyOtp = async () => {\n    try {\n      const {\n        email,\n        otp\n      } = formData;\n\n      // API call to verify OTP\n      const response = await api.post(\"/auth/verify-signup-otp\", {\n        email,\n        otp\n      });\n      alert(response.data.message); // \"User registered successfully\"\n      navigate(\"/login\"); // Navigate to login page\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      alert(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || \"Invalid OTP\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: false,\n    sx: {\n      height: \"100vh\",\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      sx: {\n        height: \"100%\",\n        boxShadow: 3,\n        borderRadius: 3,\n        overflow: \"hidden\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 5,\n        sx: {\n          padding: 4\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: \"flex\",\n            alignItems: \"center\",\n            marginBottom: 3\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/assets/images/hd-icon.png\",\n            alt: \"HD Icon\",\n            style: {\n              width: 32,\n              height: 32,\n              marginRight: 8\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 461,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            fontWeight: \"bold\",\n            sx: {\n              color: \"#232323\",\n              fontFeatureSettings: \"'liga' off, 'clig' off\",\n              fontFamily: \"Inter\",\n              fontSize: \"24px\",\n              fontStyle: \"normal\",\n              fontWeight: 600,\n              lineHeight: \"110%\",\n              letterSpacing: \"-0.96px\"\n            },\n            children: \"HD\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 466,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 460,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          component: \"form\",\n          noValidate: true,\n          autoComplete: \"off\",\n          sx: {\n            paddingLeft: 9,\n            paddingRight: 9\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h4\",\n            fontWeight: \"bold\",\n            gutterBottom: true,\n            children: \"Sign up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 484,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            color: \"text.secondary\",\n            mb: 4,\n            children: \"Sign up to enjoy the feature of HD\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 487,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Your Name\",\n            name: \"name\",\n            fullWidth: true,\n            margin: \"normal\",\n            variant: \"outlined\",\n            value: formData.name,\n            onChange: handleChange,\n            sx: {\n              borderRadius: \"10px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 490,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Date of Birth\",\n            name: \"date_of_birth\",\n            fullWidth: true,\n            margin: \"normal\",\n            variant: \"outlined\",\n            value: formData.date_of_birth,\n            onChange: handleChange,\n            InputProps: {\n              endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                position: \"end\",\n                children: /*#__PURE__*/_jsxDEV(CalendarTodayIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 511,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 510,\n                columnNumber: 19\n              }, this)\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 500,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Email\",\n            name: \"email\",\n            fullWidth: true,\n            margin: \"normal\",\n            variant: \"outlined\",\n            type: \"email\",\n            value: formData.email,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 516,\n            columnNumber: 13\n          }, this), otpSent ? /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"OTP\",\n            name: \"otp\",\n            fullWidth: true,\n            margin: \"normal\",\n            variant: \"outlined\",\n            type: showOtp ? \"text\" : \"password\",\n            value: formData.otp,\n            onChange: handleChange,\n            InputProps: {\n              endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                position: \"end\",\n                children: /*#__PURE__*/_jsxDEV(IconButton, {\n                  onClick: handleOtpVisibility,\n                  children: showOtp ? /*#__PURE__*/_jsxDEV(VisibilityOff, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 540,\n                    columnNumber: 36\n                  }, this) : /*#__PURE__*/_jsxDEV(Visibility, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 540,\n                    columnNumber: 56\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 539,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 538,\n                columnNumber: 21\n              }, this)\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 527,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(TextField, {\n            label: \"Password\",\n            name: \"password\",\n            fullWidth: true,\n            margin: \"normal\",\n            variant: \"outlined\",\n            type: \"password\",\n            value: formData.password,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 547,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            fullWidth: true,\n            sx: {\n              marginY: 2,\n              paddingY: 1.5,\n              backgroundColor: \"#367AFF\",\n              borderRadius: \"10px\"\n            },\n            onClick: otpSent ? handleVerifyOtp : handleSignup,\n            children: otpSent ? \"Verify OTP\" : \"Sign up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 558,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 483,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          align: \"center\",\n          variant: \"body2\",\n          children: [\"Already have an account?\", \" \", /*#__PURE__*/_jsxDEV(Typography, {\n            component: \"span\",\n            color: \"primary\",\n            sx: {\n              cursor: \"pointer\"\n            },\n            onClick: () => navigate(\"/login\"),\n            children: \"Sign in\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 569,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 567,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 459,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 7,\n        sx: {\n          backgroundImage: \"url('/assets/images/signup-bg.png')\",\n          backgroundSize: \"cover\",\n          backgroundPosition: \"center\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 581,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 448,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 439,\n    columnNumber: 5\n  }, this);\n};\n_s(Signup, \"w2WYi5Po4axrEGVaa1U9N00r3Rg=\", false, function () {\n  return [useNavigate];\n});\n_c = Signup;\nexport default Signup;\nvar _c;\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"names":["React","useState","Container","Grid","Typography","Box","TextField","InputAdornment","IconButton","Button","CalendarTodayIcon","Visibility","VisibilityOff","useNavigate","api","jsxDEV","_jsxDEV","Signup","_s","formData","setFormData","name","date_of_birth","email","otp","password","showOtp","setShowOtp","otpSent","setOtpSent","navigate","handleChange","e","value","target","prev","handleOtpVisibility","handleSignup","response","post","alert","data","message","error","_error$response","_error$response$data","handleVerifyOtp","_error$response2","_error$response2$data","maxWidth","sx","height","display","alignItems","justifyContent","children","container","spacing","boxShadow","borderRadius","overflow","item","xs","md","padding","marginBottom","src","alt","style","width","marginRight","fileName","_jsxFileName","lineNumber","columnNumber","variant","fontWeight","color","fontFeatureSettings","fontFamily","fontSize","fontStyle","lineHeight","letterSpacing","component","noValidate","autoComplete","paddingLeft","paddingRight","gutterBottom","mb","label","fullWidth","margin","onChange","InputProps","endAdornment","position","type","onClick","marginY","paddingY","backgroundColor","align","cursor","backgroundImage","backgroundSize","backgroundPosition","_c","$RefreshReg$"],"sources":["D:/Study/Code/Self-Projects/NoteApp/note-taking-frontend/src/components/Auth/Signup.tsx"],"sourcesContent":["// import React from \"react\";\r\n// import { Formik, Form, Field } from \"formik\";\r\n// import * as Yup from \"yup\";\r\n// import { Button, TextField, Box, Typography } from \"@mui/material\";\r\n// import api from \"../../services/api\";\r\n\r\n// const Signup: React.FC = () => {\r\n//   const initialValues = { email: \"\", password: \"\" };\r\n\r\n//   const validationSchema = Yup.object({\r\n//     email: Yup.string().email(\"Invalid email\").required(\"Required\"),\r\n//     password: Yup.string().min(6, \"Password must be at least 6 characters\").required(\"Required\"),\r\n//   });\r\n\r\n//   const handleSubmit = async (values: typeof initialValues) => {\r\n//     try {\r\n//       await api.post(\"/auth/signup\", values);\r\n//       alert(\"Signup successful! Please login.\");\r\n//       window.location.href = \"/login\";\r\n//     } catch (error) {\r\n//       console.error(\"Signup failed:\", error);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <Box maxWidth={400} mx=\"auto\" mt={5}>\r\n//       <Typography variant=\"h4\" gutterBottom>Signup</Typography>\r\n//       <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={handleSubmit}>\r\n//         {({ errors, touched }) => (\r\n//           <Form>\r\n//             <Field name=\"email\" as={TextField} label=\"Email\" fullWidth margin=\"normal\" error={touched.email && !!errors.email} helperText={touched.email && errors.email} />\r\n//             <Field name=\"password\" as={TextField} label=\"Password\" type=\"password\" fullWidth margin=\"normal\" error={touched.password && !!errors.password} helperText={touched.password && errors.password} />\r\n//             <Button type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth>Signup</Button>\r\n//           </Form>\r\n//         )}\r\n//       </Formik>\r\n//     </Box>\r\n//   );\r\n// };\r\n\r\n// export default Signup;\r\n\r\n\r\n// import React, { useState } from \"react\";\r\n// import {\r\n//   Box,\r\n//   Button,\r\n//   Container,\r\n//   Grid,\r\n//   IconButton,\r\n//   InputAdornment,\r\n//   TextField,\r\n//   Typography,\r\n// } from \"@mui/material\";\r\n// import { Visibility, VisibilityOff, CalendarToday } from \"@mui/icons-material\";\r\n\r\n// const Signup: React.FC = () => {\r\n//   const [showOtp, setShowOtp] = useState(false);\r\n\r\n//   const handleOtpVisibility = () => setShowOtp(!showOtp);\r\n\r\n//   return (\r\n//     <Container maxWidth=\"lg\" sx={{ height: \"100vh\", display: \"flex\", alignItems: \"center\" }}>\r\n//       <Grid container spacing={2} sx={{ boxShadow: 3, borderRadius: 3, overflow: \"hidden\" }}>\r\n//         {/* Left Side - Signup Form */}\r\n//         <Grid item xs={12} md={6} sx={{ padding: 4 }}>\r\n//           <Typography variant=\"h4\" fontWeight=\"bold\" gutterBottom>\r\n//             Sign up\r\n//           </Typography>\r\n//           <Typography variant=\"body1\" color=\"text.secondary\" mb={4}>\r\n//             Sign up to enjoy the feature of HD\r\n//           </Typography>\r\n//           <Box component=\"form\" noValidate autoComplete=\"off\">\r\n//             <TextField\r\n//               label=\"Your Name\"\r\n//               fullWidth\r\n//               margin=\"normal\"\r\n//               variant=\"outlined\"\r\n//             />\r\n//             <TextField\r\n//               label=\"Date of Birth\"\r\n//               fullWidth\r\n//               margin=\"normal\"\r\n//               variant=\"outlined\"\r\n//               InputProps={{\r\n//                 endAdornment: (\r\n//                   <InputAdornment position=\"end\">\r\n//                     <CalendarToday />\r\n//                   </InputAdornment>\r\n//                 ),\r\n//               }}\r\n//             />\r\n//             <TextField\r\n//               label=\"Email\"\r\n//               fullWidth\r\n//               margin=\"normal\"\r\n//               variant=\"outlined\"\r\n//               type=\"email\"\r\n//             />\r\n//             <TextField\r\n//               label=\"OTP\"\r\n//               fullWidth\r\n//               margin=\"normal\"\r\n//               variant=\"outlined\"\r\n//               type={showOtp ? \"text\" : \"password\"}\r\n//               InputProps={{\r\n//                 endAdornment: (\r\n//                   <InputAdornment position=\"end\">\r\n//                     <IconButton onClick={handleOtpVisibility}>\r\n//                       {showOtp ? <VisibilityOff /> : <Visibility />}\r\n//                     </IconButton>\r\n//                   </InputAdornment>\r\n//                 ),\r\n//               }}\r\n//             />\r\n//             <Button\r\n//               variant=\"contained\"\r\n//               fullWidth\r\n//               sx={{ marginY: 2, paddingY: 1.5 }}\r\n//             >\r\n//               Sign up\r\n//             </Button>\r\n//           </Box>\r\n//           <Typography align=\"center\" variant=\"body2\">\r\n//             Already have an account?{\" \"}\r\n//             <Typography\r\n//               component=\"span\"\r\n//               color=\"primary\"\r\n//               sx={{ cursor: \"pointer\" }}\r\n//             >\r\n//               Sign in\r\n//             </Typography>\r\n//           </Typography>\r\n//         </Grid>\r\n\r\n//         {/* Right Side - Image */}\r\n//         <Grid\r\n//           item\r\n//           xs={12}\r\n//           md={6}\r\n//           sx={{\r\n//             backgroundImage: \"url('/assets/images/signup-bg.png')\",\r\n//             backgroundSize: \"cover\",\r\n//             backgroundPosition: \"center\",\r\n//           }}\r\n//         ></Grid>\r\n//       </Grid>\r\n//     </Container>\r\n//   );\r\n// };\r\n\r\n// export default Signup;\r\n\r\n// import React, { useState } from \"react\";\r\n// import {\r\n//   Box,\r\n//   Button,\r\n//   TextField,\r\n//   Typography,\r\n//   Grid,\r\n//   IconButton,\r\n//   InputAdornment,\r\n//   CircularProgress,\r\n// } from \"@mui/material\";\r\n// import { Visibility, VisibilityOff, CalendarToday } from \"@mui/icons-material\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n// import api from \"../../services/api\"; // Importing API service\r\n\r\n// const Signup: React.FC = () => {\r\n//   const [formData, setFormData] = useState({\r\n//     name: \"\",\r\n//     date_of_birth: \"\",\r\n//     email: \"\",\r\n//     otp: \"\",\r\n//     password: \"\",\r\n//   });\r\n//   const [showOtpField, setShowOtpField] = useState(false);\r\n//   const [otpSent, setOtpSent] = useState(false);\r\n//   const [showPassword, setShowPassword] = useState(false);\r\n//   const [loading, setLoading] = useState(false);\r\n//   const navigate = useNavigate();\r\n\r\n//   // Handle form field changes\r\n//   const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n//     const { name, value } = e.target;\r\n//     setFormData((prev) => ({ ...prev, [name]: value }));\r\n//   };\r\n\r\n//   // Handle OTP visibility toggle\r\n//   const handleOtpVisibility = () => setShowPassword(!showPassword);\r\n\r\n//   // Send signup request\r\n//   const handleSignup = async () => {\r\n//     try {\r\n//       setLoading(true);\r\n//       const { name, email, date_of_birth, password } = formData;\r\n\r\n//       // API Call for signup\r\n//       const response = await api.post(\"/auth/signup\", {\r\n//         name,\r\n//         email,\r\n//         date_of_birth,\r\n//         password,\r\n//       });\r\n\r\n//       setOtpSent(true);\r\n//       setLoading(false);\r\n//       alert(response.data.message); // \"OTP sent to email. Please verify to complete signup.\"\r\n//     } catch (error: any) {\r\n//       setLoading(false);\r\n//       alert(error.response?.data?.message || \"Something went wrong\");\r\n//     }\r\n//   };\r\n\r\n//   // Handle OTP verification\r\n//   const handleVerifyOtp = async () => {\r\n//     try {\r\n//       setLoading(true);\r\n//       const { email, otp } = formData;\r\n\r\n//       // API Call for verifying OTP\r\n//       const response = await api.post(\"/auth/verify-signup-otp\", { email, otp });\r\n\r\n//       setLoading(false);\r\n//       alert(response.data.message); // \"User registered successfully\"\r\n//       navigate(\"/login\"); // Redirect to login page\r\n//     } catch (error: any) {\r\n//       setLoading(false);\r\n//       alert(error.response?.data?.message || \"Invalid OTP\");\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <Grid\r\n//       container\r\n//       sx={{\r\n//         height: \"100vh\",\r\n//         display: \"flex\",\r\n//         alignItems: \"center\",\r\n//         justifyContent: \"center\",\r\n//         background: \"url('/assets/images/signup-bg.png') no-repeat center center\",\r\n//         backgroundSize: \"cover\",\r\n//       }}\r\n//     >\r\n//       <Grid\r\n//         item\r\n//         xs={11}\r\n//         sm={8}\r\n//         md={6}\r\n//         lg={4}\r\n//         sx={{\r\n//           background: \"rgba(255, 255, 255, 0.9)\",\r\n//           borderRadius: \"12px\",\r\n//           boxShadow: 3,\r\n//           padding: \"32px\",\r\n//         }}\r\n//       >\r\n//         <Typography variant=\"h4\" fontWeight=\"bold\" gutterBottom>\r\n//           Sign up\r\n//         </Typography>\r\n//         <Typography variant=\"body1\" color=\"text.secondary\" mb={4}>\r\n//           Sign up to enjoy the feature of HD\r\n//         </Typography>\r\n\r\n//         {/* Form Fields */}\r\n//         <TextField\r\n//           label=\"Your Name\"\r\n//           name=\"name\"\r\n//           fullWidth\r\n//           margin=\"normal\"\r\n//           variant=\"outlined\"\r\n//           value={formData.name}\r\n//           onChange={handleChange}\r\n//         />\r\n//         <TextField\r\n//           label=\"Date of Birth\"\r\n//           name=\"date_of_birth\"\r\n//           fullWidth\r\n//           margin=\"normal\"\r\n//           variant=\"outlined\"\r\n//           value={formData.date_of_birth}\r\n//           onChange={handleChange}\r\n//           InputProps={{\r\n//             endAdornment: (\r\n//               <InputAdornment position=\"end\">\r\n//                 <CalendarToday />\r\n//               </InputAdornment>\r\n//             ),\r\n//           }}\r\n//         />\r\n//         <TextField\r\n//           label=\"Email\"\r\n//           name=\"email\"\r\n//           fullWidth\r\n//           margin=\"normal\"\r\n//           variant=\"outlined\"\r\n//           value={formData.email}\r\n//           onChange={handleChange}\r\n//         />\r\n//         {otpSent ? (\r\n//           <TextField\r\n//             label=\"OTP\"\r\n//             name=\"otp\"\r\n//             fullWidth\r\n//             margin=\"normal\"\r\n//             variant=\"outlined\"\r\n//             value={formData.otp}\r\n//             onChange={handleChange}\r\n//             type={showPassword ? \"text\" : \"password\"}\r\n//             InputProps={{\r\n//               endAdornment: (\r\n//                 <InputAdornment position=\"end\">\r\n//                   <IconButton onClick={handleOtpVisibility}>\r\n//                     {showPassword ? <VisibilityOff /> : <Visibility />}\r\n//                   </IconButton>\r\n//                 </InputAdornment>\r\n//               ),\r\n//             }}\r\n//           />\r\n//         ) : (\r\n//           <TextField\r\n//             label=\"Password\"\r\n//             name=\"password\"\r\n//             fullWidth\r\n//             margin=\"normal\"\r\n//             variant=\"outlined\"\r\n//             type=\"password\"\r\n//             value={formData.password}\r\n//             onChange={handleChange}\r\n//           />\r\n//         )}\r\n\r\n//         {/* Action Button */}\r\n//         <Button\r\n//           variant=\"contained\"\r\n//           fullWidth\r\n//           sx={{ marginY: 2, paddingY: 1.5 }}\r\n//           onClick={otpSent ? handleVerifyOtp : handleSignup}\r\n//           disabled={loading}\r\n//         >\r\n//           {loading ? <CircularProgress size={24} /> : otpSent ? \"Verify OTP\" : \"Sign up\"}\r\n//         </Button>\r\n\r\n//         {/* Navigate to Login */}\r\n//         <Typography align=\"center\" variant=\"body2\">\r\n//           Already have an account?{\" \"}\r\n//           <Typography\r\n//             component=\"span\"\r\n//             color=\"primary\"\r\n//             sx={{ cursor: \"pointer\" }}\r\n//             onClick={() => navigate(\"/login\")}\r\n//           >\r\n//             Sign in\r\n//           </Typography>\r\n//         </Typography>\r\n//       </Grid>\r\n//     </Grid>\r\n//   );\r\n// };\r\n\r\n// export default Signup;\r\n\r\n\r\nimport React, { useState } from \"react\";\r\nimport {\r\n  Container,\r\n  Grid,\r\n  Typography,\r\n  Box,\r\n  TextField,\r\n  InputAdornment,\r\n  IconButton,\r\n  Button,\r\n} from \"@mui/material\";\r\nimport CalendarTodayIcon from \"@mui/icons-material/CalendarToday\";\r\nimport { Visibility, VisibilityOff } from \"@mui/icons-material\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport api from \"../../services/api\"; // Importing the API service\r\n\r\nconst Signup: React.FC = () => {\r\n  const [formData, setFormData] = useState({\r\n    name: \"\",\r\n    date_of_birth: \"\",\r\n    email: \"\",\r\n    otp: \"\",\r\n    password: \"\",\r\n  });\r\n  const [showOtp, setShowOtp] = useState(false);\r\n  const [otpSent, setOtpSent] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  // Handle form input changes\r\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  // Toggle OTP visibility\r\n  const handleOtpVisibility = () => {\r\n    setShowOtp(!showOtp);\r\n  };\r\n\r\n  // Send signup request\r\n  const handleSignup = async () => {\r\n    try {\r\n      const { name, date_of_birth, email, password } = formData;\r\n\r\n      // API call to send signup data\r\n      const response = await api.post(\"/auth/signup\", {\r\n        name,\r\n        date_of_birth,\r\n        email,\r\n        password,\r\n      });\r\n\r\n      alert(response.data.message); // \"OTP sent to email. Please verify to complete signup.\"\r\n      setOtpSent(true);\r\n    } catch (error: any) {\r\n      alert(error.response?.data?.message || \"Something went wrong\");\r\n    }\r\n  };\r\n\r\n  // Verify OTP\r\n  const handleVerifyOtp = async () => {\r\n    try {\r\n      const { email, otp } = formData;\r\n\r\n      // API call to verify OTP\r\n      const response = await api.post(\"/auth/verify-signup-otp\", { email, otp });\r\n\r\n      alert(response.data.message); // \"User registered successfully\"\r\n      navigate(\"/login\"); // Navigate to login page\r\n    } catch (error: any) {\r\n      alert(error.response?.data?.message || \"Invalid OTP\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container\r\n      maxWidth={false}\r\n      sx={{\r\n        height: \"100vh\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n      }}\r\n    >\r\n      <Grid\r\n        container\r\n        spacing={2}\r\n        sx={{\r\n          height: \"100%\",\r\n          boxShadow: 3,\r\n          borderRadius: 3,\r\n          overflow: \"hidden\",\r\n        }}\r\n      >\r\n        {/* Left Side - Signup Form */}\r\n        <Grid item xs={12} md={5} sx={{ padding: 4 }}>\r\n          <Box sx={{ display: \"flex\", alignItems: \"center\", marginBottom: 3 }}>\r\n            <img\r\n              src=\"/assets/images/hd-icon.png\"\r\n              alt=\"HD Icon\"\r\n              style={{ width: 32, height: 32, marginRight: 8 }}\r\n            />\r\n            <Typography\r\n              variant=\"h6\"\r\n              fontWeight=\"bold\"\r\n              sx={{\r\n                color: \"#232323\",\r\n                fontFeatureSettings: \"'liga' off, 'clig' off\",\r\n                fontFamily: \"Inter\",\r\n                fontSize: \"24px\",\r\n                fontStyle: \"normal\",\r\n                fontWeight: 600,\r\n                lineHeight: \"110%\",\r\n                letterSpacing: \"-0.96px\",\r\n              }}\r\n            >\r\n              HD\r\n            </Typography>\r\n          </Box>\r\n          <Box component=\"form\" noValidate autoComplete=\"off\" sx={{ paddingLeft: 9, paddingRight: 9 }}>\r\n            <Typography variant=\"h4\" fontWeight=\"bold\" gutterBottom>\r\n              Sign up\r\n            </Typography>\r\n            <Typography variant=\"body1\" color=\"text.secondary\" mb={4}>\r\n              Sign up to enjoy the feature of HD\r\n            </Typography>\r\n            <TextField\r\n              label=\"Your Name\"\r\n              name=\"name\"\r\n              fullWidth\r\n              margin=\"normal\"\r\n              variant=\"outlined\"\r\n              value={formData.name}\r\n              onChange={handleChange}\r\n              sx={{ borderRadius: \"10px\" }}\r\n            />\r\n            <TextField\r\n              label=\"Date of Birth\"\r\n              name=\"date_of_birth\"\r\n              fullWidth\r\n              margin=\"normal\"\r\n              variant=\"outlined\"\r\n              value={formData.date_of_birth}\r\n              onChange={handleChange}\r\n              InputProps={{\r\n                endAdornment: (\r\n                  <InputAdornment position=\"end\">\r\n                    <CalendarTodayIcon />\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n            />\r\n            <TextField\r\n              label=\"Email\"\r\n              name=\"email\"\r\n              fullWidth\r\n              margin=\"normal\"\r\n              variant=\"outlined\"\r\n              type=\"email\"\r\n              value={formData.email}\r\n              onChange={handleChange}\r\n            />\r\n            {otpSent ? (\r\n              <TextField\r\n                label=\"OTP\"\r\n                name=\"otp\"\r\n                fullWidth\r\n                margin=\"normal\"\r\n                variant=\"outlined\"\r\n                type={showOtp ? \"text\" : \"password\"}\r\n                value={formData.otp}\r\n                onChange={handleChange}\r\n                InputProps={{\r\n                  endAdornment: (\r\n                    <InputAdornment position=\"end\">\r\n                      <IconButton onClick={handleOtpVisibility}>\r\n                        {showOtp ? <VisibilityOff /> : <Visibility />}\r\n                      </IconButton>\r\n                    </InputAdornment>\r\n                  ),\r\n                }}\r\n              />\r\n            ) : (\r\n              <TextField\r\n                label=\"Password\"\r\n                name=\"password\"\r\n                fullWidth\r\n                margin=\"normal\"\r\n                variant=\"outlined\"\r\n                type=\"password\"\r\n                value={formData.password}\r\n                onChange={handleChange}\r\n              />\r\n            )}\r\n            <Button\r\n              variant=\"contained\"\r\n              fullWidth\r\n              sx={{ marginY: 2, paddingY: 1.5, backgroundColor: \"#367AFF\" , borderRadius: \"10px\"}}\r\n              onClick={otpSent ? handleVerifyOtp : handleSignup}\r\n            >\r\n              {otpSent ? \"Verify OTP\" : \"Sign up\"}\r\n            </Button>\r\n          </Box>\r\n          <Typography align=\"center\" variant=\"body2\">\r\n            Already have an account?{\" \"}\r\n            <Typography\r\n              component=\"span\"\r\n              color=\"primary\"\r\n              sx={{ cursor: \"pointer\" }}\r\n              onClick={() => navigate(\"/login\")}\r\n            >\r\n              Sign in\r\n            </Typography>\r\n          </Typography>\r\n        </Grid>\r\n\r\n        {/* Right Side - Image */}\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          md={7}\r\n          sx={{\r\n            backgroundImage: \"url('/assets/images/signup-bg.png')\",\r\n            backgroundSize: \"cover\",\r\n            backgroundPosition: \"center\",\r\n          }}\r\n        ></Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}