{"ast":null,"code":"var _jsxFileName = \"D:\\\\Study\\\\Code\\\\Self-Projects\\\\NoteApp\\\\note-taking-frontend\\\\src\\\\components\\\\Auth\\\\Signup.tsx\";\nimport React from \"react\";\nimport { Formik, Form, Field } from \"formik\";\nimport * as Yup from \"yup\";\nimport { Button, TextField, Box, Typography } from \"@mui/material\";\nimport api from \"../../services/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Signup = () => {\n  const initialValues = {\n    email: \"\",\n    password: \"\"\n  };\n  const validationSchema = Yup.object({\n    email: Yup.string().email(\"Invalid email\").required(\"Required\"),\n    password: Yup.string().min(6, \"Password must be at least 6 characters\").required(\"Required\")\n  });\n  const handleSubmit = async values => {\n    try {\n      await api.post(\"/auth/signup\", values);\n      alert(\"Signup successful! Please login.\");\n      window.location.href = \"/login\";\n    } catch (error) {\n      console.error(\"Signup failed:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    maxWidth: 400,\n    mx: \"auto\",\n    mt: 5,\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"Signup\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: initialValues,\n      validationSchema: validationSchema,\n      onSubmit: handleSubmit,\n      children: ({\n        errors,\n        touched\n      }) => /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Field, {\n          name: \"email\",\n          as: TextField,\n          label: \"Email\",\n          fullWidth: true,\n          margin: \"normal\",\n          error: touched.email && !!errors.email,\n          helperText: touched.email && errors.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"password\",\n          as: TextField,\n          label: \"Password\",\n          type: \"password\",\n          fullWidth: true,\n          margin: \"normal\",\n          error: touched.password && !!errors.password,\n          helperText: touched.password && errors.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"contained\",\n          color: \"primary\",\n          fullWidth: true,\n          children: \"Signup\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_c = Signup;\nexport default Signup;\nvar _c;\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"names":["React","Formik","Form","Field","Yup","Button","TextField","Box","Typography","api","jsxDEV","_jsxDEV","Signup","initialValues","email","password","validationSchema","object","string","required","min","handleSubmit","values","post","alert","window","location","href","error","console","maxWidth","mx","mt","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","errors","touched","name","as","label","fullWidth","margin","helperText","type","color","_c","$RefreshReg$"],"sources":["D:/Study/Code/Self-Projects/NoteApp/note-taking-frontend/src/components/Auth/Signup.tsx"],"sourcesContent":["import React from \"react\";\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { Button, TextField, Box, Typography } from \"@mui/material\";\r\nimport api from \"../../services/api\";\r\n\r\nconst Signup: React.FC = () => {\r\n  const initialValues = { email: \"\", password: \"\" };\r\n\r\n  const validationSchema = Yup.object({\r\n    email: Yup.string().email(\"Invalid email\").required(\"Required\"),\r\n    password: Yup.string().min(6, \"Password must be at least 6 characters\").required(\"Required\"),\r\n  });\r\n\r\n  const handleSubmit = async (values: typeof initialValues) => {\r\n    try {\r\n      await api.post(\"/auth/signup\", values);\r\n      alert(\"Signup successful! Please login.\");\r\n      window.location.href = \"/login\";\r\n    } catch (error) {\r\n      console.error(\"Signup failed:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box maxWidth={400} mx=\"auto\" mt={5}>\r\n      <Typography variant=\"h4\" gutterBottom>Signup</Typography>\r\n      <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={handleSubmit}>\r\n        {({ errors, touched }) => (\r\n          <Form>\r\n            <Field name=\"email\" as={TextField} label=\"Email\" fullWidth margin=\"normal\" error={touched.email && !!errors.email} helperText={touched.email && errors.email} />\r\n            <Field name=\"password\" as={TextField} label=\"Password\" type=\"password\" fullWidth margin=\"normal\" error={touched.password && !!errors.password} helperText={touched.password && errors.password} />\r\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth>Signup</Button>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}