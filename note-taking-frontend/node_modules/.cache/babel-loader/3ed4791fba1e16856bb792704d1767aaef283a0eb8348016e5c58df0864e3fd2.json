{"ast":null,"code":"var _jsxFileName = \"D:\\\\Study\\\\Code\\\\Self-Projects\\\\NoteApp\\\\note-taking-frontend\\\\src\\\\components\\\\Auth\\\\Signup.tsx\",\n  _s = $RefreshSig$();\n// import React from \"react\";\n// import { Formik, Form, Field } from \"formik\";\n// import * as Yup from \"yup\";\n// import { Button, TextField, Box, Typography } from \"@mui/material\";\n// import api from \"../../services/api\";\n\n// const Signup: React.FC = () => {\n//   const initialValues = { email: \"\", password: \"\" };\n\n//   const validationSchema = Yup.object({\n//     email: Yup.string().email(\"Invalid email\").required(\"Required\"),\n//     password: Yup.string().min(6, \"Password must be at least 6 characters\").required(\"Required\"),\n//   });\n\n//   const handleSubmit = async (values: typeof initialValues) => {\n//     try {\n//       await api.post(\"/auth/signup\", values);\n//       alert(\"Signup successful! Please login.\");\n//       window.location.href = \"/login\";\n//     } catch (error) {\n//       console.error(\"Signup failed:\", error);\n//     }\n//   };\n\n//   return (\n//     <Box maxWidth={400} mx=\"auto\" mt={5}>\n//       <Typography variant=\"h4\" gutterBottom>Signup</Typography>\n//       <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={handleSubmit}>\n//         {({ errors, touched }) => (\n//           <Form>\n//             <Field name=\"email\" as={TextField} label=\"Email\" fullWidth margin=\"normal\" error={touched.email && !!errors.email} helperText={touched.email && errors.email} />\n//             <Field name=\"password\" as={TextField} label=\"Password\" type=\"password\" fullWidth margin=\"normal\" error={touched.password && !!errors.password} helperText={touched.password && errors.password} />\n//             <Button type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth>Signup</Button>\n//           </Form>\n//         )}\n//       </Formik>\n//     </Box>\n//   );\n// };\n\n// export default Signup;\n\n// import React, { useState } from \"react\";\n// import {\n//   Box,\n//   Button,\n//   Container,\n//   Grid,\n//   IconButton,\n//   InputAdornment,\n//   TextField,\n//   Typography,\n// } from \"@mui/material\";\n// import { Visibility, VisibilityOff, CalendarToday } from \"@mui/icons-material\";\n\n// const Signup: React.FC = () => {\n//   const [showOtp, setShowOtp] = useState(false);\n\n//   const handleOtpVisibility = () => setShowOtp(!showOtp);\n\n//   return (\n//     <Container maxWidth=\"lg\" sx={{ height: \"100vh\", display: \"flex\", alignItems: \"center\" }}>\n//       <Grid container spacing={2} sx={{ boxShadow: 3, borderRadius: 3, overflow: \"hidden\" }}>\n//         {/* Left Side - Signup Form */}\n//         <Grid item xs={12} md={6} sx={{ padding: 4 }}>\n//           <Typography variant=\"h4\" fontWeight=\"bold\" gutterBottom>\n//             Sign up\n//           </Typography>\n//           <Typography variant=\"body1\" color=\"text.secondary\" mb={4}>\n//             Sign up to enjoy the feature of HD\n//           </Typography>\n//           <Box component=\"form\" noValidate autoComplete=\"off\">\n//             <TextField\n//               label=\"Your Name\"\n//               fullWidth\n//               margin=\"normal\"\n//               variant=\"outlined\"\n//             />\n//             <TextField\n//               label=\"Date of Birth\"\n//               fullWidth\n//               margin=\"normal\"\n//               variant=\"outlined\"\n//               InputProps={{\n//                 endAdornment: (\n//                   <InputAdornment position=\"end\">\n//                     <CalendarToday />\n//                   </InputAdornment>\n//                 ),\n//               }}\n//             />\n//             <TextField\n//               label=\"Email\"\n//               fullWidth\n//               margin=\"normal\"\n//               variant=\"outlined\"\n//               type=\"email\"\n//             />\n//             <TextField\n//               label=\"OTP\"\n//               fullWidth\n//               margin=\"normal\"\n//               variant=\"outlined\"\n//               type={showOtp ? \"text\" : \"password\"}\n//               InputProps={{\n//                 endAdornment: (\n//                   <InputAdornment position=\"end\">\n//                     <IconButton onClick={handleOtpVisibility}>\n//                       {showOtp ? <VisibilityOff /> : <Visibility />}\n//                     </IconButton>\n//                   </InputAdornment>\n//                 ),\n//               }}\n//             />\n//             <Button\n//               variant=\"contained\"\n//               fullWidth\n//               sx={{ marginY: 2, paddingY: 1.5 }}\n//             >\n//               Sign up\n//             </Button>\n//           </Box>\n//           <Typography align=\"center\" variant=\"body2\">\n//             Already have an account?{\" \"}\n//             <Typography\n//               component=\"span\"\n//               color=\"primary\"\n//               sx={{ cursor: \"pointer\" }}\n//             >\n//               Sign in\n//             </Typography>\n//           </Typography>\n//         </Grid>\n\n//         {/* Right Side - Image */}\n//         <Grid\n//           item\n//           xs={12}\n//           md={6}\n//           sx={{\n//             backgroundImage: \"url('/assets/images/signup-bg.png')\",\n//             backgroundSize: \"cover\",\n//             backgroundPosition: \"center\",\n//           }}\n//         ></Grid>\n//       </Grid>\n//     </Container>\n//   );\n// };\n\n// export default Signup;\n\n// import React, { useState } from \"react\";\n// import {\n//   Box,\n//   Button,\n//   TextField,\n//   Typography,\n//   Grid,\n//   IconButton,\n//   InputAdornment,\n//   CircularProgress,\n// } from \"@mui/material\";\n// import { Visibility, VisibilityOff, CalendarToday } from \"@mui/icons-material\";\n// import { useNavigate } from \"react-router-dom\";\n// import api from \"../../services/api\"; // Importing API service\n\n// const Signup: React.FC = () => {\n//   const [formData, setFormData] = useState({\n//     name: \"\",\n//     date_of_birth: \"\",\n//     email: \"\",\n//     otp: \"\",\n//     password: \"\",\n//   });\n//   const [showOtpField, setShowOtpField] = useState(false);\n//   const [otpSent, setOtpSent] = useState(false);\n//   const [showPassword, setShowPassword] = useState(false);\n//   const [loading, setLoading] = useState(false);\n//   const navigate = useNavigate();\n\n//   // Handle form field changes\n//   const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n//     const { name, value } = e.target;\n//     setFormData((prev) => ({ ...prev, [name]: value }));\n//   };\n\n//   // Handle OTP visibility toggle\n//   const handleOtpVisibility = () => setShowPassword(!showPassword);\n\n//   // Send signup request\n//   const handleSignup = async () => {\n//     try {\n//       setLoading(true);\n//       const { name, email, date_of_birth, password } = formData;\n\n//       // API Call for signup\n//       const response = await api.post(\"/auth/signup\", {\n//         name,\n//         email,\n//         date_of_birth,\n//         password,\n//       });\n\n//       setOtpSent(true);\n//       setLoading(false);\n//       alert(response.data.message); // \"OTP sent to email. Please verify to complete signup.\"\n//     } catch (error: any) {\n//       setLoading(false);\n//       alert(error.response?.data?.message || \"Something went wrong\");\n//     }\n//   };\n\n//   // Handle OTP verification\n//   const handleVerifyOtp = async () => {\n//     try {\n//       setLoading(true);\n//       const { email, otp } = formData;\n\n//       // API Call for verifying OTP\n//       const response = await api.post(\"/auth/verify-signup-otp\", { email, otp });\n\n//       setLoading(false);\n//       alert(response.data.message); // \"User registered successfully\"\n//       navigate(\"/login\"); // Redirect to login page\n//     } catch (error: any) {\n//       setLoading(false);\n//       alert(error.response?.data?.message || \"Invalid OTP\");\n//     }\n//   };\n\n//   return (\n//     <Grid\n//       container\n//       sx={{\n//         height: \"100vh\",\n//         display: \"flex\",\n//         alignItems: \"center\",\n//         justifyContent: \"center\",\n//         background: \"url('/assets/images/signup-bg.png') no-repeat center center\",\n//         backgroundSize: \"cover\",\n//       }}\n//     >\n//       <Grid\n//         item\n//         xs={11}\n//         sm={8}\n//         md={6}\n//         lg={4}\n//         sx={{\n//           background: \"rgba(255, 255, 255, 0.9)\",\n//           borderRadius: \"12px\",\n//           boxShadow: 3,\n//           padding: \"32px\",\n//         }}\n//       >\n//         <Typography variant=\"h4\" fontWeight=\"bold\" gutterBottom>\n//           Sign up\n//         </Typography>\n//         <Typography variant=\"body1\" color=\"text.secondary\" mb={4}>\n//           Sign up to enjoy the feature of HD\n//         </Typography>\n\n//         {/* Form Fields */}\n//         <TextField\n//           label=\"Your Name\"\n//           name=\"name\"\n//           fullWidth\n//           margin=\"normal\"\n//           variant=\"outlined\"\n//           value={formData.name}\n//           onChange={handleChange}\n//         />\n//         <TextField\n//           label=\"Date of Birth\"\n//           name=\"date_of_birth\"\n//           fullWidth\n//           margin=\"normal\"\n//           variant=\"outlined\"\n//           value={formData.date_of_birth}\n//           onChange={handleChange}\n//           InputProps={{\n//             endAdornment: (\n//               <InputAdornment position=\"end\">\n//                 <CalendarToday />\n//               </InputAdornment>\n//             ),\n//           }}\n//         />\n//         <TextField\n//           label=\"Email\"\n//           name=\"email\"\n//           fullWidth\n//           margin=\"normal\"\n//           variant=\"outlined\"\n//           value={formData.email}\n//           onChange={handleChange}\n//         />\n//         {otpSent ? (\n//           <TextField\n//             label=\"OTP\"\n//             name=\"otp\"\n//             fullWidth\n//             margin=\"normal\"\n//             variant=\"outlined\"\n//             value={formData.otp}\n//             onChange={handleChange}\n//             type={showPassword ? \"text\" : \"password\"}\n//             InputProps={{\n//               endAdornment: (\n//                 <InputAdornment position=\"end\">\n//                   <IconButton onClick={handleOtpVisibility}>\n//                     {showPassword ? <VisibilityOff /> : <Visibility />}\n//                   </IconButton>\n//                 </InputAdornment>\n//               ),\n//             }}\n//           />\n//         ) : (\n//           <TextField\n//             label=\"Password\"\n//             name=\"password\"\n//             fullWidth\n//             margin=\"normal\"\n//             variant=\"outlined\"\n//             type=\"password\"\n//             value={formData.password}\n//             onChange={handleChange}\n//           />\n//         )}\n\n//         {/* Action Button */}\n//         <Button\n//           variant=\"contained\"\n//           fullWidth\n//           sx={{ marginY: 2, paddingY: 1.5 }}\n//           onClick={otpSent ? handleVerifyOtp : handleSignup}\n//           disabled={loading}\n//         >\n//           {loading ? <CircularProgress size={24} /> : otpSent ? \"Verify OTP\" : \"Sign up\"}\n//         </Button>\n\n//         {/* Navigate to Login */}\n//         <Typography align=\"center\" variant=\"body2\">\n//           Already have an account?{\" \"}\n//           <Typography\n//             component=\"span\"\n//             color=\"primary\"\n//             sx={{ cursor: \"pointer\" }}\n//             onClick={() => navigate(\"/login\")}\n//           >\n//             Sign in\n//           </Typography>\n//         </Typography>\n//       </Grid>\n//     </Grid>\n//   );\n// };\n\n// export default Signup;\n\nimport React, { useState } from \"react\";\nimport { Container, Grid, Typography, Box, TextField, InputAdornment, IconButton, Button } from \"@mui/material\";\nimport { CalendarToday, Visibility, VisibilityOff } from \"@mui/icons-material\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport api from \"../../services/api\"; // Importing the API service\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Signup = () => {\n  _s();\n  const [showOtp, setShowOtp] = useState(false);\n  const [otpSent, setOtpSent] = useState(false);\n  const navigate = useNavigate();\n  const {\n    handleSubmit,\n    control,\n    setError,\n    clearErrors,\n    formState: {\n      errors\n    }\n  } = useForm({\n    defaultValues: {\n      name: \"\",\n      date_of_birth: \"\",\n      email: \"\",\n      otp: \"\",\n      password: \"\"\n    }\n  });\n\n  // Toggle OTP visibility\n  const handleOtpVisibility = () => {\n    setShowOtp(!showOtp);\n  };\n\n  // Send signup request\n  const handleSignup = async data => {\n    try {\n      const {\n        name,\n        date_of_birth,\n        email,\n        password\n      } = data;\n\n      // API call to send signup data\n      const response = await api.post(\"/auth/signup\", {\n        name,\n        date_of_birth,\n        email,\n        password\n      });\n      alert(response.data.message); // \"OTP sent to email. Please verify to complete signup.\"\n      setOtpSent(true);\n    } catch (error) {\n      var _error$response, _error$response$data;\n      setError(\"email\", {\n        type: \"server\",\n        message: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || \"Something went wrong\"\n      });\n    }\n  };\n\n  // Verify OTP\n  const handleVerifyOtp = async data => {\n    try {\n      const {\n        email,\n        otp\n      } = data;\n\n      // API call to verify OTP\n      const response = await api.post(\"/auth/verify-signup-otp\", {\n        email,\n        otp\n      });\n      alert(response.data.message); // \"User registered successfully\"\n      navigate(\"/login\"); // Navigate to login page\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      setError(\"otp\", {\n        type: \"server\",\n        message: ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || \"Invalid OTP\"\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: false,\n    sx: {\n      height: \"100vh\",\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      sx: {\n        height: \"100%\",\n        boxShadow: 3,\n        borderRadius: 3,\n        overflow: \"hidden\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 5,\n        sx: {\n          padding: 4\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          fontWeight: \"bold\",\n          sx: {\n            color: \"#232323\"\n          },\n          children: \"HD\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 469,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          component: \"form\",\n          noValidate: true,\n          autoComplete: \"off\",\n          onSubmit: handleSubmit(otpSent ? handleVerifyOtp : handleSignup),\n          sx: {\n            padding: 9\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h4\",\n            fontWeight: \"bold\",\n            gutterBottom: true,\n            children: \"Sign up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 479,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            color: \"text.secondary\",\n            mb: 4,\n            children: \"Sign up to enjoy the feature of HD\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 482,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Controller, {\n            name: \"name\",\n            control: control,\n            rules: {\n              required: \"Name is required\"\n            },\n            render: ({\n              field\n            }) => {\n              var _errors$name;\n              return /*#__PURE__*/_jsxDEV(TextField, {\n                ...field,\n                label: \"Your Name\",\n                fullWidth: true,\n                margin: \"normal\",\n                error: !!errors.name,\n                helperText: (_errors$name = errors.name) === null || _errors$name === void 0 ? void 0 : _errors$name.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 491,\n                columnNumber: 17\n              }, this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 486,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Controller, {\n            name: \"date_of_birth\",\n            control: control,\n            rules: {\n              required: \"Date of Birth is required\"\n            },\n            render: ({\n              field\n            }) => {\n              var _errors$date_of_birth;\n              return /*#__PURE__*/_jsxDEV(TextField, {\n                ...field,\n                label: \"Date of Birth\",\n                fullWidth: true,\n                margin: \"normal\",\n                InputProps: {\n                  endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                    position: \"end\",\n                    children: /*#__PURE__*/_jsxDEV(CalendarToday, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 515,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 514,\n                    columnNumber: 23\n                  }, this)\n                },\n                error: !!errors.date_of_birth,\n                helperText: (_errors$date_of_birth = errors.date_of_birth) === null || _errors$date_of_birth === void 0 ? void 0 : _errors$date_of_birth.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 507,\n                columnNumber: 17\n              }, this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 502,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Controller, {\n            name: \"email\",\n            control: control,\n            rules: {\n              required: \"Email is required\",\n              pattern: {\n                value: /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/,\n                message: \"Invalid email format\"\n              }\n            },\n            render: ({\n              field\n            }) => {\n              var _errors$email;\n              return /*#__PURE__*/_jsxDEV(TextField, {\n                ...field,\n                label: \"Email\",\n                fullWidth: true,\n                margin: \"normal\",\n                error: !!errors.email,\n                helperText: (_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 536,\n                columnNumber: 17\n              }, this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 525,\n            columnNumber: 13\n          }, this), otpSent ? /*#__PURE__*/_jsxDEV(Controller, {\n            name: \"otp\",\n            control: control,\n            rules: {\n              required: \"OTP is required\"\n            },\n            render: ({\n              field\n            }) => {\n              var _errors$otp;\n              return /*#__PURE__*/_jsxDEV(TextField, {\n                ...field,\n                label: \"OTP\",\n                fullWidth: true,\n                margin: \"normal\",\n                type: showOtp ? \"text\" : \"password\",\n                InputProps: {\n                  endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                    position: \"end\",\n                    children: /*#__PURE__*/_jsxDEV(IconButton, {\n                      onClick: handleOtpVisibility,\n                      children: showOtp ? /*#__PURE__*/_jsxDEV(VisibilityOff, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 563,\n                        columnNumber: 40\n                      }, this) : /*#__PURE__*/_jsxDEV(Visibility, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 563,\n                        columnNumber: 60\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 562,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 561,\n                    columnNumber: 25\n                  }, this)\n                },\n                error: !!errors.otp,\n                helperText: (_errors$otp = errors.otp) === null || _errors$otp === void 0 ? void 0 : _errors$otp.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 553,\n                columnNumber: 19\n              }, this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 548,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(Controller, {\n            name: \"password\",\n            control: control,\n            rules: {\n              required: \"Password is required\",\n              minLength: 6\n            },\n            render: ({\n              field\n            }) => {\n              var _errors$password;\n              return /*#__PURE__*/_jsxDEV(TextField, {\n                ...field,\n                label: \"Password\",\n                fullWidth: true,\n                margin: \"normal\",\n                type: \"password\",\n                error: !!errors.password,\n                helperText: (_errors$password = errors.password) === null || _errors$password === void 0 ? void 0 : _errors$password.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 579,\n                columnNumber: 19\n              }, this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 574,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"contained\",\n            fullWidth: true,\n            sx: {\n              marginY: 2,\n              paddingY: 1.5,\n              backgroundColor: \"#367AFF\"\n            },\n            type: \"submit\",\n            children: otpSent ? \"Verify OTP\" : \"Sign up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 592,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 472,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          align: \"center\",\n          variant: \"body2\",\n          children: [\"Already have an account?\", \" \", /*#__PURE__*/_jsxDEV(Typography, {\n            component: \"span\",\n            color: \"primary\",\n            sx: {\n              cursor: \"pointer\"\n            },\n            onClick: () => navigate(\"/login\"),\n            children: \"Sign in\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 604,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 602,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 468,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 7,\n        sx: {\n          backgroundImage: \"url('/assets/images/signup-bg.png')\",\n          backgroundSize: \"cover\",\n          backgroundPosition: \"center\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 616,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 457,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 448,\n    columnNumber: 5\n  }, this);\n};\n_s(Signup, \"z2rwE3tokekYmsX20QqnQJxMCwM=\", false, function () {\n  return [useNavigate, useForm];\n});\n_c = Signup;\nexport default Signup;\nvar _c;\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"names":["React","useState","Container","Grid","Typography","Box","TextField","InputAdornment","IconButton","Button","CalendarToday","Visibility","VisibilityOff","useNavigate","useForm","Controller","api","jsxDEV","_jsxDEV","Signup","_s","showOtp","setShowOtp","otpSent","setOtpSent","navigate","handleSubmit","control","setError","clearErrors","formState","errors","defaultValues","name","date_of_birth","email","otp","password","handleOtpVisibility","handleSignup","data","response","post","alert","message","error","_error$response","_error$response$data","type","handleVerifyOtp","_error$response2","_error$response2$data","maxWidth","sx","height","display","alignItems","justifyContent","children","container","spacing","boxShadow","borderRadius","overflow","item","xs","md","padding","variant","fontWeight","color","fileName","_jsxFileName","lineNumber","columnNumber","component","noValidate","autoComplete","onSubmit","gutterBottom","mb","rules","required","render","field","_errors$name","label","fullWidth","margin","helperText","_errors$date_of_birth","InputProps","endAdornment","position","pattern","value","_errors$email","_errors$otp","onClick","minLength","_errors$password","marginY","paddingY","backgroundColor","align","cursor","backgroundImage","backgroundSize","backgroundPosition","_c","$RefreshReg$"],"sources":["D:/Study/Code/Self-Projects/NoteApp/note-taking-frontend/src/components/Auth/Signup.tsx"],"sourcesContent":["// import React from \"react\";\r\n// import { Formik, Form, Field } from \"formik\";\r\n// import * as Yup from \"yup\";\r\n// import { Button, TextField, Box, Typography } from \"@mui/material\";\r\n// import api from \"../../services/api\";\r\n\r\n// const Signup: React.FC = () => {\r\n//   const initialValues = { email: \"\", password: \"\" };\r\n\r\n//   const validationSchema = Yup.object({\r\n//     email: Yup.string().email(\"Invalid email\").required(\"Required\"),\r\n//     password: Yup.string().min(6, \"Password must be at least 6 characters\").required(\"Required\"),\r\n//   });\r\n\r\n//   const handleSubmit = async (values: typeof initialValues) => {\r\n//     try {\r\n//       await api.post(\"/auth/signup\", values);\r\n//       alert(\"Signup successful! Please login.\");\r\n//       window.location.href = \"/login\";\r\n//     } catch (error) {\r\n//       console.error(\"Signup failed:\", error);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <Box maxWidth={400} mx=\"auto\" mt={5}>\r\n//       <Typography variant=\"h4\" gutterBottom>Signup</Typography>\r\n//       <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={handleSubmit}>\r\n//         {({ errors, touched }) => (\r\n//           <Form>\r\n//             <Field name=\"email\" as={TextField} label=\"Email\" fullWidth margin=\"normal\" error={touched.email && !!errors.email} helperText={touched.email && errors.email} />\r\n//             <Field name=\"password\" as={TextField} label=\"Password\" type=\"password\" fullWidth margin=\"normal\" error={touched.password && !!errors.password} helperText={touched.password && errors.password} />\r\n//             <Button type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth>Signup</Button>\r\n//           </Form>\r\n//         )}\r\n//       </Formik>\r\n//     </Box>\r\n//   );\r\n// };\r\n\r\n// export default Signup;\r\n\r\n\r\n// import React, { useState } from \"react\";\r\n// import {\r\n//   Box,\r\n//   Button,\r\n//   Container,\r\n//   Grid,\r\n//   IconButton,\r\n//   InputAdornment,\r\n//   TextField,\r\n//   Typography,\r\n// } from \"@mui/material\";\r\n// import { Visibility, VisibilityOff, CalendarToday } from \"@mui/icons-material\";\r\n\r\n// const Signup: React.FC = () => {\r\n//   const [showOtp, setShowOtp] = useState(false);\r\n\r\n//   const handleOtpVisibility = () => setShowOtp(!showOtp);\r\n\r\n//   return (\r\n//     <Container maxWidth=\"lg\" sx={{ height: \"100vh\", display: \"flex\", alignItems: \"center\" }}>\r\n//       <Grid container spacing={2} sx={{ boxShadow: 3, borderRadius: 3, overflow: \"hidden\" }}>\r\n//         {/* Left Side - Signup Form */}\r\n//         <Grid item xs={12} md={6} sx={{ padding: 4 }}>\r\n//           <Typography variant=\"h4\" fontWeight=\"bold\" gutterBottom>\r\n//             Sign up\r\n//           </Typography>\r\n//           <Typography variant=\"body1\" color=\"text.secondary\" mb={4}>\r\n//             Sign up to enjoy the feature of HD\r\n//           </Typography>\r\n//           <Box component=\"form\" noValidate autoComplete=\"off\">\r\n//             <TextField\r\n//               label=\"Your Name\"\r\n//               fullWidth\r\n//               margin=\"normal\"\r\n//               variant=\"outlined\"\r\n//             />\r\n//             <TextField\r\n//               label=\"Date of Birth\"\r\n//               fullWidth\r\n//               margin=\"normal\"\r\n//               variant=\"outlined\"\r\n//               InputProps={{\r\n//                 endAdornment: (\r\n//                   <InputAdornment position=\"end\">\r\n//                     <CalendarToday />\r\n//                   </InputAdornment>\r\n//                 ),\r\n//               }}\r\n//             />\r\n//             <TextField\r\n//               label=\"Email\"\r\n//               fullWidth\r\n//               margin=\"normal\"\r\n//               variant=\"outlined\"\r\n//               type=\"email\"\r\n//             />\r\n//             <TextField\r\n//               label=\"OTP\"\r\n//               fullWidth\r\n//               margin=\"normal\"\r\n//               variant=\"outlined\"\r\n//               type={showOtp ? \"text\" : \"password\"}\r\n//               InputProps={{\r\n//                 endAdornment: (\r\n//                   <InputAdornment position=\"end\">\r\n//                     <IconButton onClick={handleOtpVisibility}>\r\n//                       {showOtp ? <VisibilityOff /> : <Visibility />}\r\n//                     </IconButton>\r\n//                   </InputAdornment>\r\n//                 ),\r\n//               }}\r\n//             />\r\n//             <Button\r\n//               variant=\"contained\"\r\n//               fullWidth\r\n//               sx={{ marginY: 2, paddingY: 1.5 }}\r\n//             >\r\n//               Sign up\r\n//             </Button>\r\n//           </Box>\r\n//           <Typography align=\"center\" variant=\"body2\">\r\n//             Already have an account?{\" \"}\r\n//             <Typography\r\n//               component=\"span\"\r\n//               color=\"primary\"\r\n//               sx={{ cursor: \"pointer\" }}\r\n//             >\r\n//               Sign in\r\n//             </Typography>\r\n//           </Typography>\r\n//         </Grid>\r\n\r\n//         {/* Right Side - Image */}\r\n//         <Grid\r\n//           item\r\n//           xs={12}\r\n//           md={6}\r\n//           sx={{\r\n//             backgroundImage: \"url('/assets/images/signup-bg.png')\",\r\n//             backgroundSize: \"cover\",\r\n//             backgroundPosition: \"center\",\r\n//           }}\r\n//         ></Grid>\r\n//       </Grid>\r\n//     </Container>\r\n//   );\r\n// };\r\n\r\n// export default Signup;\r\n\r\n// import React, { useState } from \"react\";\r\n// import {\r\n//   Box,\r\n//   Button,\r\n//   TextField,\r\n//   Typography,\r\n//   Grid,\r\n//   IconButton,\r\n//   InputAdornment,\r\n//   CircularProgress,\r\n// } from \"@mui/material\";\r\n// import { Visibility, VisibilityOff, CalendarToday } from \"@mui/icons-material\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n// import api from \"../../services/api\"; // Importing API service\r\n\r\n// const Signup: React.FC = () => {\r\n//   const [formData, setFormData] = useState({\r\n//     name: \"\",\r\n//     date_of_birth: \"\",\r\n//     email: \"\",\r\n//     otp: \"\",\r\n//     password: \"\",\r\n//   });\r\n//   const [showOtpField, setShowOtpField] = useState(false);\r\n//   const [otpSent, setOtpSent] = useState(false);\r\n//   const [showPassword, setShowPassword] = useState(false);\r\n//   const [loading, setLoading] = useState(false);\r\n//   const navigate = useNavigate();\r\n\r\n//   // Handle form field changes\r\n//   const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n//     const { name, value } = e.target;\r\n//     setFormData((prev) => ({ ...prev, [name]: value }));\r\n//   };\r\n\r\n//   // Handle OTP visibility toggle\r\n//   const handleOtpVisibility = () => setShowPassword(!showPassword);\r\n\r\n//   // Send signup request\r\n//   const handleSignup = async () => {\r\n//     try {\r\n//       setLoading(true);\r\n//       const { name, email, date_of_birth, password } = formData;\r\n\r\n//       // API Call for signup\r\n//       const response = await api.post(\"/auth/signup\", {\r\n//         name,\r\n//         email,\r\n//         date_of_birth,\r\n//         password,\r\n//       });\r\n\r\n//       setOtpSent(true);\r\n//       setLoading(false);\r\n//       alert(response.data.message); // \"OTP sent to email. Please verify to complete signup.\"\r\n//     } catch (error: any) {\r\n//       setLoading(false);\r\n//       alert(error.response?.data?.message || \"Something went wrong\");\r\n//     }\r\n//   };\r\n\r\n//   // Handle OTP verification\r\n//   const handleVerifyOtp = async () => {\r\n//     try {\r\n//       setLoading(true);\r\n//       const { email, otp } = formData;\r\n\r\n//       // API Call for verifying OTP\r\n//       const response = await api.post(\"/auth/verify-signup-otp\", { email, otp });\r\n\r\n//       setLoading(false);\r\n//       alert(response.data.message); // \"User registered successfully\"\r\n//       navigate(\"/login\"); // Redirect to login page\r\n//     } catch (error: any) {\r\n//       setLoading(false);\r\n//       alert(error.response?.data?.message || \"Invalid OTP\");\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <Grid\r\n//       container\r\n//       sx={{\r\n//         height: \"100vh\",\r\n//         display: \"flex\",\r\n//         alignItems: \"center\",\r\n//         justifyContent: \"center\",\r\n//         background: \"url('/assets/images/signup-bg.png') no-repeat center center\",\r\n//         backgroundSize: \"cover\",\r\n//       }}\r\n//     >\r\n//       <Grid\r\n//         item\r\n//         xs={11}\r\n//         sm={8}\r\n//         md={6}\r\n//         lg={4}\r\n//         sx={{\r\n//           background: \"rgba(255, 255, 255, 0.9)\",\r\n//           borderRadius: \"12px\",\r\n//           boxShadow: 3,\r\n//           padding: \"32px\",\r\n//         }}\r\n//       >\r\n//         <Typography variant=\"h4\" fontWeight=\"bold\" gutterBottom>\r\n//           Sign up\r\n//         </Typography>\r\n//         <Typography variant=\"body1\" color=\"text.secondary\" mb={4}>\r\n//           Sign up to enjoy the feature of HD\r\n//         </Typography>\r\n\r\n//         {/* Form Fields */}\r\n//         <TextField\r\n//           label=\"Your Name\"\r\n//           name=\"name\"\r\n//           fullWidth\r\n//           margin=\"normal\"\r\n//           variant=\"outlined\"\r\n//           value={formData.name}\r\n//           onChange={handleChange}\r\n//         />\r\n//         <TextField\r\n//           label=\"Date of Birth\"\r\n//           name=\"date_of_birth\"\r\n//           fullWidth\r\n//           margin=\"normal\"\r\n//           variant=\"outlined\"\r\n//           value={formData.date_of_birth}\r\n//           onChange={handleChange}\r\n//           InputProps={{\r\n//             endAdornment: (\r\n//               <InputAdornment position=\"end\">\r\n//                 <CalendarToday />\r\n//               </InputAdornment>\r\n//             ),\r\n//           }}\r\n//         />\r\n//         <TextField\r\n//           label=\"Email\"\r\n//           name=\"email\"\r\n//           fullWidth\r\n//           margin=\"normal\"\r\n//           variant=\"outlined\"\r\n//           value={formData.email}\r\n//           onChange={handleChange}\r\n//         />\r\n//         {otpSent ? (\r\n//           <TextField\r\n//             label=\"OTP\"\r\n//             name=\"otp\"\r\n//             fullWidth\r\n//             margin=\"normal\"\r\n//             variant=\"outlined\"\r\n//             value={formData.otp}\r\n//             onChange={handleChange}\r\n//             type={showPassword ? \"text\" : \"password\"}\r\n//             InputProps={{\r\n//               endAdornment: (\r\n//                 <InputAdornment position=\"end\">\r\n//                   <IconButton onClick={handleOtpVisibility}>\r\n//                     {showPassword ? <VisibilityOff /> : <Visibility />}\r\n//                   </IconButton>\r\n//                 </InputAdornment>\r\n//               ),\r\n//             }}\r\n//           />\r\n//         ) : (\r\n//           <TextField\r\n//             label=\"Password\"\r\n//             name=\"password\"\r\n//             fullWidth\r\n//             margin=\"normal\"\r\n//             variant=\"outlined\"\r\n//             type=\"password\"\r\n//             value={formData.password}\r\n//             onChange={handleChange}\r\n//           />\r\n//         )}\r\n\r\n//         {/* Action Button */}\r\n//         <Button\r\n//           variant=\"contained\"\r\n//           fullWidth\r\n//           sx={{ marginY: 2, paddingY: 1.5 }}\r\n//           onClick={otpSent ? handleVerifyOtp : handleSignup}\r\n//           disabled={loading}\r\n//         >\r\n//           {loading ? <CircularProgress size={24} /> : otpSent ? \"Verify OTP\" : \"Sign up\"}\r\n//         </Button>\r\n\r\n//         {/* Navigate to Login */}\r\n//         <Typography align=\"center\" variant=\"body2\">\r\n//           Already have an account?{\" \"}\r\n//           <Typography\r\n//             component=\"span\"\r\n//             color=\"primary\"\r\n//             sx={{ cursor: \"pointer\" }}\r\n//             onClick={() => navigate(\"/login\")}\r\n//           >\r\n//             Sign in\r\n//           </Typography>\r\n//         </Typography>\r\n//       </Grid>\r\n//     </Grid>\r\n//   );\r\n// };\r\n\r\n// export default Signup;\r\n\r\n\r\nimport React, { useState } from \"react\";\r\nimport {\r\n  Container,\r\n  Grid,\r\n  Typography,\r\n  Box,\r\n  TextField,\r\n  InputAdornment,\r\n  IconButton,\r\n  Button,\r\n} from \"@mui/material\";\r\nimport { CalendarToday, Visibility, VisibilityOff } from \"@mui/icons-material\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport api from \"../../services/api\"; // Importing the API service\r\n\r\nconst Signup: React.FC = () => {\r\n  const [showOtp, setShowOtp] = useState(false);\r\n  const [otpSent, setOtpSent] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  const {\r\n    handleSubmit,\r\n    control,\r\n    setError,\r\n    clearErrors,\r\n    formState: { errors },\r\n  } = useForm({\r\n    defaultValues: {\r\n      name: \"\",\r\n      date_of_birth: \"\",\r\n      email: \"\",\r\n      otp: \"\",\r\n      password: \"\",\r\n    },\r\n  });\r\n\r\n  // Toggle OTP visibility\r\n  const handleOtpVisibility = () => {\r\n    setShowOtp(!showOtp);\r\n  };\r\n\r\n  // Send signup request\r\n  const handleSignup = async (data: any) => {\r\n    try {\r\n      const { name, date_of_birth, email, password } = data;\r\n\r\n      // API call to send signup data\r\n      const response = await api.post(\"/auth/signup\", {\r\n        name,\r\n        date_of_birth,\r\n        email,\r\n        password,\r\n      });\r\n\r\n      alert(response.data.message); // \"OTP sent to email. Please verify to complete signup.\"\r\n      setOtpSent(true);\r\n    } catch (error: any) {\r\n      setError(\"email\", {\r\n        type: \"server\",\r\n        message: error.response?.data?.message || \"Something went wrong\",\r\n      });\r\n    }\r\n  };\r\n\r\n  // Verify OTP\r\n  const handleVerifyOtp = async (data: any) => {\r\n    try {\r\n      const { email, otp } = data;\r\n\r\n      // API call to verify OTP\r\n      const response = await api.post(\"/auth/verify-signup-otp\", { email, otp });\r\n\r\n      alert(response.data.message); // \"User registered successfully\"\r\n      navigate(\"/login\"); // Navigate to login page\r\n    } catch (error: any) {\r\n      setError(\"otp\", {\r\n        type: \"server\",\r\n        message: error.response?.data?.message || \"Invalid OTP\",\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container\r\n      maxWidth={false}\r\n      sx={{\r\n        height: \"100vh\",\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n        justifyContent: \"center\",\r\n      }}\r\n    >\r\n      <Grid\r\n        container\r\n        spacing={2}\r\n        sx={{\r\n          height: \"100%\",\r\n          boxShadow: 3,\r\n          borderRadius: 3,\r\n          overflow: \"hidden\",\r\n        }}\r\n      >\r\n        {/* Left Side - Signup Form */}\r\n        <Grid item xs={12} md={5} sx={{ padding: 4 }}>\r\n          <Typography variant=\"h6\" fontWeight=\"bold\" sx={{ color: \"#232323\" }}>\r\n            HD\r\n          </Typography>\r\n          <Box\r\n            component=\"form\"\r\n            noValidate\r\n            autoComplete=\"off\"\r\n            onSubmit={handleSubmit(otpSent ? handleVerifyOtp : handleSignup)}\r\n            sx={{ padding: 9 }}\r\n          >\r\n            <Typography variant=\"h4\" fontWeight=\"bold\" gutterBottom>\r\n              Sign up\r\n            </Typography>\r\n            <Typography variant=\"body1\" color=\"text.secondary\" mb={4}>\r\n              Sign up to enjoy the feature of HD\r\n            </Typography>\r\n\r\n            <Controller\r\n              name=\"name\"\r\n              control={control}\r\n              rules={{ required: \"Name is required\" }}\r\n              render={({ field }) => (\r\n                <TextField\r\n                  {...field}\r\n                  label=\"Your Name\"\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  error={!!errors.name}\r\n                  helperText={errors.name?.message}\r\n                />\r\n              )}\r\n            />\r\n\r\n            <Controller\r\n              name=\"date_of_birth\"\r\n              control={control}\r\n              rules={{ required: \"Date of Birth is required\" }}\r\n              render={({ field }) => (\r\n                <TextField\r\n                  {...field}\r\n                  label=\"Date of Birth\"\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  InputProps={{\r\n                    endAdornment: (\r\n                      <InputAdornment position=\"end\">\r\n                        <CalendarToday />\r\n                      </InputAdornment>\r\n                    ),\r\n                  }}\r\n                  error={!!errors.date_of_birth}\r\n                  helperText={errors.date_of_birth?.message}\r\n                />\r\n              )}\r\n            />\r\n\r\n            <Controller\r\n              name=\"email\"\r\n              control={control}\r\n              rules={{\r\n                required: \"Email is required\",\r\n                pattern: {\r\n                  value: /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/,\r\n                  message: \"Invalid email format\",\r\n                },\r\n              }}\r\n              render={({ field }) => (\r\n                <TextField\r\n                  {...field}\r\n                  label=\"Email\"\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  error={!!errors.email}\r\n                  helperText={errors.email?.message}\r\n                />\r\n              )}\r\n            />\r\n\r\n            {otpSent ? (\r\n              <Controller\r\n                name=\"otp\"\r\n                control={control}\r\n                rules={{ required: \"OTP is required\" }}\r\n                render={({ field }) => (\r\n                  <TextField\r\n                    {...field}\r\n                    label=\"OTP\"\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    type={showOtp ? \"text\" : \"password\"}\r\n                    InputProps={{\r\n                      endAdornment: (\r\n                        <InputAdornment position=\"end\">\r\n                          <IconButton onClick={handleOtpVisibility}>\r\n                            {showOtp ? <VisibilityOff /> : <Visibility />}\r\n                          </IconButton>\r\n                        </InputAdornment>\r\n                      ),\r\n                    }}\r\n                    error={!!errors.otp}\r\n                    helperText={errors.otp?.message}\r\n                  />\r\n                )}\r\n              />\r\n            ) : (\r\n              <Controller\r\n                name=\"password\"\r\n                control={control}\r\n                rules={{ required: \"Password is required\", minLength: 6 }}\r\n                render={({ field }) => (\r\n                  <TextField\r\n                    {...field}\r\n                    label=\"Password\"\r\n                    fullWidth\r\n                    margin=\"normal\"\r\n                    type=\"password\"\r\n                    error={!!errors.password}\r\n                    helperText={errors.password?.message}\r\n                  />\r\n                )}\r\n              />\r\n            )}\r\n\r\n            <Button\r\n              variant=\"contained\"\r\n              fullWidth\r\n              sx={{ marginY: 2, paddingY: 1.5, backgroundColor: \"#367AFF\" }}\r\n              type=\"submit\"\r\n            >\r\n              {otpSent ? \"Verify OTP\" : \"Sign up\"}\r\n            </Button>\r\n          </Box>\r\n\r\n          <Typography align=\"center\" variant=\"body2\">\r\n            Already have an account?{\" \"}\r\n            <Typography\r\n              component=\"span\"\r\n              color=\"primary\"\r\n              sx={{ cursor: \"pointer\" }}\r\n              onClick={() => navigate(\"/login\")}\r\n            >\r\n              Sign in\r\n            </Typography>\r\n          </Typography>\r\n        </Grid>\r\n\r\n        {/* Right Side - Image */}\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          md={7}\r\n          sx={{\r\n            backgroundImage: \"url('/assets/images/signup-bg.png')\",\r\n            backgroundSize: \"cover\",\r\n            backgroundPosition: \"center\",\r\n          }}\r\n        ></Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SACEC,SAAS,EACTC,IAAI,EACJC,UAAU,EACVC,GAAG,EACHC,SAAS,EACTC,cAAc,EACdC,UAAU,EACVC,MAAM,QACD,eAAe;AACtB,SAASC,aAAa,EAAEC,UAAU,EAAEC,aAAa,QAAQ,qBAAqB;AAC9E,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,OAAO,EAAEC,UAAU,QAAQ,iBAAiB;AACrD,OAAOC,GAAG,MAAM,oBAAoB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEtC,MAAMC,MAAgB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC7B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGrB,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACsB,OAAO,EAAEC,UAAU,CAAC,GAAGvB,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAMwB,QAAQ,GAAGZ,WAAW,CAAC,CAAC;EAE9B,MAAM;IACJa,YAAY;IACZC,OAAO;IACPC,QAAQ;IACRC,WAAW;IACXC,SAAS,EAAE;MAAEC;IAAO;EACtB,CAAC,GAAGjB,OAAO,CAAC;IACVkB,aAAa,EAAE;MACbC,IAAI,EAAE,EAAE;MACRC,aAAa,EAAE,EAAE;MACjBC,KAAK,EAAE,EAAE;MACTC,GAAG,EAAE,EAAE;MACPC,QAAQ,EAAE;IACZ;EACF,CAAC,CAAC;;EAEF;EACA,MAAMC,mBAAmB,GAAGA,CAAA,KAAM;IAChChB,UAAU,CAAC,CAACD,OAAO,CAAC;EACtB,CAAC;;EAED;EACA,MAAMkB,YAAY,GAAG,MAAOC,IAAS,IAAK;IACxC,IAAI;MACF,MAAM;QAAEP,IAAI;QAAEC,aAAa;QAAEC,KAAK;QAAEE;MAAS,CAAC,GAAGG,IAAI;;MAErD;MACA,MAAMC,QAAQ,GAAG,MAAMzB,GAAG,CAAC0B,IAAI,CAAC,cAAc,EAAE;QAC9CT,IAAI;QACJC,aAAa;QACbC,KAAK;QACLE;MACF,CAAC,CAAC;MAEFM,KAAK,CAACF,QAAQ,CAACD,IAAI,CAACI,OAAO,CAAC,CAAC,CAAC;MAC9BpB,UAAU,CAAC,IAAI,CAAC;IAClB,CAAC,CAAC,OAAOqB,KAAU,EAAE;MAAA,IAAAC,eAAA,EAAAC,oBAAA;MACnBnB,QAAQ,CAAC,OAAO,EAAE;QAChBoB,IAAI,EAAE,QAAQ;QACdJ,OAAO,EAAE,EAAAE,eAAA,GAAAD,KAAK,CAACJ,QAAQ,cAAAK,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBN,IAAI,cAAAO,oBAAA,uBAApBA,oBAAA,CAAsBH,OAAO,KAAI;MAC5C,CAAC,CAAC;IACJ;EACF,CAAC;;EAED;EACA,MAAMK,eAAe,GAAG,MAAOT,IAAS,IAAK;IAC3C,IAAI;MACF,MAAM;QAAEL,KAAK;QAAEC;MAAI,CAAC,GAAGI,IAAI;;MAE3B;MACA,MAAMC,QAAQ,GAAG,MAAMzB,GAAG,CAAC0B,IAAI,CAAC,yBAAyB,EAAE;QAAEP,KAAK;QAAEC;MAAI,CAAC,CAAC;MAE1EO,KAAK,CAACF,QAAQ,CAACD,IAAI,CAACI,OAAO,CAAC,CAAC,CAAC;MAC9BnB,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;IACtB,CAAC,CAAC,OAAOoB,KAAU,EAAE;MAAA,IAAAK,gBAAA,EAAAC,qBAAA;MACnBvB,QAAQ,CAAC,KAAK,EAAE;QACdoB,IAAI,EAAE,QAAQ;QACdJ,OAAO,EAAE,EAAAM,gBAAA,GAAAL,KAAK,CAACJ,QAAQ,cAAAS,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBV,IAAI,cAAAW,qBAAA,uBAApBA,qBAAA,CAAsBP,OAAO,KAAI;MAC5C,CAAC,CAAC;IACJ;EACF,CAAC;EAED,oBACE1B,OAAA,CAAChB,SAAS;IACRkD,QAAQ,EAAE,KAAM;IAChBC,EAAE,EAAE;MACFC,MAAM,EAAE,OAAO;MACfC,OAAO,EAAE,MAAM;MACfC,UAAU,EAAE,QAAQ;MACpBC,cAAc,EAAE;IAClB,CAAE;IAAAC,QAAA,eAEFxC,OAAA,CAACf,IAAI;MACHwD,SAAS;MACTC,OAAO,EAAE,CAAE;MACXP,EAAE,EAAE;QACFC,MAAM,EAAE,MAAM;QACdO,SAAS,EAAE,CAAC;QACZC,YAAY,EAAE,CAAC;QACfC,QAAQ,EAAE;MACZ,CAAE;MAAAL,QAAA,gBAGFxC,OAAA,CAACf,IAAI;QAAC6D,IAAI;QAACC,EAAE,EAAE,EAAG;QAACC,EAAE,EAAE,CAAE;QAACb,EAAE,EAAE;UAAEc,OAAO,EAAE;QAAE,CAAE;QAAAT,QAAA,gBAC3CxC,OAAA,CAACd,UAAU;UAACgE,OAAO,EAAC,IAAI;UAACC,UAAU,EAAC,MAAM;UAAChB,EAAE,EAAE;YAAEiB,KAAK,EAAE;UAAU,CAAE;UAAAZ,QAAA,EAAC;QAErE;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC,eACbxD,OAAA,CAACb,GAAG;UACFsE,SAAS,EAAC,MAAM;UAChBC,UAAU;UACVC,YAAY,EAAC,KAAK;UAClBC,QAAQ,EAAEpD,YAAY,CAACH,OAAO,GAAG0B,eAAe,GAAGV,YAAY,CAAE;UACjEc,EAAE,EAAE;YAAEc,OAAO,EAAE;UAAE,CAAE;UAAAT,QAAA,gBAEnBxC,OAAA,CAACd,UAAU;YAACgE,OAAO,EAAC,IAAI;YAACC,UAAU,EAAC,MAAM;YAACU,YAAY;YAAArB,QAAA,EAAC;UAExD;YAAAa,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,eACbxD,OAAA,CAACd,UAAU;YAACgE,OAAO,EAAC,OAAO;YAACE,KAAK,EAAC,gBAAgB;YAACU,EAAE,EAAE,CAAE;YAAAtB,QAAA,EAAC;UAE1D;YAAAa,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,eAEbxD,OAAA,CAACH,UAAU;YACTkB,IAAI,EAAC,MAAM;YACXN,OAAO,EAAEA,OAAQ;YACjBsD,KAAK,EAAE;cAAEC,QAAQ,EAAE;YAAmB,CAAE;YACxCC,MAAM,EAAEA,CAAC;cAAEC;YAAM,CAAC;cAAA,IAAAC,YAAA;cAAA,oBAChBnE,OAAA,CAACZ,SAAS;gBAAA,GACJ8E,KAAK;gBACTE,KAAK,EAAC,WAAW;gBACjBC,SAAS;gBACTC,MAAM,EAAC,QAAQ;gBACf3C,KAAK,EAAE,CAAC,CAACd,MAAM,CAACE,IAAK;gBACrBwD,UAAU,GAAAJ,YAAA,GAAEtD,MAAM,CAACE,IAAI,cAAAoD,YAAA,uBAAXA,YAAA,CAAazC;cAAQ;gBAAA2B,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAClC,CAAC;YAAA;UACF;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,eAEFxD,OAAA,CAACH,UAAU;YACTkB,IAAI,EAAC,eAAe;YACpBN,OAAO,EAAEA,OAAQ;YACjBsD,KAAK,EAAE;cAAEC,QAAQ,EAAE;YAA4B,CAAE;YACjDC,MAAM,EAAEA,CAAC;cAAEC;YAAM,CAAC;cAAA,IAAAM,qBAAA;cAAA,oBAChBxE,OAAA,CAACZ,SAAS;gBAAA,GACJ8E,KAAK;gBACTE,KAAK,EAAC,eAAe;gBACrBC,SAAS;gBACTC,MAAM,EAAC,QAAQ;gBACfG,UAAU,EAAE;kBACVC,YAAY,eACV1E,OAAA,CAACX,cAAc;oBAACsF,QAAQ,EAAC,KAAK;oBAAAnC,QAAA,eAC5BxC,OAAA,CAACR,aAAa;sBAAA6D,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OAAE;kBAAC;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACH;gBAEpB,CAAE;gBACF7B,KAAK,EAAE,CAAC,CAACd,MAAM,CAACG,aAAc;gBAC9BuD,UAAU,GAAAC,qBAAA,GAAE3D,MAAM,CAACG,aAAa,cAAAwD,qBAAA,uBAApBA,qBAAA,CAAsB9C;cAAQ;gBAAA2B,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC3C,CAAC;YAAA;UACF;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,eAEFxD,OAAA,CAACH,UAAU;YACTkB,IAAI,EAAC,OAAO;YACZN,OAAO,EAAEA,OAAQ;YACjBsD,KAAK,EAAE;cACLC,QAAQ,EAAE,mBAAmB;cAC7BY,OAAO,EAAE;gBACPC,KAAK,EAAE,4BAA4B;gBACnCnD,OAAO,EAAE;cACX;YACF,CAAE;YACFuC,MAAM,EAAEA,CAAC;cAAEC;YAAM,CAAC;cAAA,IAAAY,aAAA;cAAA,oBAChB9E,OAAA,CAACZ,SAAS;gBAAA,GACJ8E,KAAK;gBACTE,KAAK,EAAC,OAAO;gBACbC,SAAS;gBACTC,MAAM,EAAC,QAAQ;gBACf3C,KAAK,EAAE,CAAC,CAACd,MAAM,CAACI,KAAM;gBACtBsD,UAAU,GAAAO,aAAA,GAAEjE,MAAM,CAACI,KAAK,cAAA6D,aAAA,uBAAZA,aAAA,CAAcpD;cAAQ;gBAAA2B,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACnC,CAAC;YAAA;UACF;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,EAEDnD,OAAO,gBACNL,OAAA,CAACH,UAAU;YACTkB,IAAI,EAAC,KAAK;YACVN,OAAO,EAAEA,OAAQ;YACjBsD,KAAK,EAAE;cAAEC,QAAQ,EAAE;YAAkB,CAAE;YACvCC,MAAM,EAAEA,CAAC;cAAEC;YAAM,CAAC;cAAA,IAAAa,WAAA;cAAA,oBAChB/E,OAAA,CAACZ,SAAS;gBAAA,GACJ8E,KAAK;gBACTE,KAAK,EAAC,KAAK;gBACXC,SAAS;gBACTC,MAAM,EAAC,QAAQ;gBACfxC,IAAI,EAAE3B,OAAO,GAAG,MAAM,GAAG,UAAW;gBACpCsE,UAAU,EAAE;kBACVC,YAAY,eACV1E,OAAA,CAACX,cAAc;oBAACsF,QAAQ,EAAC,KAAK;oBAAAnC,QAAA,eAC5BxC,OAAA,CAACV,UAAU;sBAAC0F,OAAO,EAAE5D,mBAAoB;sBAAAoB,QAAA,EACtCrC,OAAO,gBAAGH,OAAA,CAACN,aAAa;wBAAA2D,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAE,CAAC,gBAAGxD,OAAA,CAACP,UAAU;wBAAA4D,QAAA,EAAAC,YAAA;wBAAAC,UAAA;wBAAAC,YAAA;sBAAA,OAAE;oBAAC;sBAAAH,QAAA,EAAAC,YAAA;sBAAAC,UAAA;sBAAAC,YAAA;oBAAA,OACnC;kBAAC;oBAAAH,QAAA,EAAAC,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACC;gBAEpB,CAAE;gBACF7B,KAAK,EAAE,CAAC,CAACd,MAAM,CAACK,GAAI;gBACpBqD,UAAU,GAAAQ,WAAA,GAAElE,MAAM,CAACK,GAAG,cAAA6D,WAAA,uBAAVA,WAAA,CAAYrD;cAAQ;gBAAA2B,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACjC,CAAC;YAAA;UACF;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,gBAEFxD,OAAA,CAACH,UAAU;YACTkB,IAAI,EAAC,UAAU;YACfN,OAAO,EAAEA,OAAQ;YACjBsD,KAAK,EAAE;cAAEC,QAAQ,EAAE,sBAAsB;cAAEiB,SAAS,EAAE;YAAE,CAAE;YAC1DhB,MAAM,EAAEA,CAAC;cAAEC;YAAM,CAAC;cAAA,IAAAgB,gBAAA;cAAA,oBAChBlF,OAAA,CAACZ,SAAS;gBAAA,GACJ8E,KAAK;gBACTE,KAAK,EAAC,UAAU;gBAChBC,SAAS;gBACTC,MAAM,EAAC,QAAQ;gBACfxC,IAAI,EAAC,UAAU;gBACfH,KAAK,EAAE,CAAC,CAACd,MAAM,CAACM,QAAS;gBACzBoD,UAAU,GAAAW,gBAAA,GAAErE,MAAM,CAACM,QAAQ,cAAA+D,gBAAA,uBAAfA,gBAAA,CAAiBxD;cAAQ;gBAAA2B,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACtC,CAAC;YAAA;UACF;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CACF,eAEDxD,OAAA,CAACT,MAAM;YACL2D,OAAO,EAAC,WAAW;YACnBmB,SAAS;YACTlC,EAAE,EAAE;cAAEgD,OAAO,EAAE,CAAC;cAAEC,QAAQ,EAAE,GAAG;cAAEC,eAAe,EAAE;YAAU,CAAE;YAC9DvD,IAAI,EAAC,QAAQ;YAAAU,QAAA,EAEZnC,OAAO,GAAG,YAAY,GAAG;UAAS;YAAAgD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC7B,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC,eAENxD,OAAA,CAACd,UAAU;UAACoG,KAAK,EAAC,QAAQ;UAACpC,OAAO,EAAC,OAAO;UAAAV,QAAA,GAAC,0BACjB,EAAC,GAAG,eAC5BxC,OAAA,CAACd,UAAU;YACTuE,SAAS,EAAC,MAAM;YAChBL,KAAK,EAAC,SAAS;YACfjB,EAAE,EAAE;cAAEoD,MAAM,EAAE;YAAU,CAAE;YAC1BP,OAAO,EAAEA,CAAA,KAAMzE,QAAQ,CAAC,QAAQ,CAAE;YAAAiC,QAAA,EACnC;UAED;YAAAa,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC,eAGPxD,OAAA,CAACf,IAAI;QACH6D,IAAI;QACJC,EAAE,EAAE,EAAG;QACPC,EAAE,EAAE,CAAE;QACNb,EAAE,EAAE;UACFqD,eAAe,EAAE,qCAAqC;UACtDC,cAAc,EAAE,OAAO;UACvBC,kBAAkB,EAAE;QACtB;MAAE;QAAArC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEhB,CAAC;AAACtD,EAAA,CAzPID,MAAgB;EAAA,QAGHN,WAAW,EAQxBC,OAAO;AAAA;AAAA+F,EAAA,GAXP1F,MAAgB;AA2PtB,eAAeA,MAAM;AAAC,IAAA0F,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}