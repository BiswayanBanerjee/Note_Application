{"ast":null,"code":"var _jsxFileName = \"D:\\\\Study\\\\Code\\\\Self-Projects\\\\NoteApp\\\\note-taking-frontend\\\\src\\\\components\\\\Notes\\\\NotesList.tsx\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from \"react\";\n// import { Button, Box, Typography, Grid } from \"@mui/material\";\n// import api from \"../../services/api\";\n// import NoteItem from \"./NoteItem\";\n\n// const NotesList: React.FC = () => {\n//   interface Note {\n//     _id: string;\n//     // add other properties of Note here\n//   }\n\n//   const [notes, setNotes] = useState<Note[]>([]);\n\n//   const fetchNotes = async () => {\n//     try {\n//       const response = await api.get(\"/notes\");\n//       setNotes(response.data);\n//     } catch (error) {\n//       console.error(\"Error fetching notes:\", error);\n//     }\n//   };\n\n//   useEffect(() => {\n//     fetchNotes();\n//   }, []);\n\n//   const handleDelete = (id: string) => {\n//     setNotes(notes.filter(note => note._id !== id));\n//   };\n\n//   return (\n//     <Box p={2}>\n//       <Typography variant=\"h4\" gutterBottom>Your Notes</Typography>\n//       <Button variant=\"contained\" color=\"primary\" href=\"/create-note\">Create Note</Button>\n//       <Grid container spacing={2} mt={2}>\n//         {notes.map((note: any) => (\n//           <Grid item xs={12} sm={6} md={4} key={note._id}>\n//             <NoteItem note={note} onDelete={handleDelete} />\n//           </Grid>\n//         ))}\n//       </Grid>\n//     </Box>\n//   );\n// };\n\n// export default NotesList;\n\n// import React, { useEffect, useState } from \"react\";\n// import { Button, Box, Typography, Grid, Card, CardContent, IconButton } from \"@mui/material\";\n// import { Delete } from \"@mui/icons-material\";\n// import api from \"../../services/api\";\n\n// const Dashboard: React.FC = () => {\n//   interface Note {\n//     _id: string;\n//     title: string;\n//     content: string;\n//   }\n\n//   const [notes, setNotes] = useState<Note[]>([]);\n\n//   const fetchNotes = async () => {\n//     try {\n//       const response = await api.get(\"/notes\");\n//       setNotes(response.data);\n//     } catch (error) {\n//       console.error(\"Error fetching notes:\", error);\n//     }\n//   };\n\n//   const handleDelete = async (id: string) => {\n//     try {\n//       await api.delete(`/notes/${id}`);\n//       setNotes(notes.filter((note) => note._id !== id));\n//     } catch (error) {\n//       console.error(\"Error deleting note:\", error);\n//     }\n//   };\n\n//   useEffect(() => {\n//     fetchNotes();\n//   }, []);\n\n//   const truncateContent = (content: string, maxLength: number = 15) =>\n//     content.length > maxLength ? `${content.slice(0, maxLength)}..` : content;\n\n//   return (\n//     <Box\n//       sx={{\n//         p: 2,\n//         display: \"flex\",\n//         flexDirection: \"column\",\n//         alignItems: \"center\",\n//         height: \"100vh\",\n//         backgroundColor: \"#f9f9f9\",\n//       }}\n//     >\n//       {/* Top Bar */}\n//       <Box\n//         sx={{\n//           width: \"100%\",\n//           display: \"flex\",\n//           justifyContent: \"space-between\",\n//           alignItems: \"center\",\n//           mb: 2,\n//         }}\n//       >\n//         <Typography variant=\"h6\" sx={{ fontWeight: \"bold\" }}>\n//           Dashboard\n//         </Typography>\n//         <Button variant=\"text\" color=\"primary\" href=\"/logout\">\n//           Sign Out\n//         </Button>\n//       </Box>\n\n//       {/* Welcome Card */}\n//       <Card\n//         sx={{\n//           width: \"100%\",\n//           maxWidth: 500,\n//           mb: 3,\n//           p: 2,\n//           textAlign: \"center\",\n//           boxShadow: 2,\n//           borderRadius: \"10px\",\n//         }}\n//       >\n//         <CardContent>\n//           <Typography variant=\"h6\" fontWeight=\"bold\">\n//             Welcome, Jonas Kahnwald!\n//           </Typography>\n//           <Typography variant=\"body2\" color=\"text.secondary\">\n//             Email: xxxxxx@xxxx.com\n//           </Typography>\n//         </CardContent>\n//       </Card>\n\n//       {/* Create Note Button */}\n//       <Button\n//         variant=\"contained\"\n//         href=\"/create-note\"\n//         sx={{\n//           width: \"100%\",\n//           maxWidth: 300,\n//           mb: 3,\n//           py: 1.5,\n//           fontWeight: \"bold\",\n//           backgroundColor: \"#367AFF\",\n//           borderRadius: \"10px\",\n//         }}\n//       >\n//         <Typography\n//           variant=\"button\"\n//           sx={{\n//             color: \"#FFF\",\n//             fontFamily: \"Inter\",\n//             fontSize: \"16px\",\n//             fontStyle: \"normal\",\n//             fontWeight: 600,\n//             lineHeight: \"120%\",\n//             letterSpacing: \"-0.16px\",\n//           }}\n//         >\n//           Create Note\n//         </Typography>\n//       </Button>\n\n//       {/* Notes List */}\n//       <Box\n//         sx={{\n//           width: \"100%\",\n//           maxWidth: 500,\n//           flexGrow: 1,\n//           overflowY: \"auto\",\n//         }}\n//       >\n//         <Typography variant=\"h6\" gutterBottom>\n//           Notes\n//         </Typography>\n//         <Grid container spacing={2}>\n//           {notes.map((note, index) => (\n//             <Grid item xs={12} key={note._id}>\n//               <Card\n//                 sx={{\n//                   display: \"flex\",\n//                   justifyContent: \"space-between\",\n//                   alignItems: \"center\",\n//                   boxShadow: 1,\n//                   borderRadius: \"8px\",\n//                   p: 1.5,\n//                   backgroundColor: \"#fff\",\n//                 }}\n//               >\n//                 <Box>\n//                   <Typography variant=\"subtitle1\" fontWeight=\"bold\">\n//                     Note {index + 1}: {note.title}\n//                   </Typography>\n//                   <Typography variant=\"body2\" color=\"text.secondary\">\n//                     {truncateContent(note.content)}\n//                   </Typography>\n//                 </Box>\n//                 <IconButton\n//                   aria-label=\"delete\"\n//                   onClick={() => handleDelete(note._id)}\n//                   sx={{\n//                     border: \"1px solid #ccc\",\n//                     borderRadius: \"50%\",\n//                     backgroundColor: \"#fff\",\n//                     color: \"#000\",\n//                     \"&:hover\": {\n//                       backgroundColor: \"#f5f5f5\",\n//                     },\n//                   }}\n//                 >\n//                   <Delete />\n//                 </IconButton>\n//               </Card>\n//             </Grid>\n//           ))}\n//         </Grid>\n//       </Box>\n//     </Box>\n//   );\n// };\n\n// export default Dashboard;\n\n// import React, { useEffect, useState } from \"react\";\n// import {\n//   Button,\n//   Box,\n//   Typography,\n//   Grid,\n//   Card,\n//   CardContent,\n//   IconButton,\n//   TextField,\n// } from \"@mui/material\";\n// import { Delete, Edit, Save, Cancel, ExpandMore, ExpandLess } from \"@mui/icons-material\";\n// import api from \"../../services/api\";\n\n// const Dashboard: React.FC = () => {\n//   interface Note {\n//     _id: string;\n//     title: string;\n//     content: string;\n//   }\n\n//   const [notes, setNotes] = useState<Note[]>([]);\n//   const [expandedNote, setExpandedNote] = useState<string | null>(null);\n//   const [editingNote, setEditingNote] = useState<Note | null>(null);\n\n//   const fetchNotes = async () => {\n//     try {\n//       const response = await api.get(\"/notes\");\n//       setNotes(response.data);\n//     } catch (error) {\n//       console.error(\"Error fetching notes:\", error);\n//     }\n//   };\n\n//   const handleDelete = async (id: string) => {\n//     try {\n//       await api.delete(`/notes/${id}`);\n//       setNotes(notes.filter((note) => note._id !== id));\n//     } catch (error) {\n//       console.error(\"Error deleting note:\", error);\n//     }\n//   };\n\n//   const handleEditStart = (note: Note) => {\n//     setEditingNote(note);\n//   };\n\n//   const handleEditCancel = () => {\n//     setEditingNote(null);\n//   };\n\n//   const handleEditSave = async () => {\n//     if (editingNote) {\n//       try {\n//         await api.put(`/notes/${editingNote._id}`, {\n//           title: editingNote.title,\n//           content: editingNote.content,\n//         });\n//         setNotes((prevNotes) =>\n//           prevNotes.map((note) =>\n//             note._id === editingNote._id ? editingNote : note\n//           )\n//         );\n//         setEditingNote(null);\n//       } catch (error) {\n//         console.error(\"Error updating note:\", error);\n//       }\n//     }\n//   };\n\n//   const toggleExpand = (id: string) => {\n//     setExpandedNote((prev) => (prev === id ? null : id));\n//     setEditingNote(null); // Exit editing mode when toggling expansion\n//   };\n\n//   const handleInputChange = (\n//     e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\n//   ) => {\n//     if (editingNote) {\n//       setEditingNote({ ...editingNote, [e.target.name]: e.target.value });\n//     }\n//   };\n\n//   useEffect(() => {\n//     fetchNotes();\n//   }, []);\n\n//   return (\n//     <Box\n//       sx={{\n//         position: \"relative\",\n//         width: \"100%\",\n//         height: \"100vh\",\n//         overflow: \"hidden\",\n//       }}\n//     >\n//       {/* Background Image */}\n//       <Box\n//         sx={{\n//           position: \"absolute\",\n//           top: 0,\n//           left: 0,\n//           width: \"100%\",\n//           height: \"100%\",\n//           backgroundImage: \"url(/assets/images/bg-img.png)\",\n//           backgroundSize: \"cover\",\n//           backgroundPosition: \"center\",\n//           opacity: 0.9,\n//           zIndex: -5,\n//         }}\n//       />\n\n//       {/* Main Content */}\n//       <Box\n//         sx={{\n//           p: 2,\n//           display: \"flex\",\n//           flexDirection: \"column\",\n//           alignItems: \"center\",\n//           height: \"100%\",\n//           backgroundColor: \"rgba(255, 255, 255, 0.5)\",\n//         }}\n//       >\n//         {/* Top Bar */}\n//         <Box\n//           sx={{\n//             width: \"100%\",\n//             display: \"flex\",\n//             justifyContent: \"space-between\",\n//             alignItems: \"center\",\n//             mb: 2,\n//           }}\n//         >\n//           <Typography variant=\"h6\" sx={{ fontWeight: \"bold\" }}>\n//             Dashboard\n//           </Typography>\n//           <Button variant=\"text\" color=\"primary\" href=\"/logout\">\n//             Sign Out\n//           </Button>\n//         </Box>\n\n//         {/* Welcome Card */}\n//         <Card\n//           sx={{\n//             width: \"100%\",\n//             maxWidth: 500,\n//             mb: 3,\n//             p: 2,\n//             textAlign: \"center\",\n//             boxShadow: 2,\n//             borderRadius: \"10px\",\n//           }}\n//         >\n//           <CardContent>\n//             <Typography variant=\"h6\" fontWeight=\"bold\">\n//               Welcome, Jonas Kahnwald!\n//             </Typography>\n//             <Typography variant=\"body2\" color=\"text.secondary\">\n//               Email: xxxxxx@xxxx.com\n//             </Typography>\n//           </CardContent>\n//         </Card>\n\n//         {/* Create Note Button */}\n//         <Button\n//           variant=\"contained\"\n//           href=\"/create-note\"\n//           sx={{\n//             width: \"100%\",\n//             maxWidth: 300,\n//             mb: 3,\n//             py: 1.5,\n//             fontWeight: \"bold\",\n//             backgroundColor: \"#367AFF\",\n//             borderRadius: \"10px\",\n//           }}\n//         >\n//           Create Note\n//         </Button>\n\n//         {/* Notes List */}\n//         <Box\n//           sx={{\n//             width: \"100%\",\n//             maxWidth: 500,\n//             flexGrow: 1,\n//             overflowY: \"auto\",\n//           }}\n//         >\n//           <Typography variant=\"h6\" gutterBottom>\n//             Notes\n//           </Typography>\n//           <Grid container spacing={2}>\n//             {notes.map((note, index) => (\n//               <Grid item xs={12} key={note._id}>\n//                 <Card\n//                   sx={{\n//                     boxShadow: 1,\n//                     borderRadius: \"8px\",\n//                     p: 1.5,\n//                     backgroundColor: \"#fff\",\n//                   }}\n//                 >\n//                   <Box\n//                     onClick={() => toggleExpand(note._id)}\n//                     sx={{\n//                       cursor: \"pointer\",\n//                       display: \"flex\",\n//                       justifyContent: \"space-between\",\n//                       alignItems: \"center\",\n//                     }}\n//                   >\n//                     <Box>\n//                       <Typography variant=\"subtitle1\" fontWeight=\"bold\">\n//                         Note {index + 1}: {note.title}\n//                       </Typography>\n//                       <Typography variant=\"body2\" color=\"text.secondary\">\n//                         {expandedNote === note._id\n//                           ? note.content\n//                           : note.content.slice(0, 15) + \"...\"}\n//                       </Typography>\n//                     </Box>\n//                     <Box>\n//                       <IconButton>\n//                         {expandedNote === note._id ? (\n//                           <ExpandLess />\n//                         ) : (\n//                           <ExpandMore />\n//                         )}\n//                       </IconButton>\n//                     </Box>\n//                   </Box>\n\n//                   {expandedNote === note._id && (\n//                     <Box sx={{ mt: 1 }}>\n//                       {editingNote && editingNote._id === note._id ? (\n//                         <>\n//                           <TextField\n//                             name=\"title\"\n//                             label=\"Title\"\n//                             value={editingNote.title}\n//                             sx={{ mb: 2 }} // Adds spacing below the Title field\n//                             onChange={handleInputChange}\n//                             fullWidth\n//                           />\n//                           <TextField\n//                             name=\"content\"\n//                             label=\"Content\"\n//                             value={editingNote.content}\n//                             onChange={handleInputChange}\n//                             multiline\n//                             rows={4}\n//                             fullWidth\n//                           />\n//                           <Box\n//                             sx={{\n//                               display: \"flex\",\n//                               justifyContent: \"space-between\",\n//                               mt: 1,\n//                             }}\n//                           >\n//                             <Button\n//                               startIcon={<Save />}\n//                               onClick={handleEditSave}\n//                               variant=\"contained\"\n//                               color=\"primary\"\n//                             >\n//                               Save\n//                             </Button>\n//                             <Button\n//                               startIcon={<Cancel />}\n//                               onClick={handleEditCancel}\n//                               variant=\"outlined\"\n//                               color=\"secondary\"\n//                             >\n//                               Cancel\n//                             </Button>\n//                           </Box>\n//                         </>\n//                       ) : (\n//                         <Box sx={{ display: \"flex\", gap: 1, mt: 1 }}>\n//                           <IconButton\n//                             aria-label=\"edit\"\n//                             onClick={(e) => {\n//                               e.stopPropagation();\n//                               handleEditStart(note);\n//                             }}\n//                           >\n//                             <Edit />\n//                           </IconButton>\n//                           <IconButton\n//                             aria-label=\"delete\"\n//                             onClick={(e) => {\n//                               e.stopPropagation();\n//                               handleDelete(note._id);\n//                             }}\n//                           >\n//                             <Delete />\n//                           </IconButton>\n//                         </Box>\n//                       )}\n//                     </Box>\n//                   )}\n//                 </Card>\n//               </Grid>\n//             ))}\n//           </Grid>\n//         </Box>\n//       </Box>\n//     </Box>\n//   );\n// };\n\n// export default Dashboard;\n\nimport React, { useEffect, useState } from \"react\";\nimport { Button, Box, Typography, Grid, Card, CardContent, IconButton, TextField } from \"@mui/material\";\nimport { Delete, Edit, Save, Cancel, ExpandMore, ExpandLess, Add } from \"@mui/icons-material\";\nimport { jwtDecode } from \"jwt-decode\";\nimport api from \"../../services/api\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [notes, setNotes] = useState([]);\n  const [expandedNote, setExpandedNote] = useState(null);\n  const [editingNote, setEditingNote] = useState(null);\n  const [newNote, setNewNote] = useState({\n    title: \"\",\n    content: \"\"\n  });\n  const [showCreateForm, setShowCreateForm] = useState(false);\n  const [user, setUser] = useState(null);\n  const fetchNotes = async () => {\n    try {\n      const response = await api.get(\"/notes\");\n      setNotes(response.data);\n    } catch (error) {\n      console.error(\"Error fetching notes:\", error);\n    }\n  };\n  const handleDelete = async id => {\n    try {\n      await api.delete(`/notes/${id}`);\n      setNotes(notes.filter(note => note._id !== id));\n    } catch (error) {\n      console.error(\"Error deleting note:\", error);\n    }\n  };\n  const handleEditStart = note => {\n    setEditingNote(note);\n  };\n  const handleEditCancel = () => {\n    setEditingNote(null);\n  };\n  const handleEditSave = async () => {\n    if (editingNote) {\n      try {\n        await api.put(`/notes/${editingNote._id}`, {\n          title: editingNote.title,\n          content: editingNote.content\n        });\n        setNotes(prevNotes => prevNotes.map(note => note._id === editingNote._id ? editingNote : note));\n        setEditingNote(null);\n      } catch (error) {\n        console.error(\"Error updating note:\", error);\n      }\n    }\n  };\n  const toggleExpand = id => {\n    setExpandedNote(prev => prev === id ? null : id);\n    setEditingNote(null); // Exit editing mode when toggling expansion\n  };\n  const handleInputChange = e => {\n    if (editingNote) {\n      setEditingNote({\n        ...editingNote,\n        [e.target.name]: e.target.value\n      });\n    } else {\n      setNewNote({\n        ...newNote,\n        [e.target.name]: e.target.value\n      });\n    }\n  };\n  const handleCreateNote = async () => {\n    if (newNote.title && newNote.content) {\n      try {\n        const response = await api.post(\"/notes\", newNote);\n        const createdNote = response.data;\n\n        // Ensure the new note has all necessary fields\n        setNotes(prevNotes => [{\n          ...createdNote,\n          content: newNote.content || \"\"\n        }, ...prevNotes]);\n        setNewNote({\n          title: \"\",\n          content: \"\"\n        });\n        setShowCreateForm(false);\n      } catch (error) {\n        console.error(\"Error creating note:\", error);\n      }\n    }\n  };\n  const handleSignOut = () => {\n    localStorage.removeItem(\"token\");\n    window.location.href = \"/login\";\n  };\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\");\n    if (token) {\n      try {\n        const decodedToken = jwtDecode(token);\n        setUser({\n          name: decodedToken.name,\n          email: decodedToken.email\n        });\n        fetchNotes();\n      } catch (error) {\n        console.error(\"Invalid token:\", error);\n      }\n    } else {\n      window.location.href = \"/login\";\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      position: \"relative\",\n      width: \"100%\",\n      height: \"100vh\",\n      overflow: \"hidden\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        position: \"absolute\",\n        top: 0,\n        left: 0,\n        width: \"100%\",\n        height: \"100%\",\n        backgroundImage: \"url(/assets/images/bg-img.png)\",\n        backgroundSize: \"cover\",\n        backgroundPosition: \"center\",\n        opacity: 0.9,\n        zIndex: -5\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 709,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        p: 2,\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        height: \"100%\",\n        backgroundColor: \"rgba(255, 255, 255, 0.5)\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          width: \"100%\",\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n          mb: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: \"flex\",\n            alignItems: \"center\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/assets/images/hd-icon.png\",\n            alt: \"HD Icon\",\n            style: {\n              width: 32,\n              height: 32,\n              marginRight: 8\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 751,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            sx: {\n              fontWeight: \"bold\"\n            },\n            children: \"Dashboard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 756,\n            columnNumber: 5\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 745,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"text\",\n          color: \"primary\",\n          onClick: handleSignOut,\n          children: \"Sign Out\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 760,\n          columnNumber: 3\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 736,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        sx: {\n          width: \"90%\",\n          maxWidth: 500,\n          mb: 3,\n          p: 2,\n          textAlign: \"center\",\n          boxShadow: 2,\n          borderRadius: \"10px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            fontWeight: \"bold\",\n            children: [\"Welcome, \", (user === null || user === void 0 ? void 0 : user.name) || \"User\", \"!\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 778,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"text.secondary\",\n            children: [\"Email: \", (user === null || user === void 0 ? void 0 : user.email) || \"N/A\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 781,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 777,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 766,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        startIcon: /*#__PURE__*/_jsxDEV(Add, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 789,\n          columnNumber: 22\n        }, this),\n        variant: \"contained\",\n        sx: {\n          width: \"100%\",\n          maxWidth: 300,\n          mb: 3,\n          py: 1.5,\n          fontWeight: \"bold\",\n          backgroundColor: \"#367AFF\",\n          borderRadius: \"10px\"\n        },\n        onClick: () => setShowCreateForm(!showCreateForm),\n        children: showCreateForm ? \"Cancel\" : \"Create Note\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 788,\n        columnNumber: 9\n      }, this), showCreateForm && /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          width: \"100%\",\n          maxWidth: 500,\n          mb: 3\n        },\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          name: \"title\",\n          label: \"Title\",\n          value: newNote.title,\n          onChange: handleInputChange,\n          fullWidth: true,\n          sx: {\n            mb: 2\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 806,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          name: \"content\",\n          label: \"Content\",\n          value: newNote.content,\n          onChange: handleInputChange,\n          multiline: true,\n          rows: 4,\n          fullWidth: true,\n          sx: {\n            mb: 2\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 814,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: handleCreateNote,\n          fullWidth: true,\n          children: \"Save Note\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 824,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 805,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          width: \"100%\",\n          maxWidth: 500,\n          flexGrow: 1,\n          overflowY: \"auto\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          children: \"Notes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 844,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: notes.map((note, index) => /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              sx: {\n                boxShadow: 1,\n                borderRadius: \"8px\",\n                p: 1.5,\n                backgroundColor: \"#fff\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                onClick: () => toggleExpand(note._id),\n                sx: {\n                  cursor: \"pointer\",\n                  display: \"flex\",\n                  justifyContent: \"space-between\",\n                  alignItems: \"center\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(Box, {\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"subtitle1\",\n                    fontWeight: \"bold\",\n                    children: [\"Note \", index + 1, \": \", note.title]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 868,\n                    columnNumber: 13\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    color: \"text.secondary\",\n                    children: expandedNote === note._id ? note.content || \"No content available.\" : (note.content || \"\").slice(0, 15) + \"...\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 871,\n                    columnNumber: 13\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 867,\n                  columnNumber: 11\n                }, this), /*#__PURE__*/_jsxDEV(Box, {\n                  children: /*#__PURE__*/_jsxDEV(IconButton, {\n                    children: expandedNote === note._id ? /*#__PURE__*/_jsxDEV(ExpandLess, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 879,\n                      columnNumber: 44\n                    }, this) : /*#__PURE__*/_jsxDEV(ExpandMore, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 879,\n                      columnNumber: 61\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 878,\n                    columnNumber: 13\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 877,\n                  columnNumber: 11\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 858,\n                columnNumber: 9\n              }, this), expandedNote === note._id && /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  mt: 1\n                },\n                children: editingNote && editingNote._id === note._id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(TextField, {\n                    name: \"title\",\n                    label: \"Title\",\n                    value: editingNote.title,\n                    sx: {\n                      mb: 2\n                    },\n                    onChange: handleInputChange,\n                    fullWidth: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 888,\n                    columnNumber: 17\n                  }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                    name: \"content\",\n                    label: \"Content\",\n                    value: editingNote.content,\n                    onChange: handleInputChange,\n                    multiline: true,\n                    rows: 4,\n                    fullWidth: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 896,\n                    columnNumber: 17\n                  }, this), /*#__PURE__*/_jsxDEV(Box, {\n                    sx: {\n                      display: \"flex\",\n                      justifyContent: \"space-between\",\n                      mt: 1\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(Button, {\n                      startIcon: /*#__PURE__*/_jsxDEV(Save, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 913,\n                        columnNumber: 32\n                      }, this),\n                      onClick: handleEditSave,\n                      variant: \"contained\",\n                      color: \"primary\",\n                      children: \"Save\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 912,\n                      columnNumber: 19\n                    }, this), /*#__PURE__*/_jsxDEV(Button, {\n                      startIcon: /*#__PURE__*/_jsxDEV(Cancel, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 921,\n                        columnNumber: 32\n                      }, this),\n                      onClick: handleEditCancel,\n                      variant: \"outlined\",\n                      color: \"secondary\",\n                      children: \"Cancel\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 920,\n                      columnNumber: 19\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 905,\n                    columnNumber: 17\n                  }, this)]\n                }, void 0, true) : /*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    display: \"flex\",\n                    gap: 1,\n                    mt: 1\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                    \"aria-label\": \"edit\",\n                    onClick: e => {\n                      e.stopPropagation();\n                      handleEditStart(note);\n                    },\n                    children: /*#__PURE__*/_jsxDEV(Edit, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 939,\n                      columnNumber: 19\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 932,\n                    columnNumber: 17\n                  }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                    \"aria-label\": \"delete\",\n                    onClick: e => {\n                      e.stopPropagation();\n                      handleDelete(note._id);\n                    },\n                    children: /*#__PURE__*/_jsxDEV(Delete, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 948,\n                      columnNumber: 19\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 941,\n                    columnNumber: 17\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 931,\n                  columnNumber: 15\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 885,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 850,\n              columnNumber: 7\n            }, this)\n          }, note._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 849,\n            columnNumber: 5\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 847,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 836,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 725,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 700,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"adgOWXaEV//liTTN9XoeePT+SZQ=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","Button","Box","Typography","Grid","Card","CardContent","IconButton","TextField","Delete","Edit","Save","Cancel","ExpandMore","ExpandLess","Add","jwtDecode","api","jsxDEV","_jsxDEV","Fragment","_Fragment","Dashboard","_s","notes","setNotes","expandedNote","setExpandedNote","editingNote","setEditingNote","newNote","setNewNote","title","content","showCreateForm","setShowCreateForm","user","setUser","fetchNotes","response","get","data","error","console","handleDelete","id","delete","filter","note","_id","handleEditStart","handleEditCancel","handleEditSave","put","prevNotes","map","toggleExpand","prev","handleInputChange","e","target","name","value","handleCreateNote","post","createdNote","handleSignOut","localStorage","removeItem","window","location","href","token","getItem","decodedToken","email","sx","position","width","height","overflow","children","top","left","backgroundImage","backgroundSize","backgroundPosition","opacity","zIndex","fileName","_jsxFileName","lineNumber","columnNumber","p","display","flexDirection","alignItems","backgroundColor","justifyContent","mb","src","alt","style","marginRight","variant","fontWeight","color","onClick","maxWidth","textAlign","boxShadow","borderRadius","startIcon","py","label","onChange","fullWidth","multiline","rows","flexGrow","overflowY","gutterBottom","container","spacing","index","item","xs","cursor","slice","mt","gap","stopPropagation","_c","$RefreshReg$"],"sources":["D:/Study/Code/Self-Projects/NoteApp/note-taking-frontend/src/components/Notes/NotesList.tsx"],"sourcesContent":["// import React, { useEffect, useState } from \"react\";\r\n// import { Button, Box, Typography, Grid } from \"@mui/material\";\r\n// import api from \"../../services/api\";\r\n// import NoteItem from \"./NoteItem\";\r\n\r\n// const NotesList: React.FC = () => {\r\n//   interface Note {\r\n//     _id: string;\r\n//     // add other properties of Note here\r\n//   }\r\n\r\n//   const [notes, setNotes] = useState<Note[]>([]);\r\n\r\n//   const fetchNotes = async () => {\r\n//     try {\r\n//       const response = await api.get(\"/notes\");\r\n//       setNotes(response.data);\r\n//     } catch (error) {\r\n//       console.error(\"Error fetching notes:\", error);\r\n//     }\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     fetchNotes();\r\n//   }, []);\r\n\r\n//   const handleDelete = (id: string) => {\r\n//     setNotes(notes.filter(note => note._id !== id));\r\n//   };\r\n\r\n//   return (\r\n//     <Box p={2}>\r\n//       <Typography variant=\"h4\" gutterBottom>Your Notes</Typography>\r\n//       <Button variant=\"contained\" color=\"primary\" href=\"/create-note\">Create Note</Button>\r\n//       <Grid container spacing={2} mt={2}>\r\n//         {notes.map((note: any) => (\r\n//           <Grid item xs={12} sm={6} md={4} key={note._id}>\r\n//             <NoteItem note={note} onDelete={handleDelete} />\r\n//           </Grid>\r\n//         ))}\r\n//       </Grid>\r\n//     </Box>\r\n//   );\r\n// };\r\n\r\n// export default NotesList;\r\n\r\n\r\n\r\n\r\n// import React, { useEffect, useState } from \"react\";\r\n// import { Button, Box, Typography, Grid, Card, CardContent, IconButton } from \"@mui/material\";\r\n// import { Delete } from \"@mui/icons-material\";\r\n// import api from \"../../services/api\";\r\n\r\n// const Dashboard: React.FC = () => {\r\n//   interface Note {\r\n//     _id: string;\r\n//     title: string;\r\n//     content: string;\r\n//   }\r\n\r\n//   const [notes, setNotes] = useState<Note[]>([]);\r\n\r\n//   const fetchNotes = async () => {\r\n//     try {\r\n//       const response = await api.get(\"/notes\");\r\n//       setNotes(response.data);\r\n//     } catch (error) {\r\n//       console.error(\"Error fetching notes:\", error);\r\n//     }\r\n//   };\r\n\r\n//   const handleDelete = async (id: string) => {\r\n//     try {\r\n//       await api.delete(`/notes/${id}`);\r\n//       setNotes(notes.filter((note) => note._id !== id));\r\n//     } catch (error) {\r\n//       console.error(\"Error deleting note:\", error);\r\n//     }\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     fetchNotes();\r\n//   }, []);\r\n\r\n//   const truncateContent = (content: string, maxLength: number = 15) =>\r\n//     content.length > maxLength ? `${content.slice(0, maxLength)}..` : content;\r\n\r\n//   return (\r\n//     <Box\r\n//       sx={{\r\n//         p: 2,\r\n//         display: \"flex\",\r\n//         flexDirection: \"column\",\r\n//         alignItems: \"center\",\r\n//         height: \"100vh\",\r\n//         backgroundColor: \"#f9f9f9\",\r\n//       }}\r\n//     >\r\n//       {/* Top Bar */}\r\n//       <Box\r\n//         sx={{\r\n//           width: \"100%\",\r\n//           display: \"flex\",\r\n//           justifyContent: \"space-between\",\r\n//           alignItems: \"center\",\r\n//           mb: 2,\r\n//         }}\r\n//       >\r\n//         <Typography variant=\"h6\" sx={{ fontWeight: \"bold\" }}>\r\n//           Dashboard\r\n//         </Typography>\r\n//         <Button variant=\"text\" color=\"primary\" href=\"/logout\">\r\n//           Sign Out\r\n//         </Button>\r\n//       </Box>\r\n\r\n//       {/* Welcome Card */}\r\n//       <Card\r\n//         sx={{\r\n//           width: \"100%\",\r\n//           maxWidth: 500,\r\n//           mb: 3,\r\n//           p: 2,\r\n//           textAlign: \"center\",\r\n//           boxShadow: 2,\r\n//           borderRadius: \"10px\",\r\n//         }}\r\n//       >\r\n//         <CardContent>\r\n//           <Typography variant=\"h6\" fontWeight=\"bold\">\r\n//             Welcome, Jonas Kahnwald!\r\n//           </Typography>\r\n//           <Typography variant=\"body2\" color=\"text.secondary\">\r\n//             Email: xxxxxx@xxxx.com\r\n//           </Typography>\r\n//         </CardContent>\r\n//       </Card>\r\n\r\n//       {/* Create Note Button */}\r\n//       <Button\r\n//         variant=\"contained\"\r\n//         href=\"/create-note\"\r\n//         sx={{\r\n//           width: \"100%\",\r\n//           maxWidth: 300,\r\n//           mb: 3,\r\n//           py: 1.5,\r\n//           fontWeight: \"bold\",\r\n//           backgroundColor: \"#367AFF\",\r\n//           borderRadius: \"10px\",\r\n//         }}\r\n//       >\r\n//         <Typography\r\n//           variant=\"button\"\r\n//           sx={{\r\n//             color: \"#FFF\",\r\n//             fontFamily: \"Inter\",\r\n//             fontSize: \"16px\",\r\n//             fontStyle: \"normal\",\r\n//             fontWeight: 600,\r\n//             lineHeight: \"120%\",\r\n//             letterSpacing: \"-0.16px\",\r\n//           }}\r\n//         >\r\n//           Create Note\r\n//         </Typography>\r\n//       </Button>\r\n\r\n//       {/* Notes List */}\r\n//       <Box\r\n//         sx={{\r\n//           width: \"100%\",\r\n//           maxWidth: 500,\r\n//           flexGrow: 1,\r\n//           overflowY: \"auto\",\r\n//         }}\r\n//       >\r\n//         <Typography variant=\"h6\" gutterBottom>\r\n//           Notes\r\n//         </Typography>\r\n//         <Grid container spacing={2}>\r\n//           {notes.map((note, index) => (\r\n//             <Grid item xs={12} key={note._id}>\r\n//               <Card\r\n//                 sx={{\r\n//                   display: \"flex\",\r\n//                   justifyContent: \"space-between\",\r\n//                   alignItems: \"center\",\r\n//                   boxShadow: 1,\r\n//                   borderRadius: \"8px\",\r\n//                   p: 1.5,\r\n//                   backgroundColor: \"#fff\",\r\n//                 }}\r\n//               >\r\n//                 <Box>\r\n//                   <Typography variant=\"subtitle1\" fontWeight=\"bold\">\r\n//                     Note {index + 1}: {note.title}\r\n//                   </Typography>\r\n//                   <Typography variant=\"body2\" color=\"text.secondary\">\r\n//                     {truncateContent(note.content)}\r\n//                   </Typography>\r\n//                 </Box>\r\n//                 <IconButton\r\n//                   aria-label=\"delete\"\r\n//                   onClick={() => handleDelete(note._id)}\r\n//                   sx={{\r\n//                     border: \"1px solid #ccc\",\r\n//                     borderRadius: \"50%\",\r\n//                     backgroundColor: \"#fff\",\r\n//                     color: \"#000\",\r\n//                     \"&:hover\": {\r\n//                       backgroundColor: \"#f5f5f5\",\r\n//                     },\r\n//                   }}\r\n//                 >\r\n//                   <Delete />\r\n//                 </IconButton>\r\n//               </Card>\r\n//             </Grid>\r\n//           ))}\r\n//         </Grid>\r\n//       </Box>\r\n//     </Box>\r\n//   );\r\n// };\r\n\r\n// export default Dashboard;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useEffect, useState } from \"react\";\r\n// import {\r\n//   Button,\r\n//   Box,\r\n//   Typography,\r\n//   Grid,\r\n//   Card,\r\n//   CardContent,\r\n//   IconButton,\r\n//   TextField,\r\n// } from \"@mui/material\";\r\n// import { Delete, Edit, Save, Cancel, ExpandMore, ExpandLess } from \"@mui/icons-material\";\r\n// import api from \"../../services/api\";\r\n\r\n// const Dashboard: React.FC = () => {\r\n//   interface Note {\r\n//     _id: string;\r\n//     title: string;\r\n//     content: string;\r\n//   }\r\n\r\n//   const [notes, setNotes] = useState<Note[]>([]);\r\n//   const [expandedNote, setExpandedNote] = useState<string | null>(null);\r\n//   const [editingNote, setEditingNote] = useState<Note | null>(null);\r\n\r\n//   const fetchNotes = async () => {\r\n//     try {\r\n//       const response = await api.get(\"/notes\");\r\n//       setNotes(response.data);\r\n//     } catch (error) {\r\n//       console.error(\"Error fetching notes:\", error);\r\n//     }\r\n//   };\r\n\r\n//   const handleDelete = async (id: string) => {\r\n//     try {\r\n//       await api.delete(`/notes/${id}`);\r\n//       setNotes(notes.filter((note) => note._id !== id));\r\n//     } catch (error) {\r\n//       console.error(\"Error deleting note:\", error);\r\n//     }\r\n//   };\r\n\r\n//   const handleEditStart = (note: Note) => {\r\n//     setEditingNote(note);\r\n//   };\r\n\r\n//   const handleEditCancel = () => {\r\n//     setEditingNote(null);\r\n//   };\r\n\r\n//   const handleEditSave = async () => {\r\n//     if (editingNote) {\r\n//       try {\r\n//         await api.put(`/notes/${editingNote._id}`, {\r\n//           title: editingNote.title,\r\n//           content: editingNote.content,\r\n//         });\r\n//         setNotes((prevNotes) =>\r\n//           prevNotes.map((note) =>\r\n//             note._id === editingNote._id ? editingNote : note\r\n//           )\r\n//         );\r\n//         setEditingNote(null);\r\n//       } catch (error) {\r\n//         console.error(\"Error updating note:\", error);\r\n//       }\r\n//     }\r\n//   };\r\n\r\n//   const toggleExpand = (id: string) => {\r\n//     setExpandedNote((prev) => (prev === id ? null : id));\r\n//     setEditingNote(null); // Exit editing mode when toggling expansion\r\n//   };\r\n\r\n//   const handleInputChange = (\r\n//     e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\r\n//   ) => {\r\n//     if (editingNote) {\r\n//       setEditingNote({ ...editingNote, [e.target.name]: e.target.value });\r\n//     }\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     fetchNotes();\r\n//   }, []);\r\n\r\n//   return (\r\n//     <Box\r\n//       sx={{\r\n//         position: \"relative\",\r\n//         width: \"100%\",\r\n//         height: \"100vh\",\r\n//         overflow: \"hidden\",\r\n//       }}\r\n//     >\r\n//       {/* Background Image */}\r\n//       <Box\r\n//         sx={{\r\n//           position: \"absolute\",\r\n//           top: 0,\r\n//           left: 0,\r\n//           width: \"100%\",\r\n//           height: \"100%\",\r\n//           backgroundImage: \"url(/assets/images/bg-img.png)\",\r\n//           backgroundSize: \"cover\",\r\n//           backgroundPosition: \"center\",\r\n//           opacity: 0.9,\r\n//           zIndex: -5,\r\n//         }}\r\n//       />\r\n\r\n//       {/* Main Content */}\r\n//       <Box\r\n//         sx={{\r\n//           p: 2,\r\n//           display: \"flex\",\r\n//           flexDirection: \"column\",\r\n//           alignItems: \"center\",\r\n//           height: \"100%\",\r\n//           backgroundColor: \"rgba(255, 255, 255, 0.5)\",\r\n//         }}\r\n//       >\r\n//         {/* Top Bar */}\r\n//         <Box\r\n//           sx={{\r\n//             width: \"100%\",\r\n//             display: \"flex\",\r\n//             justifyContent: \"space-between\",\r\n//             alignItems: \"center\",\r\n//             mb: 2,\r\n//           }}\r\n//         >\r\n//           <Typography variant=\"h6\" sx={{ fontWeight: \"bold\" }}>\r\n//             Dashboard\r\n//           </Typography>\r\n//           <Button variant=\"text\" color=\"primary\" href=\"/logout\">\r\n//             Sign Out\r\n//           </Button>\r\n//         </Box>\r\n\r\n//         {/* Welcome Card */}\r\n//         <Card\r\n//           sx={{\r\n//             width: \"100%\",\r\n//             maxWidth: 500,\r\n//             mb: 3,\r\n//             p: 2,\r\n//             textAlign: \"center\",\r\n//             boxShadow: 2,\r\n//             borderRadius: \"10px\",\r\n//           }}\r\n//         >\r\n//           <CardContent>\r\n//             <Typography variant=\"h6\" fontWeight=\"bold\">\r\n//               Welcome, Jonas Kahnwald!\r\n//             </Typography>\r\n//             <Typography variant=\"body2\" color=\"text.secondary\">\r\n//               Email: xxxxxx@xxxx.com\r\n//             </Typography>\r\n//           </CardContent>\r\n//         </Card>\r\n\r\n//         {/* Create Note Button */}\r\n//         <Button\r\n//           variant=\"contained\"\r\n//           href=\"/create-note\"\r\n//           sx={{\r\n//             width: \"100%\",\r\n//             maxWidth: 300,\r\n//             mb: 3,\r\n//             py: 1.5,\r\n//             fontWeight: \"bold\",\r\n//             backgroundColor: \"#367AFF\",\r\n//             borderRadius: \"10px\",\r\n//           }}\r\n//         >\r\n//           Create Note\r\n//         </Button>\r\n\r\n//         {/* Notes List */}\r\n//         <Box\r\n//           sx={{\r\n//             width: \"100%\",\r\n//             maxWidth: 500,\r\n//             flexGrow: 1,\r\n//             overflowY: \"auto\",\r\n//           }}\r\n//         >\r\n//           <Typography variant=\"h6\" gutterBottom>\r\n//             Notes\r\n//           </Typography>\r\n//           <Grid container spacing={2}>\r\n//             {notes.map((note, index) => (\r\n//               <Grid item xs={12} key={note._id}>\r\n//                 <Card\r\n//                   sx={{\r\n//                     boxShadow: 1,\r\n//                     borderRadius: \"8px\",\r\n//                     p: 1.5,\r\n//                     backgroundColor: \"#fff\",\r\n//                   }}\r\n//                 >\r\n//                   <Box\r\n//                     onClick={() => toggleExpand(note._id)}\r\n//                     sx={{\r\n//                       cursor: \"pointer\",\r\n//                       display: \"flex\",\r\n//                       justifyContent: \"space-between\",\r\n//                       alignItems: \"center\",\r\n//                     }}\r\n//                   >\r\n//                     <Box>\r\n//                       <Typography variant=\"subtitle1\" fontWeight=\"bold\">\r\n//                         Note {index + 1}: {note.title}\r\n//                       </Typography>\r\n//                       <Typography variant=\"body2\" color=\"text.secondary\">\r\n//                         {expandedNote === note._id\r\n//                           ? note.content\r\n//                           : note.content.slice(0, 15) + \"...\"}\r\n//                       </Typography>\r\n//                     </Box>\r\n//                     <Box>\r\n//                       <IconButton>\r\n//                         {expandedNote === note._id ? (\r\n//                           <ExpandLess />\r\n//                         ) : (\r\n//                           <ExpandMore />\r\n//                         )}\r\n//                       </IconButton>\r\n//                     </Box>\r\n//                   </Box>\r\n\r\n//                   {expandedNote === note._id && (\r\n//                     <Box sx={{ mt: 1 }}>\r\n//                       {editingNote && editingNote._id === note._id ? (\r\n//                         <>\r\n//                           <TextField\r\n//                             name=\"title\"\r\n//                             label=\"Title\"\r\n//                             value={editingNote.title}\r\n//                             sx={{ mb: 2 }} // Adds spacing below the Title field\r\n//                             onChange={handleInputChange}\r\n//                             fullWidth\r\n//                           />\r\n//                           <TextField\r\n//                             name=\"content\"\r\n//                             label=\"Content\"\r\n//                             value={editingNote.content}\r\n//                             onChange={handleInputChange}\r\n//                             multiline\r\n//                             rows={4}\r\n//                             fullWidth\r\n//                           />\r\n//                           <Box\r\n//                             sx={{\r\n//                               display: \"flex\",\r\n//                               justifyContent: \"space-between\",\r\n//                               mt: 1,\r\n//                             }}\r\n//                           >\r\n//                             <Button\r\n//                               startIcon={<Save />}\r\n//                               onClick={handleEditSave}\r\n//                               variant=\"contained\"\r\n//                               color=\"primary\"\r\n//                             >\r\n//                               Save\r\n//                             </Button>\r\n//                             <Button\r\n//                               startIcon={<Cancel />}\r\n//                               onClick={handleEditCancel}\r\n//                               variant=\"outlined\"\r\n//                               color=\"secondary\"\r\n//                             >\r\n//                               Cancel\r\n//                             </Button>\r\n//                           </Box>\r\n//                         </>\r\n//                       ) : (\r\n//                         <Box sx={{ display: \"flex\", gap: 1, mt: 1 }}>\r\n//                           <IconButton\r\n//                             aria-label=\"edit\"\r\n//                             onClick={(e) => {\r\n//                               e.stopPropagation();\r\n//                               handleEditStart(note);\r\n//                             }}\r\n//                           >\r\n//                             <Edit />\r\n//                           </IconButton>\r\n//                           <IconButton\r\n//                             aria-label=\"delete\"\r\n//                             onClick={(e) => {\r\n//                               e.stopPropagation();\r\n//                               handleDelete(note._id);\r\n//                             }}\r\n//                           >\r\n//                             <Delete />\r\n//                           </IconButton>\r\n//                         </Box>\r\n//                       )}\r\n//                     </Box>\r\n//                   )}\r\n//                 </Card>\r\n//               </Grid>\r\n//             ))}\r\n//           </Grid>\r\n//         </Box>\r\n//       </Box>\r\n//     </Box>\r\n//   );\r\n// };\r\n\r\n// export default Dashboard;\r\n\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Box,\r\n  Typography,\r\n  Grid,\r\n  Card,\r\n  CardContent,\r\n  IconButton,\r\n  TextField,\r\n} from \"@mui/material\";\r\nimport {\r\n  Delete,\r\n  Edit,\r\n  Save,\r\n  Cancel,\r\n  ExpandMore,\r\n  ExpandLess,\r\n  Add,\r\n} from \"@mui/icons-material\";\r\nimport {jwtDecode} from \"jwt-decode\";\r\nimport api from \"../../services/api\";\r\n\r\nconst Dashboard: React.FC = () => {\r\n  interface Note {\r\n    _id: string;\r\n    title: string;\r\n    content: string;\r\n  }\r\n\r\n  interface User {\r\n    name: string;\r\n    email: string;\r\n  }\r\n\r\n  const [notes, setNotes] = useState<Note[]>([]);\r\n  const [expandedNote, setExpandedNote] = useState<string | null>(null);\r\n  const [editingNote, setEditingNote] = useState<Note | null>(null);\r\n  const [newNote, setNewNote] = useState<Partial<Note>>({ title: \"\", content: \"\" });\r\n  const [showCreateForm, setShowCreateForm] = useState(false);\r\n  const [user, setUser] = useState<User | null>(null);\r\n\r\n  const fetchNotes = async () => {\r\n    try {\r\n      const response = await api.get(\"/notes\");\r\n      setNotes(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching notes:\", error);\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (id: string) => {\r\n    try {\r\n      await api.delete(`/notes/${id}`);\r\n      setNotes(notes.filter((note) => note._id !== id));\r\n    } catch (error) {\r\n      console.error(\"Error deleting note:\", error);\r\n    }\r\n  };\r\n\r\n  const handleEditStart = (note: Note) => {\r\n    setEditingNote(note);\r\n  };\r\n\r\n  const handleEditCancel = () => {\r\n    setEditingNote(null);\r\n  };\r\n\r\n  const handleEditSave = async () => {\r\n    if (editingNote) {\r\n      try {\r\n        await api.put(`/notes/${editingNote._id}`, {\r\n          title: editingNote.title,\r\n          content: editingNote.content,\r\n        });\r\n        setNotes((prevNotes) =>\r\n          prevNotes.map((note) =>\r\n            note._id === editingNote._id ? editingNote : note\r\n          )\r\n        );\r\n        setEditingNote(null);\r\n      } catch (error) {\r\n        console.error(\"Error updating note:\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const toggleExpand = (id: string) => {\r\n    setExpandedNote((prev) => (prev === id ? null : id));\r\n    setEditingNote(null); // Exit editing mode when toggling expansion\r\n  };\r\n\r\n  const handleInputChange = (\r\n    e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\r\n  ) => {\r\n    if (editingNote) {\r\n      setEditingNote({ ...editingNote, [e.target.name]: e.target.value });\r\n    } else {\r\n      setNewNote({ ...newNote, [e.target.name]: e.target.value });\r\n    }\r\n  };\r\n\r\n  const handleCreateNote = async () => {\r\n    if (newNote.title && newNote.content) {\r\n      try {\r\n        const response = await api.post(\"/notes\", newNote);\r\n        const createdNote = response.data;\r\n  \r\n        // Ensure the new note has all necessary fields\r\n        setNotes((prevNotes) => [\r\n          { ...createdNote, content: newNote.content || \"\" },\r\n          ...prevNotes,\r\n        ]);\r\n        setNewNote({ title: \"\", content: \"\" });\r\n        setShowCreateForm(false);\r\n      } catch (error) {\r\n        console.error(\"Error creating note:\", error);\r\n      }\r\n    }\r\n  };\r\n  \r\n\r\n  const handleSignOut = () => {\r\n    localStorage.removeItem(\"token\");\r\n    window.location.href = \"/login\";\r\n  };\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (token) {\r\n      try {\r\n        const decodedToken: any = jwtDecode(token);\r\n        setUser({\r\n          name: decodedToken.name,\r\n          email: decodedToken.email,\r\n        });\r\n        fetchNotes();\r\n      } catch (error) {\r\n        console.error(\"Invalid token:\", error);\r\n      }\r\n    } else {\r\n      window.location.href = \"/login\";\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        position: \"relative\",\r\n        width: \"100%\",\r\n        height: \"100vh\",\r\n        overflow: \"hidden\",\r\n      }}\r\n    >\r\n      {/* Background Image */}\r\n      <Box\r\n        sx={{\r\n          position: \"absolute\",\r\n          top: 0,\r\n          left: 0,\r\n          width: \"100%\",\r\n          height: \"100%\",\r\n          backgroundImage: \"url(/assets/images/bg-img.png)\",\r\n          backgroundSize: \"cover\",\r\n          backgroundPosition: \"center\",\r\n          opacity: 0.9,\r\n          zIndex: -5,\r\n        }}\r\n      />\r\n\r\n      {/* Main Content */}\r\n      <Box\r\n        sx={{\r\n          p: 2,\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          alignItems: \"center\",\r\n          height: \"100%\",\r\n          backgroundColor: \"rgba(255, 255, 255, 0.5)\",\r\n        }}\r\n      >\r\n        {/* Top Bar */}\r\n<Box\r\n  sx={{\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    mb: 2,\r\n  }}\r\n>\r\n  <Box\r\n    sx={{\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n    }}\r\n  >\r\n    <img\r\n      src=\"/assets/images/hd-icon.png\"\r\n      alt=\"HD Icon\"\r\n      style={{ width: 32, height: 32, marginRight: 8 }}\r\n    />\r\n    <Typography variant=\"h6\" sx={{ fontWeight: \"bold\" }}>\r\n      Dashboard\r\n    </Typography>\r\n  </Box>\r\n  <Button variant=\"text\" color=\"primary\" onClick={handleSignOut}>\r\n    Sign Out\r\n  </Button>\r\n</Box>\r\n\r\n        {/* Welcome Card */}\r\n        <Card\r\n          sx={{\r\n            width: \"90%\",\r\n            maxWidth: 500,\r\n            mb: 3,\r\n            p: 2,\r\n            textAlign: \"center\",\r\n            boxShadow: 2,\r\n            borderRadius: \"10px\",\r\n          }}\r\n        >\r\n          <CardContent>\r\n            <Typography variant=\"h6\" fontWeight=\"bold\">\r\n              Welcome, {user?.name || \"User\"}!\r\n            </Typography>\r\n            <Typography variant=\"body2\" color=\"text.secondary\">\r\n              Email: {user?.email || \"N/A\"}\r\n            </Typography>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        {/* Create Note Section */}\r\n        <Button\r\n          startIcon={<Add />}\r\n          variant=\"contained\"\r\n          sx={{\r\n            width: \"100%\",\r\n            maxWidth: 300,\r\n            mb: 3,\r\n            py: 1.5,\r\n            fontWeight: \"bold\",\r\n            backgroundColor: \"#367AFF\",\r\n            borderRadius: \"10px\",\r\n          }}\r\n          onClick={() => setShowCreateForm(!showCreateForm)}\r\n        >\r\n          {showCreateForm ? \"Cancel\" : \"Create Note\"}\r\n        </Button>\r\n        {showCreateForm && (\r\n          <Box sx={{ width: \"100%\", maxWidth: 500, mb: 3 }}>\r\n            <TextField\r\n              name=\"title\"\r\n              label=\"Title\"\r\n              value={newNote.title}\r\n              onChange={handleInputChange}\r\n              fullWidth\r\n              sx={{ mb: 2 }}\r\n            />\r\n            <TextField\r\n              name=\"content\"\r\n              label=\"Content\"\r\n              value={newNote.content}\r\n              onChange={handleInputChange}\r\n              multiline\r\n              rows={4}\r\n              fullWidth\r\n              sx={{ mb: 2 }}\r\n            />\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={handleCreateNote}\r\n              fullWidth\r\n            >\r\n              Save Note\r\n            </Button>\r\n          </Box>\r\n        )}\r\n\r\n        {/* Notes List */}\r\n        <Box\r\n          sx={{\r\n            width: \"100%\",\r\n            maxWidth: 500,\r\n            flexGrow: 1,\r\n            overflowY: \"auto\",\r\n          }}\r\n        >\r\n          <Typography variant=\"h6\" gutterBottom>\r\n            Notes\r\n          </Typography>\r\n          <Grid container spacing={2}>\r\n  {notes.map((note, index) => (\r\n    <Grid item xs={12} key={note._id}>\r\n      <Card\r\n        sx={{\r\n          boxShadow: 1,\r\n          borderRadius: \"8px\",\r\n          p: 1.5,\r\n          backgroundColor: \"#fff\",\r\n        }}\r\n      >\r\n        <Box\r\n          onClick={() => toggleExpand(note._id)}\r\n          sx={{\r\n            cursor: \"pointer\",\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Box>\r\n            <Typography variant=\"subtitle1\" fontWeight=\"bold\">\r\n              Note {index + 1}: {note.title}\r\n            </Typography>\r\n            <Typography variant=\"body2\" color=\"text.secondary\">\r\n              {expandedNote === note._id\r\n                ? note.content || \"No content available.\"\r\n                : (note.content || \"\").slice(0, 15) + \"...\"}\r\n            </Typography>\r\n          </Box>\r\n          <Box>\r\n            <IconButton>\r\n              {expandedNote === note._id ? <ExpandLess /> : <ExpandMore />}\r\n            </IconButton>\r\n          </Box>\r\n        </Box>\r\n\r\n        {expandedNote === note._id && (\r\n          <Box sx={{ mt: 1 }}>\r\n            {editingNote && editingNote._id === note._id ? (\r\n              <>\r\n                <TextField\r\n                  name=\"title\"\r\n                  label=\"Title\"\r\n                  value={editingNote.title}\r\n                  sx={{ mb: 2 }}\r\n                  onChange={handleInputChange}\r\n                  fullWidth\r\n                />\r\n                <TextField\r\n                  name=\"content\"\r\n                  label=\"Content\"\r\n                  value={editingNote.content}\r\n                  onChange={handleInputChange}\r\n                  multiline\r\n                  rows={4}\r\n                  fullWidth\r\n                />\r\n                <Box\r\n                  sx={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"space-between\",\r\n                    mt: 1,\r\n                  }}\r\n                >\r\n                  <Button\r\n                    startIcon={<Save />}\r\n                    onClick={handleEditSave}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                  >\r\n                    Save\r\n                  </Button>\r\n                  <Button\r\n                    startIcon={<Cancel />}\r\n                    onClick={handleEditCancel}\r\n                    variant=\"outlined\"\r\n                    color=\"secondary\"\r\n                  >\r\n                    Cancel\r\n                  </Button>\r\n                </Box>\r\n              </>\r\n            ) : (\r\n              <Box sx={{ display: \"flex\", gap: 1, mt: 1 }}>\r\n                <IconButton\r\n                  aria-label=\"edit\"\r\n                  onClick={(e) => {\r\n                    e.stopPropagation();\r\n                    handleEditStart(note);\r\n                  }}\r\n                >\r\n                  <Edit />\r\n                </IconButton>\r\n                <IconButton\r\n                  aria-label=\"delete\"\r\n                  onClick={(e) => {\r\n                    e.stopPropagation();\r\n                    handleDelete(note._id);\r\n                  }}\r\n                >\r\n                  <Delete />\r\n                </IconButton>\r\n              </Box>\r\n            )}\r\n          </Box>\r\n        )}\r\n      </Card>\r\n    </Grid>\r\n  ))}\r\n</Grid>\r\n\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAKA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}