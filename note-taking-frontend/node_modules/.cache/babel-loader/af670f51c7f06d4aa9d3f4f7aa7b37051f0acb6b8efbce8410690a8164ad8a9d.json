{"ast":null,"code":"var _jsxFileName = \"D:\\\\Study\\\\Code\\\\Self-Projects\\\\NoteApp\\\\note-taking-frontend\\\\src\\\\components\\\\Notes\\\\NotesList.tsx\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from \"react\";\n// import { Button, Box, Typography, Grid } from \"@mui/material\";\n// import api from \"../../services/api\";\n// import NoteItem from \"./NoteItem\";\n\n// const NotesList: React.FC = () => {\n//   interface Note {\n//     _id: string;\n//     // add other properties of Note here\n//   }\n\n//   const [notes, setNotes] = useState<Note[]>([]);\n\n//   const fetchNotes = async () => {\n//     try {\n//       const response = await api.get(\"/notes\");\n//       setNotes(response.data);\n//     } catch (error) {\n//       console.error(\"Error fetching notes:\", error);\n//     }\n//   };\n\n//   useEffect(() => {\n//     fetchNotes();\n//   }, []);\n\n//   const handleDelete = (id: string) => {\n//     setNotes(notes.filter(note => note._id !== id));\n//   };\n\n//   return (\n//     <Box p={2}>\n//       <Typography variant=\"h4\" gutterBottom>Your Notes</Typography>\n//       <Button variant=\"contained\" color=\"primary\" href=\"/create-note\">Create Note</Button>\n//       <Grid container spacing={2} mt={2}>\n//         {notes.map((note: any) => (\n//           <Grid item xs={12} sm={6} md={4} key={note._id}>\n//             <NoteItem note={note} onDelete={handleDelete} />\n//           </Grid>\n//         ))}\n//       </Grid>\n//     </Box>\n//   );\n// };\n\n// export default NotesList;\n\n// import React, { useEffect, useState } from \"react\";\n// import { Button, Box, Typography, Grid, Card, CardContent, IconButton } from \"@mui/material\";\n// import { Delete } from \"@mui/icons-material\";\n// import api from \"../../services/api\";\n\n// const Dashboard: React.FC = () => {\n//   interface Note {\n//     _id: string;\n//     title: string;\n//     content: string;\n//   }\n\n//   const [notes, setNotes] = useState<Note[]>([]);\n\n//   const fetchNotes = async () => {\n//     try {\n//       const response = await api.get(\"/notes\");\n//       setNotes(response.data);\n//     } catch (error) {\n//       console.error(\"Error fetching notes:\", error);\n//     }\n//   };\n\n//   const handleDelete = async (id: string) => {\n//     try {\n//       await api.delete(`/notes/${id}`);\n//       setNotes(notes.filter((note) => note._id !== id));\n//     } catch (error) {\n//       console.error(\"Error deleting note:\", error);\n//     }\n//   };\n\n//   useEffect(() => {\n//     fetchNotes();\n//   }, []);\n\n//   const truncateContent = (content: string, maxLength: number = 15) =>\n//     content.length > maxLength ? `${content.slice(0, maxLength)}..` : content;\n\n//   return (\n//     <Box\n//       sx={{\n//         p: 2,\n//         display: \"flex\",\n//         flexDirection: \"column\",\n//         alignItems: \"center\",\n//         height: \"100vh\",\n//         backgroundColor: \"#f9f9f9\",\n//       }}\n//     >\n//       {/* Top Bar */}\n//       <Box\n//         sx={{\n//           width: \"100%\",\n//           display: \"flex\",\n//           justifyContent: \"space-between\",\n//           alignItems: \"center\",\n//           mb: 2,\n//         }}\n//       >\n//         <Typography variant=\"h6\" sx={{ fontWeight: \"bold\" }}>\n//           Dashboard\n//         </Typography>\n//         <Button variant=\"text\" color=\"primary\" href=\"/logout\">\n//           Sign Out\n//         </Button>\n//       </Box>\n\n//       {/* Welcome Card */}\n//       <Card\n//         sx={{\n//           width: \"100%\",\n//           maxWidth: 500,\n//           mb: 3,\n//           p: 2,\n//           textAlign: \"center\",\n//           boxShadow: 2,\n//           borderRadius: \"10px\",\n//         }}\n//       >\n//         <CardContent>\n//           <Typography variant=\"h6\" fontWeight=\"bold\">\n//             Welcome, Jonas Kahnwald!\n//           </Typography>\n//           <Typography variant=\"body2\" color=\"text.secondary\">\n//             Email: xxxxxx@xxxx.com\n//           </Typography>\n//         </CardContent>\n//       </Card>\n\n//       {/* Create Note Button */}\n//       <Button\n//         variant=\"contained\"\n//         href=\"/create-note\"\n//         sx={{\n//           width: \"100%\",\n//           maxWidth: 300,\n//           mb: 3,\n//           py: 1.5,\n//           fontWeight: \"bold\",\n//           backgroundColor: \"#367AFF\",\n//           borderRadius: \"10px\",\n//         }}\n//       >\n//         <Typography\n//           variant=\"button\"\n//           sx={{\n//             color: \"#FFF\",\n//             fontFamily: \"Inter\",\n//             fontSize: \"16px\",\n//             fontStyle: \"normal\",\n//             fontWeight: 600,\n//             lineHeight: \"120%\",\n//             letterSpacing: \"-0.16px\",\n//           }}\n//         >\n//           Create Note\n//         </Typography>\n//       </Button>\n\n//       {/* Notes List */}\n//       <Box\n//         sx={{\n//           width: \"100%\",\n//           maxWidth: 500,\n//           flexGrow: 1,\n//           overflowY: \"auto\",\n//         }}\n//       >\n//         <Typography variant=\"h6\" gutterBottom>\n//           Notes\n//         </Typography>\n//         <Grid container spacing={2}>\n//           {notes.map((note, index) => (\n//             <Grid item xs={12} key={note._id}>\n//               <Card\n//                 sx={{\n//                   display: \"flex\",\n//                   justifyContent: \"space-between\",\n//                   alignItems: \"center\",\n//                   boxShadow: 1,\n//                   borderRadius: \"8px\",\n//                   p: 1.5,\n//                   backgroundColor: \"#fff\",\n//                 }}\n//               >\n//                 <Box>\n//                   <Typography variant=\"subtitle1\" fontWeight=\"bold\">\n//                     Note {index + 1}: {note.title}\n//                   </Typography>\n//                   <Typography variant=\"body2\" color=\"text.secondary\">\n//                     {truncateContent(note.content)}\n//                   </Typography>\n//                 </Box>\n//                 <IconButton\n//                   aria-label=\"delete\"\n//                   onClick={() => handleDelete(note._id)}\n//                   sx={{\n//                     border: \"1px solid #ccc\",\n//                     borderRadius: \"50%\",\n//                     backgroundColor: \"#fff\",\n//                     color: \"#000\",\n//                     \"&:hover\": {\n//                       backgroundColor: \"#f5f5f5\",\n//                     },\n//                   }}\n//                 >\n//                   <Delete />\n//                 </IconButton>\n//               </Card>\n//             </Grid>\n//           ))}\n//         </Grid>\n//       </Box>\n//     </Box>\n//   );\n// };\n\n// export default Dashboard;\n\n// import React, { useEffect, useState } from \"react\";\n// import {\n//   Button,\n//   Box,\n//   Typography,\n//   Grid,\n//   Card,\n//   CardContent,\n//   IconButton,\n//   TextField,\n// } from \"@mui/material\";\n// import { Delete, Edit, Save, Cancel, ExpandMore, ExpandLess } from \"@mui/icons-material\";\n// import api from \"../../services/api\";\n\n// const Dashboard: React.FC = () => {\n//   interface Note {\n//     _id: string;\n//     title: string;\n//     content: string;\n//   }\n\n//   const [notes, setNotes] = useState<Note[]>([]);\n//   const [expandedNote, setExpandedNote] = useState<string | null>(null);\n//   const [editingNote, setEditingNote] = useState<Note | null>(null);\n\n//   const fetchNotes = async () => {\n//     try {\n//       const response = await api.get(\"/notes\");\n//       setNotes(response.data);\n//     } catch (error) {\n//       console.error(\"Error fetching notes:\", error);\n//     }\n//   };\n\n//   const handleDelete = async (id: string) => {\n//     try {\n//       await api.delete(`/notes/${id}`);\n//       setNotes(notes.filter((note) => note._id !== id));\n//     } catch (error) {\n//       console.error(\"Error deleting note:\", error);\n//     }\n//   };\n\n//   const handleEditStart = (note: Note) => {\n//     setEditingNote(note);\n//   };\n\n//   const handleEditCancel = () => {\n//     setEditingNote(null);\n//   };\n\n//   const handleEditSave = async () => {\n//     if (editingNote) {\n//       try {\n//         await api.put(`/notes/${editingNote._id}`, {\n//           title: editingNote.title,\n//           content: editingNote.content,\n//         });\n//         setNotes((prevNotes) =>\n//           prevNotes.map((note) =>\n//             note._id === editingNote._id ? editingNote : note\n//           )\n//         );\n//         setEditingNote(null);\n//       } catch (error) {\n//         console.error(\"Error updating note:\", error);\n//       }\n//     }\n//   };\n\n//   const toggleExpand = (id: string) => {\n//     setExpandedNote((prev) => (prev === id ? null : id));\n//     setEditingNote(null); // Exit editing mode when toggling expansion\n//   };\n\n//   const handleInputChange = (\n//     e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\n//   ) => {\n//     if (editingNote) {\n//       setEditingNote({ ...editingNote, [e.target.name]: e.target.value });\n//     }\n//   };\n\n//   useEffect(() => {\n//     fetchNotes();\n//   }, []);\n\n//   return (\n//     <Box\n//       sx={{\n//         position: \"relative\",\n//         width: \"100%\",\n//         height: \"100vh\",\n//         overflow: \"hidden\",\n//       }}\n//     >\n//       {/* Background Image */}\n//       <Box\n//         sx={{\n//           position: \"absolute\",\n//           top: 0,\n//           left: 0,\n//           width: \"100%\",\n//           height: \"100%\",\n//           backgroundImage: \"url(/assets/images/bg-img.png)\",\n//           backgroundSize: \"cover\",\n//           backgroundPosition: \"center\",\n//           opacity: 0.9,\n//           zIndex: -5,\n//         }}\n//       />\n\n//       {/* Main Content */}\n//       <Box\n//         sx={{\n//           p: 2,\n//           display: \"flex\",\n//           flexDirection: \"column\",\n//           alignItems: \"center\",\n//           height: \"100%\",\n//           backgroundColor: \"rgba(255, 255, 255, 0.5)\",\n//         }}\n//       >\n//         {/* Top Bar */}\n//         <Box\n//           sx={{\n//             width: \"100%\",\n//             display: \"flex\",\n//             justifyContent: \"space-between\",\n//             alignItems: \"center\",\n//             mb: 2,\n//           }}\n//         >\n//           <Typography variant=\"h6\" sx={{ fontWeight: \"bold\" }}>\n//             Dashboard\n//           </Typography>\n//           <Button variant=\"text\" color=\"primary\" href=\"/logout\">\n//             Sign Out\n//           </Button>\n//         </Box>\n\n//         {/* Welcome Card */}\n//         <Card\n//           sx={{\n//             width: \"100%\",\n//             maxWidth: 500,\n//             mb: 3,\n//             p: 2,\n//             textAlign: \"center\",\n//             boxShadow: 2,\n//             borderRadius: \"10px\",\n//           }}\n//         >\n//           <CardContent>\n//             <Typography variant=\"h6\" fontWeight=\"bold\">\n//               Welcome, Jonas Kahnwald!\n//             </Typography>\n//             <Typography variant=\"body2\" color=\"text.secondary\">\n//               Email: xxxxxx@xxxx.com\n//             </Typography>\n//           </CardContent>\n//         </Card>\n\n//         {/* Create Note Button */}\n//         <Button\n//           variant=\"contained\"\n//           href=\"/create-note\"\n//           sx={{\n//             width: \"100%\",\n//             maxWidth: 300,\n//             mb: 3,\n//             py: 1.5,\n//             fontWeight: \"bold\",\n//             backgroundColor: \"#367AFF\",\n//             borderRadius: \"10px\",\n//           }}\n//         >\n//           Create Note\n//         </Button>\n\n//         {/* Notes List */}\n//         <Box\n//           sx={{\n//             width: \"100%\",\n//             maxWidth: 500,\n//             flexGrow: 1,\n//             overflowY: \"auto\",\n//           }}\n//         >\n//           <Typography variant=\"h6\" gutterBottom>\n//             Notes\n//           </Typography>\n//           <Grid container spacing={2}>\n//             {notes.map((note, index) => (\n//               <Grid item xs={12} key={note._id}>\n//                 <Card\n//                   sx={{\n//                     boxShadow: 1,\n//                     borderRadius: \"8px\",\n//                     p: 1.5,\n//                     backgroundColor: \"#fff\",\n//                   }}\n//                 >\n//                   <Box\n//                     onClick={() => toggleExpand(note._id)}\n//                     sx={{\n//                       cursor: \"pointer\",\n//                       display: \"flex\",\n//                       justifyContent: \"space-between\",\n//                       alignItems: \"center\",\n//                     }}\n//                   >\n//                     <Box>\n//                       <Typography variant=\"subtitle1\" fontWeight=\"bold\">\n//                         Note {index + 1}: {note.title}\n//                       </Typography>\n//                       <Typography variant=\"body2\" color=\"text.secondary\">\n//                         {expandedNote === note._id\n//                           ? note.content\n//                           : note.content.slice(0, 15) + \"...\"}\n//                       </Typography>\n//                     </Box>\n//                     <Box>\n//                       <IconButton>\n//                         {expandedNote === note._id ? (\n//                           <ExpandLess />\n//                         ) : (\n//                           <ExpandMore />\n//                         )}\n//                       </IconButton>\n//                     </Box>\n//                   </Box>\n\n//                   {expandedNote === note._id && (\n//                     <Box sx={{ mt: 1 }}>\n//                       {editingNote && editingNote._id === note._id ? (\n//                         <>\n//                           <TextField\n//                             name=\"title\"\n//                             label=\"Title\"\n//                             value={editingNote.title}\n//                             sx={{ mb: 2 }} // Adds spacing below the Title field\n//                             onChange={handleInputChange}\n//                             fullWidth\n//                           />\n//                           <TextField\n//                             name=\"content\"\n//                             label=\"Content\"\n//                             value={editingNote.content}\n//                             onChange={handleInputChange}\n//                             multiline\n//                             rows={4}\n//                             fullWidth\n//                           />\n//                           <Box\n//                             sx={{\n//                               display: \"flex\",\n//                               justifyContent: \"space-between\",\n//                               mt: 1,\n//                             }}\n//                           >\n//                             <Button\n//                               startIcon={<Save />}\n//                               onClick={handleEditSave}\n//                               variant=\"contained\"\n//                               color=\"primary\"\n//                             >\n//                               Save\n//                             </Button>\n//                             <Button\n//                               startIcon={<Cancel />}\n//                               onClick={handleEditCancel}\n//                               variant=\"outlined\"\n//                               color=\"secondary\"\n//                             >\n//                               Cancel\n//                             </Button>\n//                           </Box>\n//                         </>\n//                       ) : (\n//                         <Box sx={{ display: \"flex\", gap: 1, mt: 1 }}>\n//                           <IconButton\n//                             aria-label=\"edit\"\n//                             onClick={(e) => {\n//                               e.stopPropagation();\n//                               handleEditStart(note);\n//                             }}\n//                           >\n//                             <Edit />\n//                           </IconButton>\n//                           <IconButton\n//                             aria-label=\"delete\"\n//                             onClick={(e) => {\n//                               e.stopPropagation();\n//                               handleDelete(note._id);\n//                             }}\n//                           >\n//                             <Delete />\n//                           </IconButton>\n//                         </Box>\n//                       )}\n//                     </Box>\n//                   )}\n//                 </Card>\n//               </Grid>\n//             ))}\n//           </Grid>\n//         </Box>\n//       </Box>\n//     </Box>\n//   );\n// };\n\n// export default Dashboard;\n\nimport React, { useEffect, useState } from \"react\";\nimport { Button, Box, Typography, Grid, Card, CardContent, IconButton, TextField } from \"@mui/material\";\nimport { Delete, Edit, Save, Cancel, ExpandMore, ExpandLess } from \"@mui/icons-material\";\nimport api from \"../../services/api\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [notes, setNotes] = useState([]);\n  const [expandedNote, setExpandedNote] = useState(null);\n  const [editingNote, setEditingNote] = useState(null);\n  const [newNote, setNewNote] = useState({\n    _id: \"\",\n    title: \"\",\n    content: \"\"\n  });\n  const [isAddingNote, setIsAddingNote] = useState(false);\n  const fetchNotes = async () => {\n    try {\n      const response = await api.get(\"/notes\");\n      setNotes(response.data);\n    } catch (error) {\n      console.error(\"Error fetching notes:\", error);\n    }\n  };\n  const handleDelete = async id => {\n    try {\n      await api.delete(`/notes/${id}`);\n      setNotes(notes.filter(note => note._id !== id));\n    } catch (error) {\n      console.error(\"Error deleting note:\", error);\n    }\n  };\n  const handleEditStart = note => {\n    setEditingNote(note);\n  };\n  const handleEditCancel = () => {\n    setEditingNote(null);\n  };\n  const handleEditSave = async () => {\n    if (editingNote) {\n      try {\n        await api.put(`/notes/${editingNote._id}`, {\n          title: editingNote.title,\n          content: editingNote.content\n        });\n        setNotes(prevNotes => prevNotes.map(note => note._id === editingNote._id ? editingNote : note));\n        setEditingNote(null);\n      } catch (error) {\n        console.error(\"Error updating note:\", error);\n      }\n    }\n  };\n  const toggleExpand = id => {\n    setExpandedNote(prev => prev === id ? null : id);\n    setEditingNote(null); // Exit editing mode when toggling expansion\n  };\n  const handleInputChange = e => {\n    if (editingNote) {\n      setEditingNote({\n        ...editingNote,\n        [e.target.name]: e.target.value\n      });\n    }\n  };\n  const handleNewNoteChange = e => {\n    if (newNote) {\n      setNewNote({\n        ...newNote,\n        [e.target.name]: e.target.value\n      });\n    }\n  };\n  const handleNewNoteSave = async () => {\n    if (newNote !== null && newNote !== void 0 && newNote.title && newNote.content) {\n      try {\n        const response = await api.post(\"/notes\", {\n          title: newNote.title,\n          content: newNote.content\n        });\n        const savedNote = response.data;\n\n        // Append the saved note to the state\n        setNotes(prevNotes => [...prevNotes, savedNote]);\n\n        // Reset the new note state and hide the form\n        setNewNote({\n          _id: \"\",\n          title: \"\",\n          content: \"\"\n        });\n        setIsAddingNote(false);\n      } catch (error) {\n        console.error(\"Error saving new note:\", error);\n      }\n    }\n  };\n  const handleSignOut = () => {\n    localStorage.removeItem(\"token\");\n    window.location.href = \"/login\";\n  };\n  useEffect(() => {\n    fetchNotes();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      position: \"relative\",\n      width: \"100%\",\n      height: \"100vh\",\n      overflow: \"hidden\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        position: \"absolute\",\n        top: 0,\n        left: 0,\n        width: \"100%\",\n        height: \"100%\",\n        backgroundImage: \"url(/assets/images/bg-img.png)\",\n        backgroundSize: \"cover\",\n        backgroundPosition: \"center\",\n        opacity: 0.9,\n        zIndex: -5\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 687,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        p: 2,\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        height: \"100%\",\n        backgroundColor: \"rgba(255, 255, 255, 0.5)\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          width: \"100%\",\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n          mb: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          sx: {\n            fontWeight: \"bold\"\n          },\n          children: \"Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 723,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"text\",\n          color: \"primary\",\n          onClick: handleSignOut,\n          children: \"Sign Out\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 726,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 714,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        sx: {\n          width: \"100%\",\n          maxWidth: 500,\n          mb: 3,\n          p: 2,\n          textAlign: \"center\",\n          boxShadow: 2,\n          borderRadius: \"10px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            fontWeight: \"bold\",\n            children: [\"Welcome, \", localStorage.getItem(\"name\") || \"User\", \"!\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 744,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"text.secondary\",\n            children: [\"Email: \", localStorage.getItem(\"email\") || \"Not Available\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 747,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 743,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 732,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          sx: {\n            width: \"100%\",\n            maxWidth: 300,\n            mb: 3,\n            py: 1.5,\n            fontWeight: \"bold\",\n            backgroundColor: \"#367AFF\",\n            borderRadius: \"10px\"\n          },\n          onClick: () => setIsAddingNote(!isAddingNote),\n          children: isAddingNote ? \"Cancel\" : \"Create Note\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 755,\n          columnNumber: 11\n        }, this), isAddingNote && /*#__PURE__*/_jsxDEV(Card, {\n          sx: {\n            width: \"100%\",\n            maxWidth: 500,\n            p: 2,\n            boxShadow: 2,\n            borderRadius: \"10px\",\n            mb: 3,\n            backgroundColor: \"#fff\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            name: \"title\",\n            label: \"Title\",\n            value: newNote === null || newNote === void 0 ? void 0 : newNote.title,\n            onChange: handleNewNoteChange,\n            sx: {\n              mb: 2\n            },\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 783,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TextField, {\n            name: \"content\",\n            label: \"Content\",\n            value: newNote === null || newNote === void 0 ? void 0 : newNote.content,\n            onChange: handleNewNoteChange,\n            multiline: true,\n            rows: 4,\n            fullWidth: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 791,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              mt: 1\n            },\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              color: \"primary\",\n              onClick: handleNewNoteSave,\n              children: \"Save Note\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 801,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outlined\",\n              color: \"secondary\",\n              onClick: () => setIsAddingNote(false),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 808,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 800,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 772,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 754,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          width: \"100%\",\n          maxWidth: 500,\n          flexGrow: 1,\n          overflowY: \"auto\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          children: \"Notes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 829,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: notes.map((note, index) => /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              sx: {\n                boxShadow: 1,\n                borderRadius: \"8px\",\n                p: 1.5,\n                backgroundColor: \"#fff\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                onClick: () => toggleExpand(note._id),\n                sx: {\n                  cursor: \"pointer\",\n                  display: \"flex\",\n                  justifyContent: \"space-between\",\n                  alignItems: \"center\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(Box, {\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"subtitle1\",\n                    fontWeight: \"bold\",\n                    children: [\"Note \", index + 1, \": \", note.title]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 853,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    color: \"text.secondary\",\n                    children: expandedNote === note._id ? note.content || \"No content available.\" : (note.content || \"\").slice(0, 15) + \"...\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 856,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 852,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Box, {\n                  children: /*#__PURE__*/_jsxDEV(IconButton, {\n                    children: expandedNote === note._id ? /*#__PURE__*/_jsxDEV(ExpandLess, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 864,\n                      columnNumber: 54\n                    }, this) : /*#__PURE__*/_jsxDEV(ExpandMore, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 864,\n                      columnNumber: 71\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 863,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 862,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 843,\n                columnNumber: 19\n              }, this), expandedNote === note._id && /*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  mt: 1\n                },\n                children: editingNote && editingNote._id === note._id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(TextField, {\n                    name: \"title\",\n                    label: \"Title\",\n                    value: editingNote.title,\n                    sx: {\n                      mb: 2\n                    },\n                    onChange: handleInputChange,\n                    fullWidth: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 873,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                    name: \"content\",\n                    label: \"Content\",\n                    value: editingNote.content,\n                    onChange: handleInputChange,\n                    multiline: true,\n                    rows: 4,\n                    fullWidth: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 881,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(Box, {\n                    sx: {\n                      display: \"flex\",\n                      justifyContent: \"space-between\",\n                      mt: 1\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(Button, {\n                      startIcon: /*#__PURE__*/_jsxDEV(Save, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 898,\n                        columnNumber: 42\n                      }, this),\n                      onClick: handleEditSave,\n                      variant: \"contained\",\n                      color: \"primary\",\n                      children: \"Save\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 897,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(Button, {\n                      startIcon: /*#__PURE__*/_jsxDEV(Cancel, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 906,\n                        columnNumber: 42\n                      }, this),\n                      onClick: handleEditCancel,\n                      variant: \"outlined\",\n                      color: \"secondary\",\n                      children: \"Cancel\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 905,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 890,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true) : /*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    display: \"flex\",\n                    gap: 1,\n                    mt: 1\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                    \"aria-label\": \"edit\",\n                    onClick: e => {\n                      e.stopPropagation();\n                      handleEditStart(note);\n                    },\n                    children: /*#__PURE__*/_jsxDEV(Edit, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 924,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 917,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                    \"aria-label\": \"delete\",\n                    onClick: e => {\n                      e.stopPropagation();\n                      handleDelete(note._id);\n                    },\n                    children: /*#__PURE__*/_jsxDEV(Delete, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 933,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 926,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 916,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 870,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 835,\n              columnNumber: 17\n            }, this)\n          }, note._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 834,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 832,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 821,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 703,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 678,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"psGPky7XvrVeyC8tBSaOK20wt78=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","Button","Box","Typography","Grid","Card","CardContent","IconButton","TextField","Delete","Edit","Save","Cancel","ExpandMore","ExpandLess","api","jsxDEV","_jsxDEV","Fragment","_Fragment","Dashboard","_s","notes","setNotes","expandedNote","setExpandedNote","editingNote","setEditingNote","newNote","setNewNote","_id","title","content","isAddingNote","setIsAddingNote","fetchNotes","response","get","data","error","console","handleDelete","id","delete","filter","note","handleEditStart","handleEditCancel","handleEditSave","put","prevNotes","map","toggleExpand","prev","handleInputChange","e","target","name","value","handleNewNoteChange","handleNewNoteSave","post","savedNote","handleSignOut","localStorage","removeItem","window","location","href","sx","position","width","height","overflow","children","top","left","backgroundImage","backgroundSize","backgroundPosition","opacity","zIndex","fileName","_jsxFileName","lineNumber","columnNumber","p","display","flexDirection","alignItems","backgroundColor","justifyContent","mb","variant","fontWeight","color","onClick","maxWidth","textAlign","boxShadow","borderRadius","getItem","py","label","onChange","fullWidth","multiline","rows","mt","flexGrow","overflowY","gutterBottom","container","spacing","index","item","xs","cursor","slice","startIcon","gap","stopPropagation","_c","$RefreshReg$"],"sources":["D:/Study/Code/Self-Projects/NoteApp/note-taking-frontend/src/components/Notes/NotesList.tsx"],"sourcesContent":["// import React, { useEffect, useState } from \"react\";\r\n// import { Button, Box, Typography, Grid } from \"@mui/material\";\r\n// import api from \"../../services/api\";\r\n// import NoteItem from \"./NoteItem\";\r\n\r\n// const NotesList: React.FC = () => {\r\n//   interface Note {\r\n//     _id: string;\r\n//     // add other properties of Note here\r\n//   }\r\n\r\n//   const [notes, setNotes] = useState<Note[]>([]);\r\n\r\n//   const fetchNotes = async () => {\r\n//     try {\r\n//       const response = await api.get(\"/notes\");\r\n//       setNotes(response.data);\r\n//     } catch (error) {\r\n//       console.error(\"Error fetching notes:\", error);\r\n//     }\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     fetchNotes();\r\n//   }, []);\r\n\r\n//   const handleDelete = (id: string) => {\r\n//     setNotes(notes.filter(note => note._id !== id));\r\n//   };\r\n\r\n//   return (\r\n//     <Box p={2}>\r\n//       <Typography variant=\"h4\" gutterBottom>Your Notes</Typography>\r\n//       <Button variant=\"contained\" color=\"primary\" href=\"/create-note\">Create Note</Button>\r\n//       <Grid container spacing={2} mt={2}>\r\n//         {notes.map((note: any) => (\r\n//           <Grid item xs={12} sm={6} md={4} key={note._id}>\r\n//             <NoteItem note={note} onDelete={handleDelete} />\r\n//           </Grid>\r\n//         ))}\r\n//       </Grid>\r\n//     </Box>\r\n//   );\r\n// };\r\n\r\n// export default NotesList;\r\n\r\n\r\n\r\n\r\n// import React, { useEffect, useState } from \"react\";\r\n// import { Button, Box, Typography, Grid, Card, CardContent, IconButton } from \"@mui/material\";\r\n// import { Delete } from \"@mui/icons-material\";\r\n// import api from \"../../services/api\";\r\n\r\n// const Dashboard: React.FC = () => {\r\n//   interface Note {\r\n//     _id: string;\r\n//     title: string;\r\n//     content: string;\r\n//   }\r\n\r\n//   const [notes, setNotes] = useState<Note[]>([]);\r\n\r\n//   const fetchNotes = async () => {\r\n//     try {\r\n//       const response = await api.get(\"/notes\");\r\n//       setNotes(response.data);\r\n//     } catch (error) {\r\n//       console.error(\"Error fetching notes:\", error);\r\n//     }\r\n//   };\r\n\r\n//   const handleDelete = async (id: string) => {\r\n//     try {\r\n//       await api.delete(`/notes/${id}`);\r\n//       setNotes(notes.filter((note) => note._id !== id));\r\n//     } catch (error) {\r\n//       console.error(\"Error deleting note:\", error);\r\n//     }\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     fetchNotes();\r\n//   }, []);\r\n\r\n//   const truncateContent = (content: string, maxLength: number = 15) =>\r\n//     content.length > maxLength ? `${content.slice(0, maxLength)}..` : content;\r\n\r\n//   return (\r\n//     <Box\r\n//       sx={{\r\n//         p: 2,\r\n//         display: \"flex\",\r\n//         flexDirection: \"column\",\r\n//         alignItems: \"center\",\r\n//         height: \"100vh\",\r\n//         backgroundColor: \"#f9f9f9\",\r\n//       }}\r\n//     >\r\n//       {/* Top Bar */}\r\n//       <Box\r\n//         sx={{\r\n//           width: \"100%\",\r\n//           display: \"flex\",\r\n//           justifyContent: \"space-between\",\r\n//           alignItems: \"center\",\r\n//           mb: 2,\r\n//         }}\r\n//       >\r\n//         <Typography variant=\"h6\" sx={{ fontWeight: \"bold\" }}>\r\n//           Dashboard\r\n//         </Typography>\r\n//         <Button variant=\"text\" color=\"primary\" href=\"/logout\">\r\n//           Sign Out\r\n//         </Button>\r\n//       </Box>\r\n\r\n//       {/* Welcome Card */}\r\n//       <Card\r\n//         sx={{\r\n//           width: \"100%\",\r\n//           maxWidth: 500,\r\n//           mb: 3,\r\n//           p: 2,\r\n//           textAlign: \"center\",\r\n//           boxShadow: 2,\r\n//           borderRadius: \"10px\",\r\n//         }}\r\n//       >\r\n//         <CardContent>\r\n//           <Typography variant=\"h6\" fontWeight=\"bold\">\r\n//             Welcome, Jonas Kahnwald!\r\n//           </Typography>\r\n//           <Typography variant=\"body2\" color=\"text.secondary\">\r\n//             Email: xxxxxx@xxxx.com\r\n//           </Typography>\r\n//         </CardContent>\r\n//       </Card>\r\n\r\n//       {/* Create Note Button */}\r\n//       <Button\r\n//         variant=\"contained\"\r\n//         href=\"/create-note\"\r\n//         sx={{\r\n//           width: \"100%\",\r\n//           maxWidth: 300,\r\n//           mb: 3,\r\n//           py: 1.5,\r\n//           fontWeight: \"bold\",\r\n//           backgroundColor: \"#367AFF\",\r\n//           borderRadius: \"10px\",\r\n//         }}\r\n//       >\r\n//         <Typography\r\n//           variant=\"button\"\r\n//           sx={{\r\n//             color: \"#FFF\",\r\n//             fontFamily: \"Inter\",\r\n//             fontSize: \"16px\",\r\n//             fontStyle: \"normal\",\r\n//             fontWeight: 600,\r\n//             lineHeight: \"120%\",\r\n//             letterSpacing: \"-0.16px\",\r\n//           }}\r\n//         >\r\n//           Create Note\r\n//         </Typography>\r\n//       </Button>\r\n\r\n//       {/* Notes List */}\r\n//       <Box\r\n//         sx={{\r\n//           width: \"100%\",\r\n//           maxWidth: 500,\r\n//           flexGrow: 1,\r\n//           overflowY: \"auto\",\r\n//         }}\r\n//       >\r\n//         <Typography variant=\"h6\" gutterBottom>\r\n//           Notes\r\n//         </Typography>\r\n//         <Grid container spacing={2}>\r\n//           {notes.map((note, index) => (\r\n//             <Grid item xs={12} key={note._id}>\r\n//               <Card\r\n//                 sx={{\r\n//                   display: \"flex\",\r\n//                   justifyContent: \"space-between\",\r\n//                   alignItems: \"center\",\r\n//                   boxShadow: 1,\r\n//                   borderRadius: \"8px\",\r\n//                   p: 1.5,\r\n//                   backgroundColor: \"#fff\",\r\n//                 }}\r\n//               >\r\n//                 <Box>\r\n//                   <Typography variant=\"subtitle1\" fontWeight=\"bold\">\r\n//                     Note {index + 1}: {note.title}\r\n//                   </Typography>\r\n//                   <Typography variant=\"body2\" color=\"text.secondary\">\r\n//                     {truncateContent(note.content)}\r\n//                   </Typography>\r\n//                 </Box>\r\n//                 <IconButton\r\n//                   aria-label=\"delete\"\r\n//                   onClick={() => handleDelete(note._id)}\r\n//                   sx={{\r\n//                     border: \"1px solid #ccc\",\r\n//                     borderRadius: \"50%\",\r\n//                     backgroundColor: \"#fff\",\r\n//                     color: \"#000\",\r\n//                     \"&:hover\": {\r\n//                       backgroundColor: \"#f5f5f5\",\r\n//                     },\r\n//                   }}\r\n//                 >\r\n//                   <Delete />\r\n//                 </IconButton>\r\n//               </Card>\r\n//             </Grid>\r\n//           ))}\r\n//         </Grid>\r\n//       </Box>\r\n//     </Box>\r\n//   );\r\n// };\r\n\r\n// export default Dashboard;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useEffect, useState } from \"react\";\r\n// import {\r\n//   Button,\r\n//   Box,\r\n//   Typography,\r\n//   Grid,\r\n//   Card,\r\n//   CardContent,\r\n//   IconButton,\r\n//   TextField,\r\n// } from \"@mui/material\";\r\n// import { Delete, Edit, Save, Cancel, ExpandMore, ExpandLess } from \"@mui/icons-material\";\r\n// import api from \"../../services/api\";\r\n\r\n// const Dashboard: React.FC = () => {\r\n//   interface Note {\r\n//     _id: string;\r\n//     title: string;\r\n//     content: string;\r\n//   }\r\n\r\n//   const [notes, setNotes] = useState<Note[]>([]);\r\n//   const [expandedNote, setExpandedNote] = useState<string | null>(null);\r\n//   const [editingNote, setEditingNote] = useState<Note | null>(null);\r\n\r\n//   const fetchNotes = async () => {\r\n//     try {\r\n//       const response = await api.get(\"/notes\");\r\n//       setNotes(response.data);\r\n//     } catch (error) {\r\n//       console.error(\"Error fetching notes:\", error);\r\n//     }\r\n//   };\r\n\r\n//   const handleDelete = async (id: string) => {\r\n//     try {\r\n//       await api.delete(`/notes/${id}`);\r\n//       setNotes(notes.filter((note) => note._id !== id));\r\n//     } catch (error) {\r\n//       console.error(\"Error deleting note:\", error);\r\n//     }\r\n//   };\r\n\r\n//   const handleEditStart = (note: Note) => {\r\n//     setEditingNote(note);\r\n//   };\r\n\r\n//   const handleEditCancel = () => {\r\n//     setEditingNote(null);\r\n//   };\r\n\r\n//   const handleEditSave = async () => {\r\n//     if (editingNote) {\r\n//       try {\r\n//         await api.put(`/notes/${editingNote._id}`, {\r\n//           title: editingNote.title,\r\n//           content: editingNote.content,\r\n//         });\r\n//         setNotes((prevNotes) =>\r\n//           prevNotes.map((note) =>\r\n//             note._id === editingNote._id ? editingNote : note\r\n//           )\r\n//         );\r\n//         setEditingNote(null);\r\n//       } catch (error) {\r\n//         console.error(\"Error updating note:\", error);\r\n//       }\r\n//     }\r\n//   };\r\n\r\n//   const toggleExpand = (id: string) => {\r\n//     setExpandedNote((prev) => (prev === id ? null : id));\r\n//     setEditingNote(null); // Exit editing mode when toggling expansion\r\n//   };\r\n\r\n//   const handleInputChange = (\r\n//     e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\r\n//   ) => {\r\n//     if (editingNote) {\r\n//       setEditingNote({ ...editingNote, [e.target.name]: e.target.value });\r\n//     }\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     fetchNotes();\r\n//   }, []);\r\n\r\n//   return (\r\n//     <Box\r\n//       sx={{\r\n//         position: \"relative\",\r\n//         width: \"100%\",\r\n//         height: \"100vh\",\r\n//         overflow: \"hidden\",\r\n//       }}\r\n//     >\r\n//       {/* Background Image */}\r\n//       <Box\r\n//         sx={{\r\n//           position: \"absolute\",\r\n//           top: 0,\r\n//           left: 0,\r\n//           width: \"100%\",\r\n//           height: \"100%\",\r\n//           backgroundImage: \"url(/assets/images/bg-img.png)\",\r\n//           backgroundSize: \"cover\",\r\n//           backgroundPosition: \"center\",\r\n//           opacity: 0.9,\r\n//           zIndex: -5,\r\n//         }}\r\n//       />\r\n\r\n//       {/* Main Content */}\r\n//       <Box\r\n//         sx={{\r\n//           p: 2,\r\n//           display: \"flex\",\r\n//           flexDirection: \"column\",\r\n//           alignItems: \"center\",\r\n//           height: \"100%\",\r\n//           backgroundColor: \"rgba(255, 255, 255, 0.5)\",\r\n//         }}\r\n//       >\r\n//         {/* Top Bar */}\r\n//         <Box\r\n//           sx={{\r\n//             width: \"100%\",\r\n//             display: \"flex\",\r\n//             justifyContent: \"space-between\",\r\n//             alignItems: \"center\",\r\n//             mb: 2,\r\n//           }}\r\n//         >\r\n//           <Typography variant=\"h6\" sx={{ fontWeight: \"bold\" }}>\r\n//             Dashboard\r\n//           </Typography>\r\n//           <Button variant=\"text\" color=\"primary\" href=\"/logout\">\r\n//             Sign Out\r\n//           </Button>\r\n//         </Box>\r\n\r\n//         {/* Welcome Card */}\r\n//         <Card\r\n//           sx={{\r\n//             width: \"100%\",\r\n//             maxWidth: 500,\r\n//             mb: 3,\r\n//             p: 2,\r\n//             textAlign: \"center\",\r\n//             boxShadow: 2,\r\n//             borderRadius: \"10px\",\r\n//           }}\r\n//         >\r\n//           <CardContent>\r\n//             <Typography variant=\"h6\" fontWeight=\"bold\">\r\n//               Welcome, Jonas Kahnwald!\r\n//             </Typography>\r\n//             <Typography variant=\"body2\" color=\"text.secondary\">\r\n//               Email: xxxxxx@xxxx.com\r\n//             </Typography>\r\n//           </CardContent>\r\n//         </Card>\r\n\r\n//         {/* Create Note Button */}\r\n//         <Button\r\n//           variant=\"contained\"\r\n//           href=\"/create-note\"\r\n//           sx={{\r\n//             width: \"100%\",\r\n//             maxWidth: 300,\r\n//             mb: 3,\r\n//             py: 1.5,\r\n//             fontWeight: \"bold\",\r\n//             backgroundColor: \"#367AFF\",\r\n//             borderRadius: \"10px\",\r\n//           }}\r\n//         >\r\n//           Create Note\r\n//         </Button>\r\n\r\n//         {/* Notes List */}\r\n//         <Box\r\n//           sx={{\r\n//             width: \"100%\",\r\n//             maxWidth: 500,\r\n//             flexGrow: 1,\r\n//             overflowY: \"auto\",\r\n//           }}\r\n//         >\r\n//           <Typography variant=\"h6\" gutterBottom>\r\n//             Notes\r\n//           </Typography>\r\n//           <Grid container spacing={2}>\r\n//             {notes.map((note, index) => (\r\n//               <Grid item xs={12} key={note._id}>\r\n//                 <Card\r\n//                   sx={{\r\n//                     boxShadow: 1,\r\n//                     borderRadius: \"8px\",\r\n//                     p: 1.5,\r\n//                     backgroundColor: \"#fff\",\r\n//                   }}\r\n//                 >\r\n//                   <Box\r\n//                     onClick={() => toggleExpand(note._id)}\r\n//                     sx={{\r\n//                       cursor: \"pointer\",\r\n//                       display: \"flex\",\r\n//                       justifyContent: \"space-between\",\r\n//                       alignItems: \"center\",\r\n//                     }}\r\n//                   >\r\n//                     <Box>\r\n//                       <Typography variant=\"subtitle1\" fontWeight=\"bold\">\r\n//                         Note {index + 1}: {note.title}\r\n//                       </Typography>\r\n//                       <Typography variant=\"body2\" color=\"text.secondary\">\r\n//                         {expandedNote === note._id\r\n//                           ? note.content\r\n//                           : note.content.slice(0, 15) + \"...\"}\r\n//                       </Typography>\r\n//                     </Box>\r\n//                     <Box>\r\n//                       <IconButton>\r\n//                         {expandedNote === note._id ? (\r\n//                           <ExpandLess />\r\n//                         ) : (\r\n//                           <ExpandMore />\r\n//                         )}\r\n//                       </IconButton>\r\n//                     </Box>\r\n//                   </Box>\r\n\r\n//                   {expandedNote === note._id && (\r\n//                     <Box sx={{ mt: 1 }}>\r\n//                       {editingNote && editingNote._id === note._id ? (\r\n//                         <>\r\n//                           <TextField\r\n//                             name=\"title\"\r\n//                             label=\"Title\"\r\n//                             value={editingNote.title}\r\n//                             sx={{ mb: 2 }} // Adds spacing below the Title field\r\n//                             onChange={handleInputChange}\r\n//                             fullWidth\r\n//                           />\r\n//                           <TextField\r\n//                             name=\"content\"\r\n//                             label=\"Content\"\r\n//                             value={editingNote.content}\r\n//                             onChange={handleInputChange}\r\n//                             multiline\r\n//                             rows={4}\r\n//                             fullWidth\r\n//                           />\r\n//                           <Box\r\n//                             sx={{\r\n//                               display: \"flex\",\r\n//                               justifyContent: \"space-between\",\r\n//                               mt: 1,\r\n//                             }}\r\n//                           >\r\n//                             <Button\r\n//                               startIcon={<Save />}\r\n//                               onClick={handleEditSave}\r\n//                               variant=\"contained\"\r\n//                               color=\"primary\"\r\n//                             >\r\n//                               Save\r\n//                             </Button>\r\n//                             <Button\r\n//                               startIcon={<Cancel />}\r\n//                               onClick={handleEditCancel}\r\n//                               variant=\"outlined\"\r\n//                               color=\"secondary\"\r\n//                             >\r\n//                               Cancel\r\n//                             </Button>\r\n//                           </Box>\r\n//                         </>\r\n//                       ) : (\r\n//                         <Box sx={{ display: \"flex\", gap: 1, mt: 1 }}>\r\n//                           <IconButton\r\n//                             aria-label=\"edit\"\r\n//                             onClick={(e) => {\r\n//                               e.stopPropagation();\r\n//                               handleEditStart(note);\r\n//                             }}\r\n//                           >\r\n//                             <Edit />\r\n//                           </IconButton>\r\n//                           <IconButton\r\n//                             aria-label=\"delete\"\r\n//                             onClick={(e) => {\r\n//                               e.stopPropagation();\r\n//                               handleDelete(note._id);\r\n//                             }}\r\n//                           >\r\n//                             <Delete />\r\n//                           </IconButton>\r\n//                         </Box>\r\n//                       )}\r\n//                     </Box>\r\n//                   )}\r\n//                 </Card>\r\n//               </Grid>\r\n//             ))}\r\n//           </Grid>\r\n//         </Box>\r\n//       </Box>\r\n//     </Box>\r\n//   );\r\n// };\r\n\r\n// export default Dashboard;\r\n\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Box,\r\n  Typography,\r\n  Grid,\r\n  Card,\r\n  CardContent,\r\n  IconButton,\r\n  TextField,\r\n} from \"@mui/material\";\r\nimport { Delete, Edit, Save, Cancel, ExpandMore, ExpandLess } from \"@mui/icons-material\";\r\nimport api from \"../../services/api\";\r\n\r\nconst Dashboard: React.FC = () => {\r\n  interface Note {\r\n    _id: string;\r\n    title: string;\r\n    content: string;\r\n  }\r\n\r\n  const [notes, setNotes] = useState<Note[]>([]);\r\n  const [expandedNote, setExpandedNote] = useState<string | null>(null);\r\n  const [editingNote, setEditingNote] = useState<Note | null>(null);\r\n  const [newNote, setNewNote] = useState<Note | null>({ _id: \"\", title: \"\", content: \"\" });\r\n  const [isAddingNote, setIsAddingNote] = useState(false);\r\n\r\n  const fetchNotes = async () => {\r\n    try {\r\n      const response = await api.get(\"/notes\");\r\n      setNotes(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching notes:\", error);\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (id: string) => {\r\n    try {\r\n      await api.delete(`/notes/${id}`);\r\n      setNotes(notes.filter((note) => note._id !== id));\r\n    } catch (error) {\r\n      console.error(\"Error deleting note:\", error);\r\n    }\r\n  };\r\n\r\n  const handleEditStart = (note: Note) => {\r\n    setEditingNote(note);\r\n  };\r\n\r\n  const handleEditCancel = () => {\r\n    setEditingNote(null);\r\n  };\r\n\r\n  const handleEditSave = async () => {\r\n    if (editingNote) {\r\n      try {\r\n        await api.put(`/notes/${editingNote._id}`, {\r\n          title: editingNote.title,\r\n          content: editingNote.content,\r\n        });\r\n        setNotes((prevNotes) =>\r\n          prevNotes.map((note) =>\r\n            note._id === editingNote._id ? editingNote : note\r\n          )\r\n        );\r\n        setEditingNote(null);\r\n      } catch (error) {\r\n        console.error(\"Error updating note:\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const toggleExpand = (id: string) => {\r\n    setExpandedNote((prev) => (prev === id ? null : id));\r\n    setEditingNote(null); // Exit editing mode when toggling expansion\r\n  };\r\n\r\n  const handleInputChange = (\r\n    e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\r\n  ) => {\r\n    if (editingNote) {\r\n      setEditingNote({ ...editingNote, [e.target.name]: e.target.value });\r\n    }\r\n  };\r\n\r\n  const handleNewNoteChange = (\r\n    e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\r\n  ) => {\r\n    if (newNote) {\r\n      setNewNote({ ...newNote, [e.target.name]: e.target.value });\r\n    }\r\n  };\r\n\r\n  const handleNewNoteSave = async () => {\r\n    if (newNote?.title && newNote.content) {\r\n      try {\r\n        const response = await api.post(\"/notes\", {\r\n          title: newNote.title,\r\n          content: newNote.content,\r\n        });\r\n        const savedNote = response.data;\r\n\r\n        // Append the saved note to the state\r\n        setNotes((prevNotes) => [...prevNotes, savedNote]);\r\n\r\n        // Reset the new note state and hide the form\r\n        setNewNote({ _id: \"\", title: \"\", content: \"\" });\r\n        setIsAddingNote(false);\r\n      } catch (error) {\r\n        console.error(\"Error saving new note:\", error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleSignOut = () => {\r\n    localStorage.removeItem(\"token\");\r\n    window.location.href = \"/login\";\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchNotes();\r\n  }, []);\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        position: \"relative\",\r\n        width: \"100%\",\r\n        height: \"100vh\",\r\n        overflow: \"hidden\",\r\n      }}\r\n    >\r\n      {/* Background Image */}\r\n      <Box\r\n        sx={{\r\n          position: \"absolute\",\r\n          top: 0,\r\n          left: 0,\r\n          width: \"100%\",\r\n          height: \"100%\",\r\n          backgroundImage: \"url(/assets/images/bg-img.png)\",\r\n          backgroundSize: \"cover\",\r\n          backgroundPosition: \"center\",\r\n          opacity: 0.9,\r\n          zIndex: -5,\r\n        }}\r\n      />\r\n\r\n      {/* Main Content */}\r\n      <Box\r\n        sx={{\r\n          p: 2,\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          alignItems: \"center\",\r\n          height: \"100%\",\r\n          backgroundColor: \"rgba(255, 255, 255, 0.5)\",\r\n        }}\r\n      >\r\n        {/* Top Bar */}\r\n        <Box\r\n          sx={{\r\n            width: \"100%\",\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n            alignItems: \"center\",\r\n            mb: 2,\r\n          }}\r\n        >\r\n          <Typography variant=\"h6\" sx={{ fontWeight: \"bold\" }}>\r\n            Dashboard\r\n          </Typography>\r\n          <Button variant=\"text\" color=\"primary\" onClick={handleSignOut}>\r\n            Sign Out\r\n          </Button>\r\n        </Box>\r\n\r\n        {/* Welcome Card */}\r\n        <Card\r\n          sx={{\r\n            width: \"100%\",\r\n            maxWidth: 500,\r\n            mb: 3,\r\n            p: 2,\r\n            textAlign: \"center\",\r\n            boxShadow: 2,\r\n            borderRadius: \"10px\",\r\n          }}\r\n        >\r\n          <CardContent>\r\n            <Typography variant=\"h6\" fontWeight=\"bold\">\r\n              Welcome, {localStorage.getItem(\"name\") || \"User\"}!\r\n            </Typography>\r\n            <Typography variant=\"body2\" color=\"text.secondary\">\r\n              Email: {localStorage.getItem(\"email\") || \"Not Available\"}\r\n            </Typography>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        {/* Create Note Button */}\r\n        <Box>\r\n          <Button\r\n            variant=\"contained\"\r\n            sx={{\r\n              width: \"100%\",\r\n              maxWidth: 300,\r\n              mb: 3,\r\n              py: 1.5,\r\n              fontWeight: \"bold\",\r\n              backgroundColor: \"#367AFF\",\r\n              borderRadius: \"10px\",\r\n            }}\r\n            onClick={() => setIsAddingNote(!isAddingNote)}\r\n          >\r\n            {isAddingNote ? \"Cancel\" : \"Create Note\"}\r\n          </Button>\r\n\r\n          {isAddingNote && (\r\n            <Card\r\n              sx={{\r\n                width: \"100%\",\r\n                maxWidth: 500,\r\n                p: 2,\r\n                boxShadow: 2,\r\n                borderRadius: \"10px\",\r\n                mb: 3,\r\n                backgroundColor: \"#fff\",\r\n              }}\r\n            >\r\n              <TextField\r\n                name=\"title\"\r\n                label=\"Title\"\r\n                value={newNote?.title}\r\n                onChange={handleNewNoteChange}\r\n                sx={{ mb: 2 }}\r\n                fullWidth\r\n              />\r\n              <TextField\r\n                name=\"content\"\r\n                label=\"Content\"\r\n                value={newNote?.content}\r\n                onChange={handleNewNoteChange}\r\n                multiline\r\n                rows={4}\r\n                fullWidth\r\n              />\r\n              <Box sx={{ display: \"flex\", justifyContent: \"space-between\", mt: 1 }}>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={handleNewNoteSave}\r\n                >\r\n                  Save Note\r\n                </Button>\r\n                <Button\r\n                  variant=\"outlined\"\r\n                  color=\"secondary\"\r\n                  onClick={() => setIsAddingNote(false)}\r\n                >\r\n                  Cancel\r\n                </Button>\r\n              </Box>\r\n            </Card>\r\n          )}\r\n        </Box>\r\n\r\n        {/* Notes List */}\r\n        <Box\r\n          sx={{\r\n            width: \"100%\",\r\n            maxWidth: 500,\r\n            flexGrow: 1,\r\n            overflowY: \"auto\",\r\n          }}\r\n        >\r\n          <Typography variant=\"h6\" gutterBottom>\r\n            Notes\r\n          </Typography>\r\n          <Grid container spacing={2}>\r\n            {notes.map((note, index) => (\r\n              <Grid item xs={12} key={note._id}>\r\n                <Card\r\n                  sx={{\r\n                    boxShadow: 1,\r\n                    borderRadius: \"8px\",\r\n                    p: 1.5,\r\n                    backgroundColor: \"#fff\",\r\n                  }}\r\n                >\r\n                  <Box\r\n                    onClick={() => toggleExpand(note._id)}\r\n                    sx={{\r\n                      cursor: \"pointer\",\r\n                      display: \"flex\",\r\n                      justifyContent: \"space-between\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <Box>\r\n                      <Typography variant=\"subtitle1\" fontWeight=\"bold\">\r\n                        Note {index + 1}: {note.title}\r\n                      </Typography>\r\n                      <Typography variant=\"body2\" color=\"text.secondary\">\r\n                        {expandedNote === note._id\r\n                          ? note.content || \"No content available.\"\r\n                          : (note.content || \"\").slice(0, 15) + \"...\"}\r\n                      </Typography>\r\n                    </Box>\r\n                    <Box>\r\n                      <IconButton>\r\n                        {expandedNote === note._id ? <ExpandLess /> : <ExpandMore />}\r\n                      </IconButton>\r\n                    </Box>\r\n                  </Box>\r\n\r\n                  {expandedNote === note._id && (\r\n                    <Box sx={{ mt: 1 }}>\r\n                      {editingNote && editingNote._id === note._id ? (\r\n                        <>\r\n                          <TextField\r\n                            name=\"title\"\r\n                            label=\"Title\"\r\n                            value={editingNote.title}\r\n                            sx={{ mb: 2 }}\r\n                            onChange={handleInputChange}\r\n                            fullWidth\r\n                          />\r\n                          <TextField\r\n                            name=\"content\"\r\n                            label=\"Content\"\r\n                            value={editingNote.content}\r\n                            onChange={handleInputChange}\r\n                            multiline\r\n                            rows={4}\r\n                            fullWidth\r\n                          />\r\n                          <Box\r\n                            sx={{\r\n                              display: \"flex\",\r\n                              justifyContent: \"space-between\",\r\n                              mt: 1,\r\n                            }}\r\n                          >\r\n                            <Button\r\n                              startIcon={<Save />}\r\n                              onClick={handleEditSave}\r\n                              variant=\"contained\"\r\n                              color=\"primary\"\r\n                            >\r\n                              Save\r\n                            </Button>\r\n                            <Button\r\n                              startIcon={<Cancel />}\r\n                              onClick={handleEditCancel}\r\n                              variant=\"outlined\"\r\n                              color=\"secondary\"\r\n                            >\r\n                              Cancel\r\n                            </Button>\r\n                          </Box>\r\n                        </>\r\n                      ) : (\r\n                        <Box sx={{ display: \"flex\", gap: 1, mt: 1 }}>\r\n                          <IconButton\r\n                            aria-label=\"edit\"\r\n                            onClick={(e) => {\r\n                              e.stopPropagation();\r\n                              handleEditStart(note);\r\n                            }}\r\n                          >\r\n                            <Edit />\r\n                          </IconButton>\r\n                          <IconButton\r\n                            aria-label=\"delete\"\r\n                            onClick={(e) => {\r\n                              e.stopPropagation();\r\n                              handleDelete(note._id);\r\n                            }}\r\n                          >\r\n                            <Delete />\r\n                          </IconButton>\r\n                        </Box>\r\n                      )}\r\n                    </Box>\r\n                  )}\r\n                </Card>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAKA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}