{"ast":null,"code":"var _jsxFileName = \"D:\\\\Study\\\\Code\\\\Self-Projects\\\\NoteApp\\\\note-taking-frontend\\\\src\\\\components\\\\Notes\\\\CreateNote.tsx\";\nimport React from \"react\";\nimport { Formik, Form, Field } from \"formik\";\nimport * as Yup from \"yup\";\nimport { Button, TextField, Box, Typography } from \"@mui/material\";\nimport api from \"../../services/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreateNote = () => {\n  const initialValues = {\n    title: \"\",\n    content: \"\"\n  };\n  const validationSchema = Yup.object({\n    title: Yup.string().required(\"Title is required\"),\n    content: Yup.string().required(\"Content is required\")\n  });\n  const handleSubmit = async values => {\n    try {\n      await api.post(\"/notes\", values);\n      window.location.href = \"/notes\"; // Redirect to notes list\n    } catch (error) {\n      console.error(\"Error creating note:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    maxWidth: 400,\n    mx: \"auto\",\n    mt: 5,\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"Create Note\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: initialValues,\n      validationSchema: validationSchema,\n      onSubmit: handleSubmit,\n      children: ({\n        errors,\n        touched\n      }) => /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Field, {\n          name: \"title\",\n          as: TextField,\n          label: \"Title\",\n          fullWidth: true,\n          margin: \"normal\",\n          error: touched.title && !!errors.title,\n          helperText: touched.title && errors.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: \"content\",\n          as: TextField,\n          label: \"Content\",\n          multiline: true,\n          rows: 4,\n          fullWidth: true,\n          margin: \"normal\",\n          error: touched.content && !!errors.content,\n          helperText: touched.content && errors.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"contained\",\n          color: \"primary\",\n          fullWidth: true,\n          children: \"Create Note\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_c = CreateNote;\nexport default CreateNote;\nvar _c;\n$RefreshReg$(_c, \"CreateNote\");","map":{"version":3,"names":["React","Formik","Form","Field","Yup","Button","TextField","Box","Typography","api","jsxDEV","_jsxDEV","CreateNote","initialValues","title","content","validationSchema","object","string","required","handleSubmit","values","post","window","location","href","error","console","maxWidth","mx","mt","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","errors","touched","name","as","label","fullWidth","margin","helperText","multiline","rows","type","color","_c","$RefreshReg$"],"sources":["D:/Study/Code/Self-Projects/NoteApp/note-taking-frontend/src/components/Notes/CreateNote.tsx"],"sourcesContent":["import React from \"react\";\r\nimport { Formik, Form, Field } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { Button, TextField, Box, Typography } from \"@mui/material\";\r\nimport api from \"../../services/api\";\r\n\r\nconst CreateNote: React.FC = () => {\r\n  const initialValues = { title: \"\", content: \"\" };\r\n\r\n  const validationSchema = Yup.object({\r\n    title: Yup.string().required(\"Title is required\"),\r\n    content: Yup.string().required(\"Content is required\"),\r\n  });\r\n\r\n  const handleSubmit = async (values: typeof initialValues) => {\r\n    try {\r\n      await api.post(\"/notes\", values);\r\n      window.location.href = \"/notes\"; // Redirect to notes list\r\n    } catch (error) {\r\n      console.error(\"Error creating note:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box maxWidth={400} mx=\"auto\" mt={5}>\r\n      <Typography variant=\"h4\" gutterBottom>Create Note</Typography>\r\n      <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={handleSubmit}>\r\n        {({ errors, touched }) => (\r\n          <Form>\r\n            <Field\r\n              name=\"title\"\r\n              as={TextField}\r\n              label=\"Title\"\r\n              fullWidth\r\n              margin=\"normal\"\r\n              error={touched.title && !!errors.title}\r\n              helperText={touched.title && errors.title}\r\n            />\r\n            <Field\r\n              name=\"content\"\r\n              as={TextField}\r\n              label=\"Content\"\r\n              multiline\r\n              rows={4}\r\n              fullWidth\r\n              margin=\"normal\"\r\n              error={touched.content && !!errors.content}\r\n              helperText={touched.content && errors.content}\r\n            />\r\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\" fullWidth>\r\n              Create Note\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default CreateNote;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}