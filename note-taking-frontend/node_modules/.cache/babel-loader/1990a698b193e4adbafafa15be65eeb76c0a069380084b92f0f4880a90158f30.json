{"ast":null,"code":"var _jsxFileName = \"D:\\\\Study\\\\Code\\\\Self-Projects\\\\NoteApp\\\\note-taking-frontend\\\\src\\\\components\\\\Notes\\\\NotesList.tsx\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from \"react\";\n// import { Button, Box, Typography, Grid } from \"@mui/material\";\n// import api from \"../../services/api\";\n// import NoteItem from \"./NoteItem\";\n\n// const NotesList: React.FC = () => {\n//   interface Note {\n//     _id: string;\n//     // add other properties of Note here\n//   }\n\n//   const [notes, setNotes] = useState<Note[]>([]);\n\n//   const fetchNotes = async () => {\n//     try {\n//       const response = await api.get(\"/notes\");\n//       setNotes(response.data);\n//     } catch (error) {\n//       console.error(\"Error fetching notes:\", error);\n//     }\n//   };\n\n//   useEffect(() => {\n//     fetchNotes();\n//   }, []);\n\n//   const handleDelete = (id: string) => {\n//     setNotes(notes.filter(note => note._id !== id));\n//   };\n\n//   return (\n//     <Box p={2}>\n//       <Typography variant=\"h4\" gutterBottom>Your Notes</Typography>\n//       <Button variant=\"contained\" color=\"primary\" href=\"/create-note\">Create Note</Button>\n//       <Grid container spacing={2} mt={2}>\n//         {notes.map((note: any) => (\n//           <Grid item xs={12} sm={6} md={4} key={note._id}>\n//             <NoteItem note={note} onDelete={handleDelete} />\n//           </Grid>\n//         ))}\n//       </Grid>\n//     </Box>\n//   );\n// };\n\n// export default NotesList;\n\nimport React, { useEffect, useState } from \"react\";\nimport { Button, Box, Typography, Grid, Card, CardContent } from \"@mui/material\";\nimport api from \"../../services/api\";\nimport NoteItem from \"./NoteItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [notes, setNotes] = useState([]);\n  const fetchNotes = async () => {\n    try {\n      const response = await api.get(\"/notes\");\n      setNotes(response.data);\n    } catch (error) {\n      console.error(\"Error fetching notes:\", error);\n    }\n  };\n  useEffect(() => {\n    fetchNotes();\n  }, []);\n  const handleDelete = id => {\n    setNotes(notes.filter(note => note._id !== id));\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      p: 2,\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      height: \"100vh\",\n      backgroundColor: \"#f9f9f9\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        width: \"100%\",\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        alignItems: \"center\",\n        mb: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        sx: {\n          fontWeight: \"bold\"\n        },\n        children: \"Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"text\",\n        color: \"primary\",\n        href: \"/logout\",\n        children: \"Sign Out\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        width: \"100%\",\n        maxWidth: 500,\n        mb: 3,\n        p: 2,\n        textAlign: \"center\",\n        boxShadow: 2\n      },\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          fontWeight: \"bold\",\n          children: \"Welcome, Jonas Kahnwald!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          color: \"text.secondary\",\n          children: \"Email: xxxxxx@xxxx.com\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      href: \"/create-note\",\n      sx: {\n        width: \"100%\",\n        maxWidth: 300,\n        mb: 3,\n        py: 1.5,\n        fontWeight: \"bold\"\n      },\n      children: \"Create Note\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        width: \"100%\",\n        maxWidth: 500,\n        flexGrow: 1,\n        overflowY: \"auto\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        children: \"Notes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: notes.map(note => /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(NoteItem, {\n            note: note,\n            onDelete: handleDelete\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 15\n          }, this)\n        }, note._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"vOaC7rmji7ux6HtcIeocV+tl1oY=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","Button","Box","Typography","Grid","Card","CardContent","api","NoteItem","jsxDEV","_jsxDEV","Dashboard","_s","notes","setNotes","fetchNotes","response","get","data","error","console","handleDelete","id","filter","note","_id","sx","p","display","flexDirection","alignItems","height","backgroundColor","children","width","justifyContent","mb","variant","fontWeight","fileName","_jsxFileName","lineNumber","columnNumber","color","href","maxWidth","textAlign","boxShadow","py","flexGrow","overflowY","gutterBottom","container","spacing","map","item","xs","onDelete","_c","$RefreshReg$"],"sources":["D:/Study/Code/Self-Projects/NoteApp/note-taking-frontend/src/components/Notes/NotesList.tsx"],"sourcesContent":["// import React, { useEffect, useState } from \"react\";\r\n// import { Button, Box, Typography, Grid } from \"@mui/material\";\r\n// import api from \"../../services/api\";\r\n// import NoteItem from \"./NoteItem\";\r\n\r\n// const NotesList: React.FC = () => {\r\n//   interface Note {\r\n//     _id: string;\r\n//     // add other properties of Note here\r\n//   }\r\n\r\n//   const [notes, setNotes] = useState<Note[]>([]);\r\n\r\n//   const fetchNotes = async () => {\r\n//     try {\r\n//       const response = await api.get(\"/notes\");\r\n//       setNotes(response.data);\r\n//     } catch (error) {\r\n//       console.error(\"Error fetching notes:\", error);\r\n//     }\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     fetchNotes();\r\n//   }, []);\r\n\r\n//   const handleDelete = (id: string) => {\r\n//     setNotes(notes.filter(note => note._id !== id));\r\n//   };\r\n\r\n//   return (\r\n//     <Box p={2}>\r\n//       <Typography variant=\"h4\" gutterBottom>Your Notes</Typography>\r\n//       <Button variant=\"contained\" color=\"primary\" href=\"/create-note\">Create Note</Button>\r\n//       <Grid container spacing={2} mt={2}>\r\n//         {notes.map((note: any) => (\r\n//           <Grid item xs={12} sm={6} md={4} key={note._id}>\r\n//             <NoteItem note={note} onDelete={handleDelete} />\r\n//           </Grid>\r\n//         ))}\r\n//       </Grid>\r\n//     </Box>\r\n//   );\r\n// };\r\n\r\n// export default NotesList;\r\n\r\n\r\n\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Button, Box, Typography, Grid, Card, CardContent } from \"@mui/material\";\r\nimport api from \"../../services/api\";\r\nimport NoteItem from \"./NoteItem\";\r\n\r\nconst Dashboard: React.FC = () => {\r\n  interface Note {\r\n    _id: string;\r\n    title: string;\r\n  }\r\n\r\n  const [notes, setNotes] = useState<Note[]>([]);\r\n\r\n  const fetchNotes = async () => {\r\n    try {\r\n      const response = await api.get(\"/notes\");\r\n      setNotes(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching notes:\", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchNotes();\r\n  }, []);\r\n\r\n  const handleDelete = (id: string) => {\r\n    setNotes(notes.filter(note => note._id !== id));\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        p: 2,\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n        height: \"100vh\",\r\n        backgroundColor: \"#f9f9f9\",\r\n      }}\r\n    >\r\n      {/* Top Bar */}\r\n      <Box\r\n        sx={{\r\n          width: \"100%\",\r\n          display: \"flex\",\r\n          justifyContent: \"space-between\",\r\n          alignItems: \"center\",\r\n          mb: 2,\r\n        }}\r\n      >\r\n        <Typography variant=\"h6\" sx={{ fontWeight: \"bold\" }}>\r\n          Dashboard\r\n        </Typography>\r\n        <Button variant=\"text\" color=\"primary\" href=\"/logout\">\r\n          Sign Out\r\n        </Button>\r\n      </Box>\r\n\r\n      {/* Welcome Card */}\r\n      <Card\r\n        sx={{\r\n          width: \"100%\",\r\n          maxWidth: 500,\r\n          mb: 3,\r\n          p: 2,\r\n          textAlign: \"center\",\r\n          boxShadow: 2,\r\n        }}\r\n      >\r\n        <CardContent>\r\n          <Typography variant=\"h6\" fontWeight=\"bold\">\r\n            Welcome, Jonas Kahnwald!\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"text.secondary\">\r\n            Email: xxxxxx@xxxx.com\r\n          </Typography>\r\n        </CardContent>\r\n      </Card>\r\n\r\n      {/* Create Note Button */}\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        href=\"/create-note\"\r\n        sx={{\r\n          width: \"100%\",\r\n          maxWidth: 300,\r\n          mb: 3,\r\n          py: 1.5,\r\n          fontWeight: \"bold\",\r\n        }}\r\n      >\r\n        Create Note\r\n      </Button>\r\n\r\n      {/* Notes List */}\r\n      <Box\r\n        sx={{\r\n          width: \"100%\",\r\n          maxWidth: 500,\r\n          flexGrow: 1,\r\n          overflowY: \"auto\",\r\n        }}\r\n      >\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          Notes\r\n        </Typography>\r\n        <Grid container spacing={2}>\r\n          {notes.map(note => (\r\n            <Grid item xs={12} key={note._id}>\r\n              <NoteItem note={note} onDelete={handleDelete} />\r\n            </Grid>\r\n          ))}\r\n        </Grid>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}