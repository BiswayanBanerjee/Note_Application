{"ast":null,"code":"var _jsxFileName = \"D:\\\\Study\\\\Code\\\\Self-Projects\\\\NoteApp\\\\note-taking-frontend\\\\src\\\\components\\\\Notes\\\\NotesList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Button, Box, Typography, Grid } from \"@mui/material\";\nimport api from \"../../services/api\";\nimport NoteItem from \"./NoteItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NotesList = () => {\n  _s();\n  const [notes, setNotes] = useState([]);\n  const fetchNotes = async () => {\n    try {\n      const response = await api.get(\"/notes\");\n      setNotes(response.data);\n    } catch (error) {\n      console.error(\"Error fetching notes:\", error);\n    }\n  };\n  useEffect(() => {\n    fetchNotes();\n  }, []);\n  const handleDelete = id => {\n    setNotes(notes.filter(note => note._id !== id));\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    p: 2,\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"Your Notes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      href: \"/create-note\",\n      children: \"Create Note\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      mt: 2,\n      children: notes.map(note => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(NoteItem, {\n          note: note,\n          onDelete: handleDelete\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this)\n      }, note._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(NotesList, \"vOaC7rmji7ux6HtcIeocV+tl1oY=\");\n_c = NotesList;\nexport default NotesList;\nvar _c;\n$RefreshReg$(_c, \"NotesList\");","map":{"version":3,"names":["React","useEffect","useState","Button","Box","Typography","Grid","api","NoteItem","jsxDEV","_jsxDEV","NotesList","_s","notes","setNotes","fetchNotes","response","get","data","error","console","handleDelete","id","filter","note","_id","p","children","variant","gutterBottom","fileName","_jsxFileName","lineNumber","columnNumber","color","href","container","spacing","mt","map","item","xs","sm","md","onDelete","_c","$RefreshReg$"],"sources":["D:/Study/Code/Self-Projects/NoteApp/note-taking-frontend/src/components/Notes/NotesList.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Button, Box, Typography, Grid } from \"@mui/material\";\r\nimport api from \"../../services/api\";\r\nimport NoteItem from \"./NoteItem\";\r\n\r\nconst NotesList: React.FC = () => {\r\n  interface Note {\r\n    _id: string;\r\n    // add other properties of Note here\r\n  }\r\n\r\n  const [notes, setNotes] = useState<Note[]>([]);\r\n\r\n  const fetchNotes = async () => {\r\n    try {\r\n      const response = await api.get(\"/notes\");\r\n      setNotes(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching notes:\", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchNotes();\r\n  }, []);\r\n\r\n  const handleDelete = (id: string) => {\r\n    setNotes(notes.filter(note => note._id !== id));\r\n  };\r\n\r\n  return (\r\n    <Box p={2}>\r\n      <Typography variant=\"h4\" gutterBottom>Your Notes</Typography>\r\n      <Button variant=\"contained\" color=\"primary\" href=\"/create-note\">Create Note</Button>\r\n      <Grid container spacing={2} mt={2}>\r\n        {notes.map((note: any) => (\r\n          <Grid item xs={12} sm={6} md={4} key={note._id}>\r\n            <NoteItem note={note} onDelete={handleDelete} />\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default NotesList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,MAAM,EAAEC,GAAG,EAAEC,UAAU,EAAEC,IAAI,QAAQ,eAAe;AAC7D,OAAOC,GAAG,MAAM,oBAAoB;AACpC,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,SAAmB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAMhC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAS,EAAE,CAAC;EAE9C,MAAMa,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMT,GAAG,CAACU,GAAG,CAAC,QAAQ,CAAC;MACxCH,QAAQ,CAACE,QAAQ,CAACE,IAAI,CAAC;IACzB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C;EACF,CAAC;EAEDlB,SAAS,CAAC,MAAM;IACdc,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMM,YAAY,GAAIC,EAAU,IAAK;IACnCR,QAAQ,CAACD,KAAK,CAACU,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,GAAG,KAAKH,EAAE,CAAC,CAAC;EACjD,CAAC;EAED,oBACEZ,OAAA,CAACN,GAAG;IAACsB,CAAC,EAAE,CAAE;IAAAC,QAAA,gBACRjB,OAAA,CAACL,UAAU;MAACuB,OAAO,EAAC,IAAI;MAACC,YAAY;MAAAF,QAAA,EAAC;IAAU;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,eAC7DvB,OAAA,CAACP,MAAM;MAACyB,OAAO,EAAC,WAAW;MAACM,KAAK,EAAC,SAAS;MAACC,IAAI,EAAC,cAAc;MAAAR,QAAA,EAAC;IAAW;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACpFvB,OAAA,CAACJ,IAAI;MAAC8B,SAAS;MAACC,OAAO,EAAE,CAAE;MAACC,EAAE,EAAE,CAAE;MAAAX,QAAA,EAC/Bd,KAAK,CAAC0B,GAAG,CAAEf,IAAS,iBACnBd,OAAA,CAACJ,IAAI;QAACkC,IAAI;QAACC,EAAE,EAAE,EAAG;QAACC,EAAE,EAAE,CAAE;QAACC,EAAE,EAAE,CAAE;QAAAhB,QAAA,eAC9BjB,OAAA,CAACF,QAAQ;UAACgB,IAAI,EAAEA,IAAK;UAACoB,QAAQ,EAAEvB;QAAa;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC,GADZT,IAAI,CAACC,GAAG;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAExC,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAACrB,EAAA,CAtCID,SAAmB;AAAAkC,EAAA,GAAnBlC,SAAmB;AAwCzB,eAAeA,SAAS;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}