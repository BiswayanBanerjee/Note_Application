{"ast":null,"code":"var _jsxFileName = \"D:\\\\Study\\\\Code\\\\Self-Projects\\\\NoteApp\\\\note-taking-frontend\\\\src\\\\components\\\\Notes\\\\NotesList.tsx\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from \"react\";\n// import { Button, Box, Typography, Grid } from \"@mui/material\";\n// import api from \"../../services/api\";\n// import NoteItem from \"./NoteItem\";\n\n// const NotesList: React.FC = () => {\n//   interface Note {\n//     _id: string;\n//     // add other properties of Note here\n//   }\n\n//   const [notes, setNotes] = useState<Note[]>([]);\n\n//   const fetchNotes = async () => {\n//     try {\n//       const response = await api.get(\"/notes\");\n//       setNotes(response.data);\n//     } catch (error) {\n//       console.error(\"Error fetching notes:\", error);\n//     }\n//   };\n\n//   useEffect(() => {\n//     fetchNotes();\n//   }, []);\n\n//   const handleDelete = (id: string) => {\n//     setNotes(notes.filter(note => note._id !== id));\n//   };\n\n//   return (\n//     <Box p={2}>\n//       <Typography variant=\"h4\" gutterBottom>Your Notes</Typography>\n//       <Button variant=\"contained\" color=\"primary\" href=\"/create-note\">Create Note</Button>\n//       <Grid container spacing={2} mt={2}>\n//         {notes.map((note: any) => (\n//           <Grid item xs={12} sm={6} md={4} key={note._id}>\n//             <NoteItem note={note} onDelete={handleDelete} />\n//           </Grid>\n//         ))}\n//       </Grid>\n//     </Box>\n//   );\n// };\n\n// export default NotesList;\n\n// import React, { useEffect, useState } from \"react\";\n// import { Button, Box, Typography, Grid, Card, CardContent, IconButton } from \"@mui/material\";\n// import { Delete } from \"@mui/icons-material\";\n// import api from \"../../services/api\";\n\n// const Dashboard: React.FC = () => {\n//   interface Note {\n//     _id: string;\n//     title: string;\n//     content: string;\n//   }\n\n//   const [notes, setNotes] = useState<Note[]>([]);\n\n//   const fetchNotes = async () => {\n//     try {\n//       const response = await api.get(\"/notes\");\n//       setNotes(response.data);\n//     } catch (error) {\n//       console.error(\"Error fetching notes:\", error);\n//     }\n//   };\n\n//   const handleDelete = async (id: string) => {\n//     try {\n//       await api.delete(`/notes/${id}`);\n//       setNotes(notes.filter((note) => note._id !== id));\n//     } catch (error) {\n//       console.error(\"Error deleting note:\", error);\n//     }\n//   };\n\n//   useEffect(() => {\n//     fetchNotes();\n//   }, []);\n\n//   const truncateContent = (content: string, maxLength: number = 15) =>\n//     content.length > maxLength ? `${content.slice(0, maxLength)}..` : content;\n\n//   return (\n//     <Box\n//       sx={{\n//         p: 2,\n//         display: \"flex\",\n//         flexDirection: \"column\",\n//         alignItems: \"center\",\n//         height: \"100vh\",\n//         backgroundColor: \"#f9f9f9\",\n//       }}\n//     >\n//       {/* Top Bar */}\n//       <Box\n//         sx={{\n//           width: \"100%\",\n//           display: \"flex\",\n//           justifyContent: \"space-between\",\n//           alignItems: \"center\",\n//           mb: 2,\n//         }}\n//       >\n//         <Typography variant=\"h6\" sx={{ fontWeight: \"bold\" }}>\n//           Dashboard\n//         </Typography>\n//         <Button variant=\"text\" color=\"primary\" href=\"/logout\">\n//           Sign Out\n//         </Button>\n//       </Box>\n\n//       {/* Welcome Card */}\n//       <Card\n//         sx={{\n//           width: \"100%\",\n//           maxWidth: 500,\n//           mb: 3,\n//           p: 2,\n//           textAlign: \"center\",\n//           boxShadow: 2,\n//           borderRadius: \"10px\",\n//         }}\n//       >\n//         <CardContent>\n//           <Typography variant=\"h6\" fontWeight=\"bold\">\n//             Welcome, Jonas Kahnwald!\n//           </Typography>\n//           <Typography variant=\"body2\" color=\"text.secondary\">\n//             Email: xxxxxx@xxxx.com\n//           </Typography>\n//         </CardContent>\n//       </Card>\n\n//       {/* Create Note Button */}\n//       <Button\n//         variant=\"contained\"\n//         href=\"/create-note\"\n//         sx={{\n//           width: \"100%\",\n//           maxWidth: 300,\n//           mb: 3,\n//           py: 1.5,\n//           fontWeight: \"bold\",\n//           backgroundColor: \"#367AFF\",\n//           borderRadius: \"10px\",\n//         }}\n//       >\n//         <Typography\n//           variant=\"button\"\n//           sx={{\n//             color: \"#FFF\",\n//             fontFamily: \"Inter\",\n//             fontSize: \"16px\",\n//             fontStyle: \"normal\",\n//             fontWeight: 600,\n//             lineHeight: \"120%\",\n//             letterSpacing: \"-0.16px\",\n//           }}\n//         >\n//           Create Note\n//         </Typography>\n//       </Button>\n\n//       {/* Notes List */}\n//       <Box\n//         sx={{\n//           width: \"100%\",\n//           maxWidth: 500,\n//           flexGrow: 1,\n//           overflowY: \"auto\",\n//         }}\n//       >\n//         <Typography variant=\"h6\" gutterBottom>\n//           Notes\n//         </Typography>\n//         <Grid container spacing={2}>\n//           {notes.map((note, index) => (\n//             <Grid item xs={12} key={note._id}>\n//               <Card\n//                 sx={{\n//                   display: \"flex\",\n//                   justifyContent: \"space-between\",\n//                   alignItems: \"center\",\n//                   boxShadow: 1,\n//                   borderRadius: \"8px\",\n//                   p: 1.5,\n//                   backgroundColor: \"#fff\",\n//                 }}\n//               >\n//                 <Box>\n//                   <Typography variant=\"subtitle1\" fontWeight=\"bold\">\n//                     Note {index + 1}: {note.title}\n//                   </Typography>\n//                   <Typography variant=\"body2\" color=\"text.secondary\">\n//                     {truncateContent(note.content)}\n//                   </Typography>\n//                 </Box>\n//                 <IconButton\n//                   aria-label=\"delete\"\n//                   onClick={() => handleDelete(note._id)}\n//                   sx={{\n//                     border: \"1px solid #ccc\",\n//                     borderRadius: \"50%\",\n//                     backgroundColor: \"#fff\",\n//                     color: \"#000\",\n//                     \"&:hover\": {\n//                       backgroundColor: \"#f5f5f5\",\n//                     },\n//                   }}\n//                 >\n//                   <Delete />\n//                 </IconButton>\n//               </Card>\n//             </Grid>\n//           ))}\n//         </Grid>\n//       </Box>\n//     </Box>\n//   );\n// };\n\n// export default Dashboard;\n\nimport React, { useEffect, useState } from \"react\";\nimport { Button, Box, Typography, Grid, Card, CardContent, IconButton } from \"@mui/material\";\nimport { Delete } from \"@mui/icons-material\";\nimport api from \"../../services/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [notes, setNotes] = useState([]);\n  const fetchNotes = async () => {\n    try {\n      const response = await api.get(\"/notes\");\n      setNotes(response.data);\n    } catch (error) {\n      console.error(\"Error fetching notes:\", error);\n    }\n  };\n  const handleDelete = async id => {\n    try {\n      await api.delete(`/notes/${id}`);\n      setNotes(notes.filter(note => note._id !== id));\n    } catch (error) {\n      console.error(\"Error deleting note:\", error);\n    }\n  };\n  const truncateContent = (content, maxLength = 15) => content.length > maxLength ? `${content.slice(0, maxLength)}..` : content;\n  useEffect(() => {\n    fetchNotes();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      position: \"relative\",\n      width: \"100%\",\n      height: \"100vh\",\n      overflow: \"hidden\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        position: \"absolute\",\n        top: 0,\n        left: 0,\n        width: \"100%\",\n        height: \"100%\",\n        backgroundImage: \"url(/assets/images/bg-img.)\",\n        backgroundSize: \"cover\",\n        backgroundPosition: \"center\",\n        zIndex: -1\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        p: 2,\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        height: \"100%\",\n        backgroundColor: \"rgba(255, 255, 255, 0.8)\" // Optional for readability\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          width: \"100%\",\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\",\n          mb: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          sx: {\n            fontWeight: \"bold\"\n          },\n          children: \"Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"text\",\n          color: \"primary\",\n          href: \"/logout\",\n          children: \"Sign Out\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card, {\n        sx: {\n          width: \"100%\",\n          maxWidth: 500,\n          mb: 3,\n          p: 2,\n          textAlign: \"center\",\n          boxShadow: 2,\n          borderRadius: \"10px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(CardContent, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            fontWeight: \"bold\",\n            children: \"Welcome, Jonas Kahnwald!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"text.secondary\",\n            children: \"Email: xxxxxx@xxxx.com\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        href: \"/create-note\",\n        sx: {\n          width: \"100%\",\n          maxWidth: 300,\n          mb: 3,\n          py: 1.5,\n          fontWeight: \"bold\",\n          backgroundColor: \"#367AFF\",\n          borderRadius: \"10px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"button\",\n          sx: {\n            color: \"#FFF\",\n            fontFamily: \"Inter\",\n            fontSize: \"16px\",\n            fontStyle: \"normal\",\n            fontWeight: 600,\n            lineHeight: \"120%\",\n            letterSpacing: \"-0.16px\"\n          },\n          children: \"Create Note\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          width: \"100%\",\n          maxWidth: 500,\n          flexGrow: 1,\n          overflowY: \"auto\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          gutterBottom: true,\n          children: \"Notes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: notes.map((note, index) => /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              sx: {\n                display: \"flex\",\n                justifyContent: \"space-between\",\n                alignItems: \"center\",\n                boxShadow: 1,\n                borderRadius: \"8px\",\n                p: 1.5,\n                backgroundColor: \"#fff\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"subtitle1\",\n                  fontWeight: \"bold\",\n                  children: [\"Note \", index + 1, \": \", note.title]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 411,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  color: \"text.secondary\",\n                  children: truncateContent(note.content)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 414,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 410,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                \"aria-label\": \"delete\",\n                onClick: () => handleDelete(note._id),\n                sx: {\n                  border: \"1px solid #ccc\",\n                  borderRadius: \"50%\",\n                  backgroundColor: \"#fff\",\n                  color: \"#000\",\n                  \"&:hover\": {\n                    backgroundColor: \"#f5f5f5\"\n                  }\n                },\n                children: /*#__PURE__*/_jsxDEV(Delete, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 431,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 418,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 399,\n              columnNumber: 17\n            }, this)\n          }, note._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 279,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"vOaC7rmji7ux6HtcIeocV+tl1oY=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","Button","Box","Typography","Grid","Card","CardContent","IconButton","Delete","api","jsxDEV","_jsxDEV","Dashboard","_s","notes","setNotes","fetchNotes","response","get","data","error","console","handleDelete","id","delete","filter","note","_id","truncateContent","content","maxLength","length","slice","sx","position","width","height","overflow","children","top","left","backgroundImage","backgroundSize","backgroundPosition","zIndex","fileName","_jsxFileName","lineNumber","columnNumber","p","display","flexDirection","alignItems","backgroundColor","justifyContent","mb","variant","fontWeight","color","href","maxWidth","textAlign","boxShadow","borderRadius","py","fontFamily","fontSize","fontStyle","lineHeight","letterSpacing","flexGrow","overflowY","gutterBottom","container","spacing","map","index","item","xs","title","onClick","border","_c","$RefreshReg$"],"sources":["D:/Study/Code/Self-Projects/NoteApp/note-taking-frontend/src/components/Notes/NotesList.tsx"],"sourcesContent":["// import React, { useEffect, useState } from \"react\";\r\n// import { Button, Box, Typography, Grid } from \"@mui/material\";\r\n// import api from \"../../services/api\";\r\n// import NoteItem from \"./NoteItem\";\r\n\r\n// const NotesList: React.FC = () => {\r\n//   interface Note {\r\n//     _id: string;\r\n//     // add other properties of Note here\r\n//   }\r\n\r\n//   const [notes, setNotes] = useState<Note[]>([]);\r\n\r\n//   const fetchNotes = async () => {\r\n//     try {\r\n//       const response = await api.get(\"/notes\");\r\n//       setNotes(response.data);\r\n//     } catch (error) {\r\n//       console.error(\"Error fetching notes:\", error);\r\n//     }\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     fetchNotes();\r\n//   }, []);\r\n\r\n//   const handleDelete = (id: string) => {\r\n//     setNotes(notes.filter(note => note._id !== id));\r\n//   };\r\n\r\n//   return (\r\n//     <Box p={2}>\r\n//       <Typography variant=\"h4\" gutterBottom>Your Notes</Typography>\r\n//       <Button variant=\"contained\" color=\"primary\" href=\"/create-note\">Create Note</Button>\r\n//       <Grid container spacing={2} mt={2}>\r\n//         {notes.map((note: any) => (\r\n//           <Grid item xs={12} sm={6} md={4} key={note._id}>\r\n//             <NoteItem note={note} onDelete={handleDelete} />\r\n//           </Grid>\r\n//         ))}\r\n//       </Grid>\r\n//     </Box>\r\n//   );\r\n// };\r\n\r\n// export default NotesList;\r\n\r\n\r\n\r\n\r\n// import React, { useEffect, useState } from \"react\";\r\n// import { Button, Box, Typography, Grid, Card, CardContent, IconButton } from \"@mui/material\";\r\n// import { Delete } from \"@mui/icons-material\";\r\n// import api from \"../../services/api\";\r\n\r\n// const Dashboard: React.FC = () => {\r\n//   interface Note {\r\n//     _id: string;\r\n//     title: string;\r\n//     content: string;\r\n//   }\r\n\r\n//   const [notes, setNotes] = useState<Note[]>([]);\r\n\r\n//   const fetchNotes = async () => {\r\n//     try {\r\n//       const response = await api.get(\"/notes\");\r\n//       setNotes(response.data);\r\n//     } catch (error) {\r\n//       console.error(\"Error fetching notes:\", error);\r\n//     }\r\n//   };\r\n\r\n//   const handleDelete = async (id: string) => {\r\n//     try {\r\n//       await api.delete(`/notes/${id}`);\r\n//       setNotes(notes.filter((note) => note._id !== id));\r\n//     } catch (error) {\r\n//       console.error(\"Error deleting note:\", error);\r\n//     }\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     fetchNotes();\r\n//   }, []);\r\n\r\n//   const truncateContent = (content: string, maxLength: number = 15) =>\r\n//     content.length > maxLength ? `${content.slice(0, maxLength)}..` : content;\r\n\r\n//   return (\r\n//     <Box\r\n//       sx={{\r\n//         p: 2,\r\n//         display: \"flex\",\r\n//         flexDirection: \"column\",\r\n//         alignItems: \"center\",\r\n//         height: \"100vh\",\r\n//         backgroundColor: \"#f9f9f9\",\r\n//       }}\r\n//     >\r\n//       {/* Top Bar */}\r\n//       <Box\r\n//         sx={{\r\n//           width: \"100%\",\r\n//           display: \"flex\",\r\n//           justifyContent: \"space-between\",\r\n//           alignItems: \"center\",\r\n//           mb: 2,\r\n//         }}\r\n//       >\r\n//         <Typography variant=\"h6\" sx={{ fontWeight: \"bold\" }}>\r\n//           Dashboard\r\n//         </Typography>\r\n//         <Button variant=\"text\" color=\"primary\" href=\"/logout\">\r\n//           Sign Out\r\n//         </Button>\r\n//       </Box>\r\n\r\n//       {/* Welcome Card */}\r\n//       <Card\r\n//         sx={{\r\n//           width: \"100%\",\r\n//           maxWidth: 500,\r\n//           mb: 3,\r\n//           p: 2,\r\n//           textAlign: \"center\",\r\n//           boxShadow: 2,\r\n//           borderRadius: \"10px\",\r\n//         }}\r\n//       >\r\n//         <CardContent>\r\n//           <Typography variant=\"h6\" fontWeight=\"bold\">\r\n//             Welcome, Jonas Kahnwald!\r\n//           </Typography>\r\n//           <Typography variant=\"body2\" color=\"text.secondary\">\r\n//             Email: xxxxxx@xxxx.com\r\n//           </Typography>\r\n//         </CardContent>\r\n//       </Card>\r\n\r\n//       {/* Create Note Button */}\r\n//       <Button\r\n//         variant=\"contained\"\r\n//         href=\"/create-note\"\r\n//         sx={{\r\n//           width: \"100%\",\r\n//           maxWidth: 300,\r\n//           mb: 3,\r\n//           py: 1.5,\r\n//           fontWeight: \"bold\",\r\n//           backgroundColor: \"#367AFF\",\r\n//           borderRadius: \"10px\",\r\n//         }}\r\n//       >\r\n//         <Typography\r\n//           variant=\"button\"\r\n//           sx={{\r\n//             color: \"#FFF\",\r\n//             fontFamily: \"Inter\",\r\n//             fontSize: \"16px\",\r\n//             fontStyle: \"normal\",\r\n//             fontWeight: 600,\r\n//             lineHeight: \"120%\",\r\n//             letterSpacing: \"-0.16px\",\r\n//           }}\r\n//         >\r\n//           Create Note\r\n//         </Typography>\r\n//       </Button>\r\n\r\n//       {/* Notes List */}\r\n//       <Box\r\n//         sx={{\r\n//           width: \"100%\",\r\n//           maxWidth: 500,\r\n//           flexGrow: 1,\r\n//           overflowY: \"auto\",\r\n//         }}\r\n//       >\r\n//         <Typography variant=\"h6\" gutterBottom>\r\n//           Notes\r\n//         </Typography>\r\n//         <Grid container spacing={2}>\r\n//           {notes.map((note, index) => (\r\n//             <Grid item xs={12} key={note._id}>\r\n//               <Card\r\n//                 sx={{\r\n//                   display: \"flex\",\r\n//                   justifyContent: \"space-between\",\r\n//                   alignItems: \"center\",\r\n//                   boxShadow: 1,\r\n//                   borderRadius: \"8px\",\r\n//                   p: 1.5,\r\n//                   backgroundColor: \"#fff\",\r\n//                 }}\r\n//               >\r\n//                 <Box>\r\n//                   <Typography variant=\"subtitle1\" fontWeight=\"bold\">\r\n//                     Note {index + 1}: {note.title}\r\n//                   </Typography>\r\n//                   <Typography variant=\"body2\" color=\"text.secondary\">\r\n//                     {truncateContent(note.content)}\r\n//                   </Typography>\r\n//                 </Box>\r\n//                 <IconButton\r\n//                   aria-label=\"delete\"\r\n//                   onClick={() => handleDelete(note._id)}\r\n//                   sx={{\r\n//                     border: \"1px solid #ccc\",\r\n//                     borderRadius: \"50%\",\r\n//                     backgroundColor: \"#fff\",\r\n//                     color: \"#000\",\r\n//                     \"&:hover\": {\r\n//                       backgroundColor: \"#f5f5f5\",\r\n//                     },\r\n//                   }}\r\n//                 >\r\n//                   <Delete />\r\n//                 </IconButton>\r\n//               </Card>\r\n//             </Grid>\r\n//           ))}\r\n//         </Grid>\r\n//       </Box>\r\n//     </Box>\r\n//   );\r\n// };\r\n\r\n// export default Dashboard;\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Button,\r\n  Box,\r\n  Typography,\r\n  Grid,\r\n  Card,\r\n  CardContent,\r\n  IconButton,\r\n} from \"@mui/material\";\r\nimport { Delete } from \"@mui/icons-material\";\r\nimport api from \"../../services/api\";\r\n\r\nconst Dashboard: React.FC = () => {\r\n  interface Note {\r\n    _id: string;\r\n    title: string;\r\n    content: string;\r\n  }\r\n\r\n  const [notes, setNotes] = useState<Note[]>([]);\r\n\r\n  const fetchNotes = async () => {\r\n    try {\r\n      const response = await api.get(\"/notes\");\r\n      setNotes(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching notes:\", error);\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (id: string) => {\r\n    try {\r\n      await api.delete(`/notes/${id}`);\r\n      setNotes(notes.filter((note) => note._id !== id));\r\n    } catch (error) {\r\n      console.error(\"Error deleting note:\", error);\r\n    }\r\n  };\r\n\r\n  const truncateContent = (content: string, maxLength: number = 15) =>\r\n    content.length > maxLength ? `${content.slice(0, maxLength)}..` : content;\r\n\r\n  useEffect(() => {\r\n    fetchNotes();\r\n  }, []);\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        position: \"relative\",\r\n        width: \"100%\",\r\n        height: \"100vh\",\r\n        overflow: \"hidden\",\r\n      }}\r\n    >\r\n      {/* Background Image */}\r\n      <Box\r\n        sx={{\r\n          position: \"absolute\",\r\n          top: 0,\r\n          left: 0,\r\n          width: \"100%\",\r\n          height: \"100%\",\r\n          backgroundImage: \"url(/assets/images/bg-img.)\",\r\n          backgroundSize: \"cover\",\r\n          backgroundPosition: \"center\",\r\n          \r\n          zIndex: -1,\r\n        }}\r\n      />\r\n\r\n      {/* Main Content */}\r\n      <Box\r\n        sx={{\r\n          p: 2,\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          alignItems: \"center\",\r\n          height: \"100%\",\r\n          backgroundColor: \"rgba(255, 255, 255, 0.8)\", // Optional for readability\r\n        }}\r\n      >\r\n        {/* Top Bar */}\r\n        <Box\r\n          sx={{\r\n            width: \"100%\",\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n            alignItems: \"center\",\r\n            mb: 2,\r\n          }}\r\n        >\r\n          <Typography variant=\"h6\" sx={{ fontWeight: \"bold\" }}>\r\n            Dashboard\r\n          </Typography>\r\n          <Button variant=\"text\" color=\"primary\" href=\"/logout\">\r\n            Sign Out\r\n          </Button>\r\n        </Box>\r\n\r\n        {/* Welcome Card */}\r\n        <Card\r\n          sx={{\r\n            width: \"100%\",\r\n            maxWidth: 500,\r\n            mb: 3,\r\n            p: 2,\r\n            textAlign: \"center\",\r\n            boxShadow: 2,\r\n            borderRadius: \"10px\",\r\n          }}\r\n        >\r\n          <CardContent>\r\n            <Typography variant=\"h6\" fontWeight=\"bold\">\r\n              Welcome, Jonas Kahnwald!\r\n            </Typography>\r\n            <Typography variant=\"body2\" color=\"text.secondary\">\r\n              Email: xxxxxx@xxxx.com\r\n            </Typography>\r\n          </CardContent>\r\n        </Card>\r\n\r\n        {/* Create Note Button */}\r\n        <Button\r\n          variant=\"contained\"\r\n          href=\"/create-note\"\r\n          sx={{\r\n            width: \"100%\",\r\n            maxWidth: 300,\r\n            mb: 3,\r\n            py: 1.5,\r\n            fontWeight: \"bold\",\r\n            backgroundColor: \"#367AFF\",\r\n            borderRadius: \"10px\",\r\n          }}\r\n        >\r\n          <Typography\r\n            variant=\"button\"\r\n            sx={{\r\n              color: \"#FFF\",\r\n              fontFamily: \"Inter\",\r\n              fontSize: \"16px\",\r\n              fontStyle: \"normal\",\r\n              fontWeight: 600,\r\n              lineHeight: \"120%\",\r\n              letterSpacing: \"-0.16px\",\r\n            }}\r\n          >\r\n            Create Note\r\n          </Typography>\r\n        </Button>\r\n\r\n        {/* Notes List */}\r\n        <Box\r\n          sx={{\r\n            width: \"100%\",\r\n            maxWidth: 500,\r\n            flexGrow: 1,\r\n            overflowY: \"auto\",\r\n          }}\r\n        >\r\n          <Typography variant=\"h6\" gutterBottom>\r\n            Notes\r\n          </Typography>\r\n          <Grid container spacing={2}>\r\n            {notes.map((note, index) => (\r\n              <Grid item xs={12} key={note._id}>\r\n                <Card\r\n                  sx={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"space-between\",\r\n                    alignItems: \"center\",\r\n                    boxShadow: 1,\r\n                    borderRadius: \"8px\",\r\n                    p: 1.5,\r\n                    backgroundColor: \"#fff\",\r\n                  }}\r\n                >\r\n                  <Box>\r\n                    <Typography variant=\"subtitle1\" fontWeight=\"bold\">\r\n                      Note {index + 1}: {note.title}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" color=\"text.secondary\">\r\n                      {truncateContent(note.content)}\r\n                    </Typography>\r\n                  </Box>\r\n                  <IconButton\r\n                    aria-label=\"delete\"\r\n                    onClick={() => handleDelete(note._id)}\r\n                    sx={{\r\n                      border: \"1px solid #ccc\",\r\n                      borderRadius: \"50%\",\r\n                      backgroundColor: \"#fff\",\r\n                      color: \"#000\",\r\n                      \"&:hover\": {\r\n                        backgroundColor: \"#f5f5f5\",\r\n                      },\r\n                    }}\r\n                  >\r\n                    <Delete />\r\n                  </IconButton>\r\n                </Card>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAKA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SACEC,MAAM,EACNC,GAAG,EACHC,UAAU,EACVC,IAAI,EACJC,IAAI,EACJC,WAAW,EACXC,UAAU,QACL,eAAe;AA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}